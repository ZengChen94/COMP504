package controller;

import java.util.List;

import commonG14.IChatRoom;
import commonG14.IUser;
import model.ChatRoomAppModel;
import model.IModel2ViewAdapter;
import view.ChatRoomAppView;
import view.IView2ModelAdapter;

/**
 * chat room controller.
 *
 */
public class ChatRoomAppController {
	
	private ChatRoomAppView<IUser, IChatRoom> view;
	private ChatRoomAppModel model;
	
	/**
	 * Constructor.
	 */
	public ChatRoomAppController() {
		view = new ChatRoomAppView<>(new IView2ModelAdapter<IUser, IChatRoom>() {

			@Override
			public void startServer(String userName, String serverName) {
				model.startServer(userName, serverName);
			}

			@Override
			public void makeChatRoom(String chatRoomName) {
				model.makeChatRoom(chatRoomName);
			}

			@Override
			public void connectToIP(String ipAddress) {
				model.connectToIP(ipAddress);
			}

			@Override
			public void inviteUser(IUser host) {
				model.inviteUser(host);
			}

			@Override
			public void requestChatRooms(IUser host) {
				model.requestChatRooms(host);
			}

			@Override
			public void exit() {
				model.exit();
			}

			@Override
			public void exitChatRoom(IChatRoom chatRoom) {
				model.exitChatRoom(chatRoom);
			}

			@Override
			public void sendText(String text, IChatRoom chatRoom) {
				model.sendText(text, chatRoom);
			}

			@Override
			public void joinChatRoom(IChatRoom chatRoom) {
				model.joinChatRoom(chatRoom);
			}
			
		});
		model = new ChatRoomAppModel(new IModel2ViewAdapter() {
			
			@Override
			public void appendInfo(String text) {
				view.appendInfo(text);
			}

			@Override
			public void listConnectedUsers(List<IUser> users) {
				view.listConnectedHosts(users);
			}

			@Override
			public void listChatRooms(Iterable<IChatRoom> chatRoomLIst) {
				view.listChatRooms(chatRoomLIst);
			}

			@Override
			public void createChatRoomComponent(IChatRoom chatRoomStub, String chatRoomName) {
				view.createChatRoomComponent(chatRoomStub, chatRoomName);
			}

			@Override
			public void appendToChatRoom(String text, IChatRoom chatRoom) {
				view.appendText(text, chatRoom);
			}
		});
	}
	
	/**
	 * start the controller.
	 */
	public void start() {
		view.start();
		model.start();
	}
	
	/**
	 * @param args input arguments.
	 */
	public static void main(String[] args) {
		ChatRoomAppController controller = new ChatRoomAppController();
		controller.start();
	}
}
