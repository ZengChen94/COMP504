package commonG14;

import java.io.Serializable;
import java.util.UUID;

import commonG14.DataPacketChatRoom;
import commonG14.IUser;
/**
 * A generalized chat room interface that defines a set of operations of a chat room.
 * A chat room is a FULLY SERIALIZABLE object that is wholly transmitted from one machine to another machine
 */
public interface IChatRoom extends Serializable{
	
	/**
	 * Get the name of the chat room
	 * @return The name of the chat room
	 */
	public String getName();
	
	/**
	 * Get all users' stubs in the chat room at the moment the method is called
	 * @return All the users' stubs in the chat room at the moment. 
	 */
	public Iterable<IUser> getUsers();
	
	/**
	 * Send a data packet to everyone else in the chat room except the sender.
	 * For a preferred implementation, this method should send the data packet asynchronously,
	 * i.e. this method delegates the sending process into a new thread and returns without 
	 * getting the returned status from the receivers. 
	 * @param data The data packet to be sent
	 */
	public <T> void sendPacketAsyn(DataPacketChatRoom<T> data);
	
	/**
	 * Send a data packet to everyone else in the chat room except the sender.
	 * The difference of this method between sendPackerAsyn() is that this method send the data packet
	 * in a synchronous way, i.e. the method only returns when get returned status from every receiver. 
	 * @param data the data packet to be sent
	 * @return Returned status of all receivers
	 */
	public  Iterable<DataPacketChatRoom<?>> sendPacket(DataPacketChatRoom<?> data);
	
	/**
	 * Add a user to this chat room.
	 * The implementation should add the user in the local chat room and then inform others in the chat room.
	 * @param user the user to be add
	 * @return False if the user is already in the chat room; True if successfully add the user
	 */
	public boolean addUser(IUser user);
	
	/**
	 * Remove a user from this chat room.
	 * The implementation should remove the user in the local chat room and then inform others in the chat room.
	 * @param user the user to remove
	 * @return False if the user is actually not in the chat room; True if successfully remove the user
	 */
	public boolean removeUser(IUser user);
	
	public void sendMessage(String text, IUser user);

	public UUID getUUID();
}
