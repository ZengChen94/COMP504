<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_t1opsK4iEeeb3J7owtunSg" name="HW06">
    <eAnnotations xmi:id="_t-XH4K4iEeeb3J7owtunSg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_t-XH4a4iEeeb3J7owtunSg" source="codegen">
        <details xmi:id="_t-XH4q4iEeeb3J7owtunSg" key="codegenDirectory" value="/HW06/src"/>
        <details xmi:id="_vcB_wK4iEeeb3J7owtunSg" key="AssociatedSourceCode" value="/HW06/src/controller/Controller.java;31353331/1;/HW06/src/model/IViewAdapter.java;712461632/1;/HW06/src/model/Model.java;3718344804/1;/HW06/src/model/visitor/PlayMusicVisitor.java;3247520080/1;/HW06/src/model/visitor/ToStringVisitor.java;1460716411/1;/HW06/src/provided/abcParser/ABCParser.java;1951119661/1;/HW06/src/provided/music/APhraseVisitor.java;2652719177/1;/HW06/src/provided/music/Chord.java;1971309365/1;/HW06/src/provided/music/DecoratorSeqList.java;2350535095/1;/HW06/src/provided/music/FineToggleDecoratorSeqList.java;2903020233/1;/HW06/src/provided/music/Header.java;855643762/1;/HW06/src/provided/music/INote.java;507512117/1;/HW06/src/provided/music/IPhrase.java;1122806289/1;/HW06/src/provided/music/IPhraseVisitor.java;2583970647/1;/HW06/src/provided/music/IPhraseVisitorCmd.java;3144788355/1;/HW06/src/provided/music/ISeqList.java;1752096597/1;/HW06/src/provided/music/MTSeqList.java;797718925/1;/HW06/src/provided/music/NESeqList.java;2982850294/1;/HW06/src/provided/music/Note.java;1288387490/1;/HW06/src/provided/music/NoteCollection.java;2061496451/1;/HW06/src/provided/music/ToggleDecoratorSeqList.java;3430233739/1;/HW06/src/provided/music/Triplet.java;163966482/1;/HW06/src/provided/music/Tuplet.java;799272193/1;/HW06/src/provided/player/ISequencePlayerStatus.java;28894442/1;/HW06/src/provided/player/SequencePlayer.java;3184922008/1;/HW06/src/provided/player/SequencePlayer2.java;639118669/1;/HW06/src/provided/token/ATokVisitor.java;266826903/1;/HW06/src/provided/token/ITokVisitor.java;275599564/1;/HW06/src/provided/token/ITokVisitorCmd.java;4098180758/1;/HW06/src/provided/token/ITokenFactory.java;1037223879/1;/HW06/src/provided/token/Token.java;2670746935/1;/HW06/src/provided/token/TokenFactory.java;1190700287/1;/HW06/src/provided/token/tokenizer/ABCTokenizer.java;2295607884/1;/HW06/src/provided/token/tokenizer/IStringTokenizer.java;2530580852/1;/HW06/src/provided/token/tokenizer/ITokenizer.java;1031763823/1;/HW06/src/provided/token/tokenizer/StringTokenizer.java;997397796/1;/HW06/src/provided/util/ABCInstrument.java;1182473716/1;/HW06/src/provided/util/ABCUtil.java;2960842280/1;/HW06/src/provided/util/KeySignature.java;1438335160/1;/HW06/src/view/IModelAdapter.java;1166676400/1;/HW06/src/view/View.java;997812721/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_u-BOEK4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_u-B1IK4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_u-B1Ia4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_u-B1Iq4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_u-B1I64iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_u-B1JK4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_u-B1Ja4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_u-CcMK4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_u-CcMa4iEeeb3J7owtunSg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_u-DqUK4iEeeb3J7owtunSg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_u-DqUa4iEeeb3J7owtunSg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_vAnPEK4iEeeb3J7owtunSg" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_vLfpYa4iEeeb3J7owtunSg" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vLfpY64iEeeb3J7owtunSg" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vKHwYK4iEeeb3J7owtunSg" name="EventQueue"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLXGgK4iEeeb3J7owtunSg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLdNIK4iEeeb3J7owtunSg" name="Dimension"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u-RswK4iEeeb3J7owtunSg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_vKVy0K4iEeeb3J7owtunSg" name="Hashtable"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vKXA8a4iEeeb3J7owtunSg" name="Map"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLtr0K4iEeeb3J7owtunSg" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vMiLMK4iEeeb3J7owtunSg" name="Vector"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_vAO0kK4iEeeb3J7owtunSg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_vLJrI64iEeeb3J7owtunSg" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLKSMa4iEeeb3J7owtunSg" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLK5Qa4iEeeb3J7owtunSg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLLgUa4iEeeb3J7owtunSg" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLMucK4iEeeb3J7owtunSg" name="InputStreamReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLNVga4iEeeb3J7owtunSg" name="Reader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLN8ka4iEeeb3J7owtunSg" name="StreamTokenizer"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_vLxWMK4iEeeb3J7owtunSg" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_vLxWMa4iEeeb3J7owtunSg" name="Object"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_vMmcoK4iEeeb3J7owtunSg" name="Character"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u-DqUq4iEeeb3J7owtunSg" name="model">
      <packagedElement xmi:type="uml:Package" xmi:id="_u-Jw8K4iEeeb3J7owtunSg" name="visitor">
        <packagedElement xmi:type="uml:Class" xmi:id="_vCQ04K4iEeeb3J7owtunSg" name="PlayMusicVisitor">
          <ownedComment xmi:id="_vOf6Fa4iEeeb3J7owtunSg">
            <body>The PlayMusic visitor extends the APhraseVisitor&#xD;
It implements the algorithm to play music for different hosts.&#xD;
 *&#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
 *</body>
          </ownedComment>
          <generalization xmi:id="_vKOeEK4iEeeb3J7owtunSg" general="_vCkW4K4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vM3iYK4iEeeb3J7owtunSg" name="keySign" visibility="private" type="_vFquMK4iEeeb3J7owtunSg" association="_vO-bMa4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN9uk64iEeeb3J7owtunSg" name="PlayMusicVisitor" specification="_vCSDAK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN9ulK4iEeeb3J7owtunSg" type="_vCQ04K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>/**&#xD;
		 * Ignored headers&#xD;
		 */&#xD;
		String headers = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;&#xD;
		for (int i = 0; i &lt; headers.length(); i++) {&#xD;
			addCmd(&quot;&quot; + headers.charAt(i), new IPhraseVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, IPhrase host, Object... params) {&#xD;
					return params[1];&#xD;
				}&#xD;
			});&#xD;
		}&#xD;
&#xD;
		/**&#xD;
		 * Default note (&quot;L&quot; header)&#xD;
		 */&#xD;
		addCmd(&quot;L&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				SequencePlayer2 sp2 = (SequencePlayer2) params[0];&#xD;
				double fraction = ABCUtil.Singleton.parseFraction(((Header) host).getValue());&#xD;
				fraction = sp2.getTicksPerDefaultNote() * fraction * 4;&#xD;
				sp2.setTicksPerDefaultNote((int) fraction);&#xD;
				return params[1];&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Tempo (&quot;Q&quot; header)&#xD;
		 */&#xD;
		addCmd(&quot;Q&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				SequencePlayer2 sp2 = (SequencePlayer2) params[0];&#xD;
				double notePerMin = (double) sp2.getTicksPerDefaultNote() / sp2.getTicksPerQuarterNote();&#xD;
				double tempo = ABCUtil.Singleton.parseTempo(((Header) host).getValue(), notePerMin);&#xD;
				sp2.setTempo((int) tempo);&#xD;
				return params[1];&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Key signatures (&quot;K&quot; header) &#xD;
		 */&#xD;
		addCmd(&quot;K&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				keySign = new KeySignature(((Header) host).getValue());&#xD;
				return params[1];&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Non-empty sequence list &#xD;
		 */&#xD;
		addCmd(&quot;NESeqList&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				NESeqList neSeqlist = (NESeqList) host;&#xD;
				SequencePlayer2 sp2 = (SequencePlayer2) params[0];&#xD;
				int nextTick = (int) neSeqlist.getFirst().execute(PlayMusicVisitor.this, params);&#xD;
				nextTick = (int) neSeqlist.getRest().execute(PlayMusicVisitor.this, sp2, nextTick);&#xD;
				return nextTick;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Empty sequence list &#xD;
		 */&#xD;
		addCmd(&quot;MTSeqList&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				return params[1];&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Chords &#xD;
		 */&#xD;
		addCmd(&quot;Chord&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				Note[] notes = ((Chord) host).getNotes();&#xD;
				int nextTick = (int) params[1];&#xD;
				for (int i = 0; i &lt; notes.length; i++) {&#xD;
					Note note = notes[i];&#xD;
					nextTick = (int) note.execute(PlayMusicVisitor.this, params);&#xD;
				}&#xD;
				return nextTick;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Triplets &#xD;
		 */&#xD;
		addCmd(&quot;Triplet&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				Note[] notes = ((Triplet) host).getNotes();&#xD;
				int nextTick = (int) params[1];&#xD;
				for (int i = 0; i &lt; notes.length; i++) {&#xD;
					Note note = notes[i];&#xD;
					note.setDuration(((float) note.getDuration()) * 2 / 3);&#xD;
					nextTick = (int) note.execute(PlayMusicVisitor.this, params);&#xD;
				}&#xD;
				return nextTick;&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Individual notes&#xD;
		 */&#xD;
		addCmd(&quot;Note&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				SequencePlayer2 sp2 = (SequencePlayer2) params[0];&#xD;
				Note newNote = keySign.adjust(((Note) host));&#xD;
				return sp2.addNote(newNote, (int) params[1]);&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/**&#xD;
		 * Unknown host&#xD;
		 * APhraseVisitor has thrown them&#xD;
		 */&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCSDAK4iEeeb3J7owtunSg" name="PlayMusicVisitor" method="_vN9uk64iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vCSDAa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vCSDAq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOf6Fq4iEeeb3J7owtunSg">
              <body>Constructor</body>
            </ownedComment>
            <ownedParameter xmi:id="_vCSDA64iEeeb3J7owtunSg" type="_vCQ04K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vCT4MK4iEeeb3J7owtunSg" name="ToStringVisitor">
          <ownedComment xmi:id="_vOf6F64iEeeb3J7owtunSg">
            <body>The ToString visitor extends the APhraseVisitor&#xD;
It implements the algorithm to transfer music into text for different hosts.&#xD;
 *&#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
 *</body>
          </ownedComment>
          <generalization xmi:id="_vKPsMK4iEeeb3J7owtunSg" general="_vCkW4K4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-VoK4iEeeb3J7owtunSg" name="ToStringVisitor" specification="_vCVtYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-Voa4iEeeb3J7owtunSg" type="_vCT4MK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>/*&#xD;
		 * The cmd for Non-empty list.&#xD;
		 */&#xD;
		addCmd(&quot;NESeqList&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				return ((NESeqList) host).getRest().execute(ToStringVisitor.this,&#xD;
						params[0] + &quot;, &quot; + ((NESeqList) host).getFirst());&#xD;
&#xD;
			}&#xD;
		});&#xD;
&#xD;
		/*&#xD;
		 * The cmd for empty list.&#xD;
		 */&#xD;
		addCmd(&quot;MTSeqList&quot;, new IPhraseVisitorCmd() {&#xD;
			@Override&#xD;
			public Object apply(String id, IPhrase host, Object... params) {&#xD;
				return params[0] + &quot;}&quot;;&#xD;
			}&#xD;
		});&#xD;
&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCVtYK4iEeeb3J7owtunSg" name="ToStringVisitor" method="_vN-VoK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vCWUcK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vCWUca4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vCWUcq4iEeeb3J7owtunSg" type="_vCT4MK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vO-bMa4iEeeb3J7owtunSg" name="" memberEnd="_vO-bMq4iEeeb3J7owtunSg _vM3iYK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vO-bMq4iEeeb3J7owtunSg" name="" type="_vCQ04K4iEeeb3J7owtunSg" association="_vO-bMa4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Interface" xmi:id="_vCFOsK4iEeeb3J7owtunSg" name="IViewAdapter">
        <ownedComment xmi:id="_vOfTAq4iEeeb3J7owtunSg">
          <body>Interface that goes from the model to the view that enables the model to talk to the view.&#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vCGc0K4iEeeb3J7owtunSg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_vCFOsK4iEeeb3J7owtunSg" isReadOnly="true" association="_vO2fYK4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vCHD4K4iEeeb3J7owtunSg" value="new IViewAdapter() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void addInstrument(ABCInstrument instrument) {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vKJlkK4iEeeb3J7owtunSg" name="addInstrument">
          <ownedParameter xmi:id="_vKKMoK4iEeeb3J7owtunSg" name="instrument" type="_vFfvEK4iEeeb3J7owtunSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vCHq8K4iEeeb3J7owtunSg" name="Model">
        <ownedComment xmi:id="_vOfTA64iEeeb3J7owtunSg">
          <body>&#xD;
Model for the app &#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vM0fEa4iEeeb3J7owtunSg" name="_iViewAdapter" visibility="private" type="_vCFOsK4iEeeb3J7owtunSg" association="_vO6w0a4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vM1GIa4iEeeb3J7owtunSg" name="parser" visibility="private" type="_vCW7gK4iEeeb3J7owtunSg" association="_vO7X4a4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vM1tMa4iEeeb3J7owtunSg" name="sp2" visibility="private" type="_vERAAK4iEeeb3J7owtunSg" association="_vO8mAK4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vM1tM64iEeeb3J7owtunSg" name="playable" visibility="private" type="_vKKMoa4iEeeb3J7owtunSg" association="_vO9NEa4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vM2UQa4iEeeb3J7owtunSg" name="phrase" visibility="private" type="_vDVL4K4iEeeb3J7owtunSg" association="_vO90Ia4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vM27Ua4iEeeb3J7owtunSg" name="fullPathName" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN8gcK4iEeeb3J7owtunSg" name="Model" specification="_vKMB0K4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN8gca4iEeeb3J7owtunSg" name="iViewAdapter" type="_vCFOsK4iEeeb3J7owtunSg"/>
          <ownedParameter xmi:id="_vN8gcq4iEeeb3J7owtunSg" type="_vCHq8K4iEeeb3J7owtunSg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>// TODO Auto-generated constructor stub&#xD;
		this._iViewAdapter = iViewAdapter;&#xD;
		sp2 = new SequencePlayer2(16, 0);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN8gc64iEeeb3J7owtunSg" name="start" specification="_vCKHMK4iEeeb3J7owtunSg">
          <language>java</language>
          <body>ABCInstrument[] instruments = ABCUtil.Singleton.getInstruments();&#xD;
		for (ABCInstrument instrument : instruments) {&#xD;
			_iViewAdapter.addInstrument(instrument);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN9HgK4iEeeb3J7owtunSg" name="loadMusic" specification="_vCKuQK4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN9Hga4iEeeb3J7owtunSg" name="musicName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vN9Hgq4iEeeb3J7owtunSg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>fullPathName = &quot;/songs/&quot; + musicName + &quot;.abc&quot;;&#xD;
		parser = new ABCParser(fullPathName);&#xD;
		return ABCUtil.Singleton.getFileContents(fullPathName);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN9Hg64iEeeb3J7owtunSg" name="parseMusic" specification="_vCL8Yq4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN9HhK4iEeeb3J7owtunSg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>NESeqList.setToStringAlgo(new ToStringVisitor());&#xD;
		phrase = parser.parse();&#xD;
		return phrase.toString();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN9ukK4iEeeb3J7owtunSg" name="playMusic" specification="_vKMo5K4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN9uka4iEeeb3J7owtunSg" name="instrument" type="_vFfvEK4iEeeb3J7owtunSg"/>
          <language>java</language>
          <body>sp2.init(16, instrument.getValue());&#xD;
		sp2.setTicksPerDefaultNote(16);&#xD;
		sp2.setTempo(120); //default&#xD;
		parser = new ABCParser(fullPathName);&#xD;
		parser.parse().execute(new PlayMusicVisitor(), sp2, 0);&#xD;
		playable = sp2.makePlayable(ISequencePlayerStatus.NULL);&#xD;
		playable.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN9ukq4iEeeb3J7owtunSg" name="stopMusic" specification="_vCNKgK4iEeeb3J7owtunSg">
          <language>java</language>
          <body>playable.stop();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_vCKHMK4iEeeb3J7owtunSg" name="start" method="_vN8gc64iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOf6EK4iEeeb3J7owtunSg">
            <body>initialize the instrument choices</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vCKuQK4iEeeb3J7owtunSg" name="loadMusic" method="_vN9HgK4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOf6Ea4iEeeb3J7owtunSg">
            <body>This method load music&#xD;
	 * @param musicName The name of the music&#xD;
	 * @return contents The contents of the music</body>
          </ownedComment>
          <ownedParameter xmi:id="_vCL8YK4iEeeb3J7owtunSg" name="musicName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vCL8Ya4iEeeb3J7owtunSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vCL8Yq4iEeeb3J7owtunSg" name="parseMusic" method="_vN9Hg64iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOf6Eq4iEeeb3J7owtunSg">
            <body>This method parse music&#xD;
	 * @return phrase The phrase of the music</body>
          </ownedComment>
          <ownedParameter xmi:id="_vCMjcK4iEeeb3J7owtunSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vCNKgK4iEeeb3J7owtunSg" name="stopMusic" method="_vN9ukq4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOf6FK4iEeeb3J7owtunSg">
            <body>This method stop music</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vKMB0K4iEeeb3J7owtunSg" name="Model" method="_vN8gcK4iEeeb3J7owtunSg">
          <eAnnotations xmi:id="_vKMo4a4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vKMo4q4iEeeb3J7owtunSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vOfTBK4iEeeb3J7owtunSg">
            <body>Constructor&#xD;
	 * @param iViewAdapter The adapter to the view</body>
          </ownedComment>
          <ownedParameter xmi:id="_vKMo4K4iEeeb3J7owtunSg" name="iViewAdapter" type="_vCFOsK4iEeeb3J7owtunSg"/>
          <ownedParameter xmi:id="_vKMo464iEeeb3J7owtunSg" type="_vCHq8K4iEeeb3J7owtunSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vKMo5K4iEeeb3J7owtunSg" name="playMusic" method="_vN9ukK4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOf6E64iEeeb3J7owtunSg">
            <body>This method play music&#xD;
	 * reference: https://www.clear.rice.edu/comp504/f17/labs/lab07/&#xD;
	 * @param instrument The type of instrument</body>
          </ownedComment>
          <ownedParameter xmi:id="_vKNP8K4iEeeb3J7owtunSg" name="instrument" type="_vFfvEK4iEeeb3J7owtunSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO2fYK4iEeeb3J7owtunSg" name="" memberEnd="_vO2fYa4iEeeb3J7owtunSg _vCGc0K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO2fYa4iEeeb3J7owtunSg" name="" type="_vCFOsK4iEeeb3J7owtunSg" association="_vO2fYK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO6w0a4iEeeb3J7owtunSg" name="" memberEnd="_vO6w0q4iEeeb3J7owtunSg _vM0fEa4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO6w0q4iEeeb3J7owtunSg" name="" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO6w0a4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO7X4a4iEeeb3J7owtunSg" name="" memberEnd="_vO7X4q4iEeeb3J7owtunSg _vM1GIa4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO7X4q4iEeeb3J7owtunSg" name="" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO7X4a4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO8mAK4iEeeb3J7owtunSg" name="" memberEnd="_vO8mAa4iEeeb3J7owtunSg _vM1tMa4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO8mAa4iEeeb3J7owtunSg" name="" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO8mAK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO9NEa4iEeeb3J7owtunSg" name="" memberEnd="_vO9NEq4iEeeb3J7owtunSg _vM1tM64iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO9NEq4iEeeb3J7owtunSg" name="" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO9NEa4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO90Ia4iEeeb3J7owtunSg" name="" memberEnd="_vO90Iq4iEeeb3J7owtunSg _vM2UQa4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO90Iq4iEeeb3J7owtunSg" name="" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO90Ia4iEeeb3J7owtunSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u-ERYK4iEeeb3J7owtunSg" name="provided">
      <packagedElement xmi:type="uml:Package" xmi:id="_u-ERYa4iEeeb3J7owtunSg" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_vFfvEK4iEeeb3J7owtunSg" name="ABCInstrument">
          <ownedComment xmi:id="_vOn16K4iEeeb3J7owtunSg">
            <body>Represents an instrument as a name and an integer value&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNqMkK4iEeeb3J7owtunSg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNqMka4iEeeb3J7owtunSg" name="value" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOWwIK4iEeeb3J7owtunSg" name="ABCInstrument" specification="_vFgWIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOWwIa4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOWwIq4iEeeb3J7owtunSg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOWwI64iEeeb3J7owtunSg" type="_vFfvEK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>this.name = name;&#xD;
		this.value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOWwJK4iEeeb3J7owtunSg" name="toString" specification="_vFhkQK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOWwJa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return name + &quot;: &quot; + value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vFgWIK4iEeeb3J7owtunSg" name="ABCInstrument" method="_vOWwIK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vFg9Mq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vFg9M64iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vFg9MK4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFg9Ma4iEeeb3J7owtunSg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFg9NK4iEeeb3J7owtunSg" type="_vFfvEK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vFhkQK4iEeeb3J7owtunSg" name="toString" method="_vOWwJK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vFhkQa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vFiLUK4iEeeb3J7owtunSg" name="ABCUtil">
          <ownedComment xmi:id="_vOn16a4iEeeb3J7owtunSg">
            <body>Singleton utility class that has methods for parsing,&#xD;
reading file content and getting the list of instruments.&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNqzoK4iEeeb3J7owtunSg" name="Singleton" isLeaf="true" isStatic="true" type="_vFiLUK4iEeeb3J7owtunSg" isReadOnly="true" association="_vPR9Ma4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNqzoa4iEeeb3J7owtunSg" value="new ABCUtil()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOXXMK4iEeeb3J7owtunSg" name="parseFraction" specification="_vFkAgK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOXXMa4iEeeb3J7owtunSg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOXXMq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String[] vals = frac.split(&quot;/&quot;);&#xD;
		if (vals.length != 2) {&#xD;
			throw new NumberFormatException(frac + &quot; is not a fraction.&quot;);&#xD;
		}&#xD;
		double num = Double.parseDouble(vals[0]);&#xD;
		double denom = Double.parseDouble(vals[1]);&#xD;
		return num / denom;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOXXM64iEeeb3J7owtunSg" name="parseTempo" specification="_vFknkK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOXXNK4iEeeb3J7owtunSg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOXXNa4iEeeb3J7owtunSg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOXXNq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <language>java</language>
            <body>String els[] = tempo.split(&quot;=&quot;);&#xD;
		double bpm = 0;&#xD;
		if (1 == els.length) {&#xD;
			bpm = Double.parseDouble(els[0]) / defaultNotesPerQuarterNote;&#xD;
		} else {&#xD;
			double note = parseFraction(els[0]);&#xD;
			bpm = Double.parseDouble(els[1]) / (0.25 / note);&#xD;
		}&#xD;
		return bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOX-QK4iEeeb3J7owtunSg" name="getFileContents" specification="_vFlOoK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOX-Qa4iEeeb3J7owtunSg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOX-Qq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String fileContents = &quot;&quot;;&#xD;
&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(filename).openStream();&#xD;
&#xD;
			BufferedReader input = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			try {&#xD;
				// use buffering, reading one line at a time&#xD;
				// FileReader always assumes default&#xD;
				// encoding is OK!&#xD;
&#xD;
				String line = null; // not declared within while loop&#xD;
&#xD;
				/*&#xD;
				 * readLine is a bit quirky : it returns the&#xD;
				 * content of a line MINUS the newline. it&#xD;
				 * returns null only for the END of the&#xD;
				 * stream. it returns an empty String if two&#xD;
				 * newlines appear in a row.&#xD;
				 */&#xD;
				while ((line = input.readLine()) != null) {&#xD;
					fileContents += line + &quot;\n&quot;;&#xD;
				}&#xD;
			} finally {&#xD;
				input.close();&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			return &quot;Error loading file: &quot; + filename + &quot;\n&quot; + e + &quot;\n&quot;;&#xD;
		}&#xD;
&#xD;
		return fileContents;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOX-Q64iEeeb3J7owtunSg" name="getInstruments" specification="_vFl1sK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOX-RK4iEeeb3J7owtunSg" type="_vFfvEK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOX-Ra4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			Synthesizer synth = MidiSystem.getSynthesizer();&#xD;
			synth.open();&#xD;
			Instrument[] instruments = synth.getAvailableInstruments();&#xD;
			ABCInstrument[] result = new ABCInstrument[instruments.length];&#xD;
			for (int i = 0; i &lt; instruments.length; i++) {&#xD;
				result[i] = new ABCInstrument(instruments[i].getName(), instruments[i].getPatch().getProgram());&#xD;
			}&#xD;
&#xD;
			synth.close();&#xD;
			return result;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.err.println(&quot;ABCUtil.getInstruments: &quot; + e);&#xD;
			return null;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vFiyYK4iEeeb3J7owtunSg" name="ABCUtil" visibility="private">
            <eAnnotations xmi:id="_vFiyYa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vFjZcK4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vFjZcq4iEeeb3J7owtunSg" type="_vFiLUK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vFkAgK4iEeeb3J7owtunSg" name="parseFraction" method="_vOXXMK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOn16q4iEeeb3J7owtunSg">
              <body>Return the evaluation of a string &quot;a/b&quot;.&#xD;
	 * &#xD;
	 * @param frac - a string containing a fraction&#xD;
	 * @return     - the result of evaluating the fraction</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFkAga4iEeeb3J7owtunSg" name="frac">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFkAgq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vFknkK4iEeeb3J7owtunSg" name="parseTempo" method="_vOXXM64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOn1664iEeeb3J7owtunSg">
              <body>Return the tempo given by the input string.  The returned value is in the &#xD;
	 * units of quarter notes per minute.&#xD;
	 * &#xD;
	 * Accepts &quot;bpm&quot; (beats per default note) or &quot;a/b=bpm&quot; (beats per a/b note).&#xD;
	 * &#xD;
	 * @param tempo                      - tempo represented as a string&#xD;
	 * @param defaultNotesPerQuarterNote - default notes per quarter note &#xD;
	 * @return                           - the tempo indicated by the string</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFknka4iEeeb3J7owtunSg" name="tempo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFknkq4iEeeb3J7owtunSg" name="defaultNotesPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFknk64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vFlOoK4iEeeb3J7owtunSg" name="getFileContents" method="_vOX-QK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOn17K4iEeeb3J7owtunSg">
              <body>Returns the contents of a text file, e.g. an abc file, as a single string.&#xD;
	 * @param filename the name of the file with respect to the default package, where &quot;/&quot; refers to the default package, e.g. a file in the &quot;data&quot; package would &quot;/data/myfile.abc&quot;&#xD;
	 * @return the contents of the file</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFlOoa4iEeeb3J7owtunSg" name="filename">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFlOoq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vFl1sK4iEeeb3J7owtunSg" name="getInstruments" method="_vOX-Q64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOn17a4iEeeb3J7owtunSg">
              <body>Get an array of all the available instruments as ABCInstruments &#xD;
	 * where the instrument's value is the MIDI instrument number&#xD;
	 * &#xD;
	 * @return an array of ABCInstruments</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFl1sa4iEeeb3J7owtunSg" type="_vFfvEK4iEeeb3J7owtunSg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vFnD0K4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vFquMK4iEeeb3J7owtunSg" name="KeySignature">
          <ownedComment xmi:id="_vOoc8K4iEeeb3J7owtunSg">
            <body>Utility class to simplify dealing with key signatures &lt;br/>&#xD;
Usage:&lt;br/>&#xD;
KeySignature keySig = new KeySignature(aKey); // aKey is a string representing a key, e.g. &quot;C&quot;, &quot;Bb&quot;, &quot;Am&quot;&lt;br/>&#xD;
Note adjustedNote = keySig.adjust(originalNote); // returns the Note object, adjusted so that it matches the key,&#xD;
e.g for key of &quot;D&quot;, an &quot;F&quot; --&amp;gt; &quot;F#&quot;.&lt;br/></body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNrasK4iEeeb3J7owtunSg" name="_major" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNrasa4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNsBwa4iEeeb3J7owtunSg" value="{ 0, 2, 2, 1, 2, 2, 2 //, 1&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNsBwq4iEeeb3J7owtunSg" name="_minor" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNsBw64iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNso0a4iEeeb3J7owtunSg" value="{ // Half steps in a Minor key&#xD;&#xA;&#x9;&#x9;&#x9;0, 2, 1, 2, 2, 1, 2 //, 2&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNueAK4iEeeb3J7owtunSg" name="keymap" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <qualifier xmi:id="_vNvFEK4iEeeb3J7owtunSg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNueAa4iEeeb3J7owtunSg" value="new Hashtable&lt;Character, Integer>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNvFEa4iEeeb3J7owtunSg" name="notes" visibility="private" type="_vFr8UK4iEeeb3J7owtunSg" association="_vPSkQa4iEeeb3J7owtunSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNvFEq4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNvsIK4iEeeb3J7owtunSg" value="{ new KeyNote('A', 0), new KeyNote('A', 1), new KeyNote('B', 0), new KeyNote('C', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('C', 1), new KeyNote('D', 0), new KeyNote('D', 1), new KeyNote('E', 0), new KeyNote('F', 0),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('F', 1), new KeyNote('G', 0), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNvsIq4iEeeb3J7owtunSg" name="fs_dsm" visibility="private" type="_vFr8UK4iEeeb3J7owtunSg" association="_vPTLUa4iEeeb3J7owtunSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNvsI64iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNwTMa4iEeeb3J7owtunSg" value="{ new KeyNote('A', 1), new KeyNote('B', 0), new KeyNote('C', 1), new KeyNote('D', 1),&#xD;&#xA;&#x9;&#x9;&#x9;new KeyNote('E', 1), new KeyNote('F', 1), new KeyNote('G', 1) }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOZMYK4iEeeb3J7owtunSg" name="KeySignature" specification="_vFuYkK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOZMYa4iEeeb3J7owtunSg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOZMYq4iEeeb3J7owtunSg" type="_vFquMK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>// Get rid of spurious &quot;maj&quot; at the end, if it's there&#xD;
		if (key.endsWith(&quot;maj&quot;)) {&#xD;
			key = key.replace(&quot;maj&quot;, &quot;&quot;);&#xD;
		}&#xD;
&#xD;
		// Special case keys with 6 sharps&#xD;
		if ((key == &quot;F#&quot;) || (key == &quot;D#m&quot;)) {&#xD;
			for (KeyNote n : fs_dsm) {&#xD;
				keymap.put(n.letter, n.accidental);&#xD;
			}&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		char keynote = key.charAt(0);&#xD;
		int cur = -1;&#xD;
&#xD;
		for (int i = 0; i &lt; notes.length; i++) {&#xD;
			if (notes[i].letter == keynote) {&#xD;
				cur = i;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			System.out.println(&quot;Invalid key: &quot; + key);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		int[] steps = _major;&#xD;
&#xD;
		int idx = 1;&#xD;
		while (idx &lt; key.length()) {&#xD;
			switch (key.charAt(idx)) {&#xD;
			case '#':&#xD;
				cur += 1;&#xD;
				break;&#xD;
&#xD;
			case 'b':&#xD;
				cur -= 1;&#xD;
				break;&#xD;
&#xD;
			case 'm':&#xD;
				steps = _minor;&#xD;
				break;&#xD;
&#xD;
			default:&#xD;
				System.out.println(&quot;Invalid key: &quot; + key);&#xD;
				return;&#xD;
			}&#xD;
			idx++;&#xD;
		}&#xD;
&#xD;
		if (cur == -1) {&#xD;
			cur = notes.length - 1;&#xD;
		}&#xD;
&#xD;
		for (int i : steps) {&#xD;
			cur += i;&#xD;
			if (cur >= notes.length) {&#xD;
				cur -= notes.length;&#xD;
			}&#xD;
			KeyNote n = notes[cur];&#xD;
			insert(n);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOZMY64iEeeb3J7owtunSg" name="convertflat" specification="_vFvmsK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOZMZK4iEeeb3J7owtunSg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOZMZa4iEeeb3J7owtunSg" type="_vFr8UK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>char next = (char) (n + 1);&#xD;
		if (next == 'H') {&#xD;
			next = 'A';&#xD;
		}&#xD;
		return new KeyNote(next, -1);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOZMZq4iEeeb3J7owtunSg" name="insert" specification="_vLUqQK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOZMZ64iEeeb3J7owtunSg" name="n" type="_vFr8UK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>if (!keymap.containsKey(n.letter)) {&#xD;
			keymap.put(n.letter, n.accidental);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if (n.accidental == 1) {&#xD;
			// Move sharp up to next flat&#xD;
			insert(convertflat(n.letter));&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		if ((n.accidental == 0) || (n.accidental == -1)) {&#xD;
			// Conflict, move higher note up to next flat&#xD;
			int a = keymap.get(n.letter);&#xD;
			a = Math.min(a, n.accidental);&#xD;
			insert(convertflat(n.letter));&#xD;
			keymap.put(n.letter, a);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		// Shouldn't get here&#xD;
		System.out.println(&quot;Should not reach here.&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOZzcK4iEeeb3J7owtunSg" name="map" specification="_vMnDsa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOZzca4iEeeb3J7owtunSg" name="note" type="_vMmcoK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOZzcq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (keymap.containsKey(note)) {&#xD;
			return (int) keymap.get(note);&#xD;
		} else {&#xD;
			return 0;&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOZzc64iEeeb3J7owtunSg" name="adjust" specification="_vLVRUK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOZzdK4iEeeb3J7owtunSg" name="n" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOZzda4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>if (n.getAccidental() != 0 &amp;&amp; !n.getIsNatural()) {&#xD;
			return n; // Accidentals set and is not natural&#xD;
		} else if (n.getIsNatural()) {&#xD;
			return n; // override key signature&#xD;
		} else {&#xD;
			// normal key signature mapping applies&#xD;
			int accidental = map(n.getName());&#xD;
			if (accidental == 0) {&#xD;
				return n; // nothing to change&#xD;
			}&#xD;
			return new Note(n.getName(), n.getOctave(), accidental, n.getDuration(), false); // must be false isNatural&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOaagK4iEeeb3J7owtunSg" name="printmap" specification="_vFw00K4iEeeb3J7owtunSg">
            <language>java</language>
            <body>System.out.println(keymap);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vFuYkK4iEeeb3J7owtunSg" name="KeySignature" method="_vOZMYK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vFu_oa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vFu_oq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOoc864iEeeb3J7owtunSg">
              <body>Generate a &quot;Key&quot; object that enables easy access to the key signature.&#xD;
	 * &#xD;
	 * @param key        - String indicating key (i.e., &quot;C&quot; or &quot;D#m&quot;)</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFu_oK4iEeeb3J7owtunSg" name="key">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vFu_o64iEeeb3J7owtunSg" type="_vFquMK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vFvmsK4iEeeb3J7owtunSg" name="convertflat" visibility="private" method="_vOZMY64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOoc9K4iEeeb3J7owtunSg">
              <body>Helper method to convert a note to its equivalent flat version.&#xD;
	 * &#xD;
	 * @param n  - note letter&#xD;
	 * @return   - equivalent flat version of note n</body>
            </ownedComment>
            <ownedParameter xmi:id="_vFvmsa4iEeeb3J7owtunSg" name="n">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLUDMK4iEeeb3J7owtunSg" type="_vFr8UK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vFw00K4iEeeb3J7owtunSg" name="printmap" method="_vOaagK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOoc-K4iEeeb3J7owtunSg">
              <body>Print the mapping for this key signature</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_vLUqQK4iEeeb3J7owtunSg" name="insert" visibility="private" method="_vOZMZq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOoc9a4iEeeb3J7owtunSg">
              <body>Helper method to insert the given note into the keymap.&#xD;
	 * &#xD;
	 * @param n  - note to add to the map</body>
            </ownedComment>
            <ownedParameter xmi:id="_vLUqQa4iEeeb3J7owtunSg" name="n" type="_vFr8UK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vLVRUK4iEeeb3J7owtunSg" name="adjust" method="_vOZzc64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOoc964iEeeb3J7owtunSg">
              <body>Takes a note and returns the properly transposed note in this key signature&#xD;
	 *&#xD;
	 * @param n - note to be adjusted&#xD;
	 * @return A new, adjusted Note</body>
            </ownedComment>
            <ownedParameter xmi:id="_vLVRUa4iEeeb3J7owtunSg" name="n" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vLVRUq4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMnDsa4iEeeb3J7owtunSg" name="map" visibility="private" method="_vOZzcK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOoc9q4iEeeb3J7owtunSg">
              <body>Takes a note (with no accidentals) and returns the accidental for this&#xD;
	 * key signature.&#xD;
	 * &#xD;
	 * @param  note - in [A, B, C, D, E, F, G]&#xD;
	 * @return accidental for the note in this key signature [-1, 0, 1]</body>
            </ownedComment>
            <ownedParameter xmi:id="_vMnDsq4iEeeb3J7owtunSg" name="note" type="_vMmcoK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMnqwK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Class" xmi:id="_vFr8UK4iEeeb3J7owtunSg" name="KeyNote" visibility="private">
            <ownedComment xmi:id="_vOoc8a4iEeeb3J7owtunSg">
              <body>Utility class to keep track of the position of notes</body>
            </ownedComment>
            <ownedAttribute xmi:id="_vNso0q4iEeeb3J7owtunSg" name="letter">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNt28K4iEeeb3J7owtunSg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOYlUK4iEeeb3J7owtunSg" name="KeyNote" specification="_vFsjYK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOYlUa4iEeeb3J7owtunSg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOYlUq4iEeeb3J7owtunSg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOYlU64iEeeb3J7owtunSg" type="_vFr8UK4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>this.letter = letter;&#xD;
			this.accidental = accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOYlVK4iEeeb3J7owtunSg" name="toString" specification="_vFtKc64iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOYlVa4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>return &quot;&quot; + letter + accidental;&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_vFsjYK4iEeeb3J7owtunSg" name="KeyNote" visibility="package" method="_vOYlUK4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vFtKcK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vFtKca4iEeeb3J7owtunSg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_vOoc8q4iEeeb3J7owtunSg">
                <body>Constructor for the class&#xD;
		 * @param letter  The letter of the note&#xD;
		 * @param accidental  Whether or not the note is accidental:  -1 = flat, 0 = natural, +1 = sharp</body>
              </ownedComment>
              <ownedParameter xmi:id="_vFsjYa4iEeeb3J7owtunSg" name="letter">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vFsjYq4iEeeb3J7owtunSg" name="accidental">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vFtKcq4iEeeb3J7owtunSg" type="_vFr8UK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vFtKc64iEeeb3J7owtunSg" name="toString" method="_vOYlVK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vFtxgK4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPR9Ma4iEeeb3J7owtunSg" name="" memberEnd="_vPR9Mq4iEeeb3J7owtunSg _vNqzoK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPR9Mq4iEeeb3J7owtunSg" name="" type="_vFiLUK4iEeeb3J7owtunSg" association="_vPR9Ma4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPSkQa4iEeeb3J7owtunSg" name="" memberEnd="_vPSkQq4iEeeb3J7owtunSg _vNvFEa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPSkQq4iEeeb3J7owtunSg" name="" type="_vFquMK4iEeeb3J7owtunSg" association="_vPSkQa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPTLUa4iEeeb3J7owtunSg" name="" memberEnd="_vPTLUq4iEeeb3J7owtunSg _vNvsIq4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPTLUq4iEeeb3J7owtunSg" name="" type="_vFquMK4iEeeb3J7owtunSg" association="_vPTLUa4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u-Jw8a4iEeeb3J7owtunSg" name="abcParser">
        <packagedElement xmi:type="uml:Class" xmi:id="_vCW7gK4iEeeb3J7owtunSg" name="ABCParser">
          <ownedComment xmi:id="_vOf6GK4iEeeb3J7owtunSg">
            <body>Parses an abc file into IPhrase music structures&lt;br/>&#xD;
&#xD;
Usage: &lt;br/>&#xD;
ABCParser parser = new ABCParser(&quot;/data/aMusicFile.abc&quot;); &lt;br/>&#xD;
IPhrase phrase = parser.parse(); &lt;br/>&#xD;
&#xD;
Cases handled:&lt;br/>&#xD;
- single notes with and without accidentals and naturals with regards to measures&lt;br/>&#xD;
- chords&lt;br/>&#xD;
- dotted notes&lt;br/>&#xD;
- grace notes&lt;br/>&#xD;
- repeats, including first and second repeats.&lt;br/>&#xD;
- triplets &lt;br/>&#xD;
- tuplets&lt;br/>&#xD;
- all headers&lt;br/>&#xD;
- quoted text&lt;br/>&#xD;
- D.C. al fine&lt;br/>&#xD;
- EOF (End Of File)&lt;br/>&#xD;
&lt;br/>&#xD;
All other cases ignored.&#xD;
&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vM3iYq4iEeeb3J7owtunSg" name="abcT" visibility="private" type="_vEx9YK4iEeeb3J7owtunSg" association="_vO_pUa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vM4Jca4iEeeb3J7owtunSg" name="beginningTarget" visibility="private" type="_vCuH4K4iEeeb3J7owtunSg" association="_vPA3cK4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM4Jcq4iEeeb3J7owtunSg" value="new DecoratorSeqList()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM4JdK4iEeeb3J7owtunSg" name="jumpTargetStack" visibility="private" type="_vLtr0K4iEeeb3J7owtunSg" association="_vPBega4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM4wga4iEeeb3J7owtunSg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM5Xka4iEeeb3J7owtunSg" name="jumpSecondRepeatStack" visibility="private" type="_vLtr0K4iEeeb3J7owtunSg" association="_vPCFka4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM5-oa4iEeeb3J7owtunSg" value="new Stack&lt;DecoratorSeqList>()"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM6lsK4iEeeb3J7owtunSg" name="makeSeqListAlgo" visibility="private" type="_vEfpgK4iEeeb3J7owtunSg" association="_vPCsoa4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM6lsa4iEeeb3J7owtunSg" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Default behavior is to ignore any unrecognized tokens by merely proceeding to the next one.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;Unhandled Token: &quot; + host);&#xD;&#xA;&#x9;&#x9;&#x9;return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM7MwK4iEeeb3J7owtunSg" name="isGrace" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM7Mwa4iEeeb3J7owtunSg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM7Mw64iEeeb3J7owtunSg" name="grace_multiplier" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM7z0K4iEeeb3J7owtunSg" value="0.2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM7z0q4iEeeb3J7owtunSg" name="graceDuration" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM8a4K4iEeeb3J7owtunSg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM8a4q4iEeeb3J7owtunSg" name="dottedCorrection" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM9B8K4iEeeb3J7owtunSg" value="0.0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM9B8q4iEeeb3J7owtunSg" name="checkNextNoteAlgo" visibility="private" type="_vEfpgK4iEeeb3J7owtunSg" association="_vPD6wK4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM9B864iEeeb3J7owtunSg" value="new ATokVisitor(new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;// No dotted modification detected.&#xD;&#xA;&#x9;&#x9;&#x9;abcT.putBack(host); // put token back to be reprocessed&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;// later&#xD;&#xA;&#x9;&#x9;&#x9;dottedCorrection = 0.0;&#xD;&#xA;&#x9;&#x9;&#x9;return params[0]; // return duration unchanged.&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}) {&#xD;&#xA;&#x9;&#x9;// Initializer block for internal visitor&#xD;&#xA;&#x9;&#x9;{&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;&lt;&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is halved, the next dotted&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0] / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Notes parsed \&quot;&quot; + id + &quot;\&quot; dotting.  durationCorrection = &quot; + dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;this.addCmd(&quot;>&quot;, new ITokVisitorCmd() {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;public Object apply(String id, Token host, Object... params) {&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// the previous note is dotted, the next note halved&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;double duration = (Double) params[0];&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;dottedCorrection = -duration / 2.0;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;duration -= dottedCorrection;&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.println(&quot;Notes parsed \&quot;&quot; + id + &quot;\&quot; dotting.  durationCorrection = &quot; + dottedCorrection);&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return duration;&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;&#x9;});&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vM9pAa4iEeeb3J7owtunSg" name="accidentalNotes" visibility="private" type="_vDnfwK4iEeeb3J7owtunSg" association="_vPEh0a4iEeeb3J7owtunSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vM9pAq4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM9pA64iEeeb3J7owtunSg" value="new HashSet&lt;Note>()"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-Voq4iEeeb3J7owtunSg" name="popJumpTarget" specification="_vCYJoK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-Vo64iEeeb3J7owtunSg" type="_vCuH4K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>if (jumpTargetStack.isEmpty())&#xD;
			return beginningTarget;&#xD;
		else&#xD;
			return jumpTargetStack.pop();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-8sK4iEeeb3J7owtunSg" name="pushJumpTarget" specification="_vKQTQa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-8sa4iEeeb3J7owtunSg" name="target" type="_vCuH4K4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>jumpTargetStack.push(target);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-8sq4iEeeb3J7owtunSg" name="ABCParser" specification="_vCZXwK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-8s64iEeeb3J7owtunSg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vN-8tK4iEeeb3J7owtunSg" type="_vCW7gK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			abcT = new ABCTokenizer(inputFileName);&#xD;
&#xD;
			// ------ EOF -----------------------------------------------------&#xD;
			ITokVisitorCmd eofCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					return MTSeqList.Singleton;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Note -----------------------------------------------------&#xD;
			ITokVisitorCmd noteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note note = makeNote(host);&#xD;
					System.out.println(&quot;Note parsed: &quot; + note);&#xD;
&#xD;
					return new NESeqList(note, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Header-------------------------------------------&#xD;
			// Same command for all headers&#xD;
			ITokVisitorCmd headerCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Header header = new Header(id, host.getLexeme());&#xD;
					System.out.println(&quot;Header parsed: &quot; + header);&#xD;
					return new NESeqList(header, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Chord----------------------------------------------&#xD;
			ITokVisitorCmd chordStartCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeChordAlgo = new ATokVisitor(new ITokVisitorCmd() {&#xD;
					@Override&#xD;
					public Object apply(String id, Token host, Object... params) {&#xD;
						throw new IllegalArgumentException(&quot;ABCParser.chordCmd: Non-Note token encountered:&quot; + host);&#xD;
					}&#xD;
&#xD;
				}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host, Object... params) {&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Chord parsed Note: &quot; + note);&#xD;
								((Vector&lt;Note>) params[0]).add(note);&#xD;
								return abcT.getNextToken().execute(makeChordAlgo, params);&#xD;
							}&#xD;
						});&#xD;
&#xD;
						this.addCmd(&quot;]&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host, Object... params) {&#xD;
								Vector&lt;Note> vNotes = (Vector&lt;Note>) params[0];&#xD;
								Note[] result = new Note[vNotes.size()];&#xD;
								for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
									result[i] = vNotes.get(i);&#xD;
								return result;&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(makeChordAlgo, new Vector&lt;Note>());&#xD;
					Chord chord = new Chord(notes);&#xD;
					System.out.println(&quot;Chord parsed: &quot; + chord);&#xD;
					return new NESeqList(chord, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note Start---------------------------------------&#xD;
			ITokVisitorCmd graceStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace Start parsed.&quot;);&#xD;
					isGrace = true; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Grace Note End--------------------------------------------&#xD;
			ITokVisitorCmd graceEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					System.out.println(&quot;Grace End parsed.&quot;);&#xD;
					isGrace = false; // Set grace flag on&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Tuplet----------------------------------------------&#xD;
			ITokVisitorCmd tupletCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				// Internal visitor to get rest of chord&#xD;
				ATokVisitor makeTupletAlgo = new ATokVisitor(new ITokVisitorCmd() {&#xD;
					@Override&#xD;
					public Object apply(String id, Token host, Object... params) {&#xD;
						throw new IllegalArgumentException(&quot;ABCParser.tupletCmd: Non-Note token encountered: &quot; + host);&#xD;
					}&#xD;
&#xD;
				}) {&#xD;
					// Initializer block for internal visitor&#xD;
					{&#xD;
						this.addCmd(&quot;Note&quot;, new ITokVisitorCmd() {&#xD;
							@SuppressWarnings(&quot;unchecked&quot;)&#xD;
							@Override&#xD;
							public Object apply(String id, Token host, Object... params) {&#xD;
								int count = (Integer) params[0];&#xD;
								Vector&lt;Note> vNotes = ((Vector&lt;Note>) params[1]);&#xD;
&#xD;
								Note note = makeNote(host);&#xD;
								System.out.println(&quot;Tuplet parsed Note: &quot; + note + &quot; count = &quot; + count);&#xD;
								vNotes.add(note);&#xD;
&#xD;
								if (1 == count) {&#xD;
									Note[] result = new Note[vNotes.size()];&#xD;
									for (int i = 0; i &lt; vNotes.size(); i++)&#xD;
										result[i] = vNotes.get(i);&#xD;
									return result;&#xD;
								} else {&#xD;
									return abcT.getNextToken().execute(makeTupletAlgo, --count, vNotes);&#xD;
								}&#xD;
							}&#xD;
						});&#xD;
&#xD;
					}&#xD;
				};&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					int nNotes = Integer.parseInt(host.getLexeme());&#xD;
&#xD;
					Note[] notes = (Note[]) abcT.getNextToken().execute(makeTupletAlgo, nNotes, new Vector&lt;Note>());&#xD;
&#xD;
					NoteCollection result;&#xD;
&#xD;
					if (3 == nNotes) {&#xD;
						result = new Triplet(notes[0], notes[1], notes[2]);&#xD;
					} else {&#xD;
						result = new Tuplet(notes);&#xD;
					}&#xD;
					System.out.println(&quot;Tuplet parsed: &quot; + result);&#xD;
					return new NESeqList(result, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Measure bar --------------------------------------------&#xD;
			ITokVisitorCmd measureBarCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					accidentalNotes.clear(); // clear any accidentals&#xD;
					System.out.println(&quot;Measure bar parsed.  Accidental Notes cleared.&quot;);&#xD;
					// Continue on to next token.&#xD;
					return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat Start -----------------------------------------&#xD;
			ITokVisitorCmd repeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList repeatStart = new DecoratorSeqList();&#xD;
					pushJumpTarget(repeatStart);&#xD;
					System.out.println(&quot;Repeat Start parsed&quot;);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
					repeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Repeat End -----------------------------------------&#xD;
			ITokVisitorCmd repeatEndCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					ISeqList jumpTarget = popJumpTarget();&#xD;
					System.out.println(&quot;Repeat End parsed&quot;);&#xD;
					if (jumpSecondRepeatStack.isEmpty()) {&#xD;
						return new ToggleDecoratorSeqList(jumpTarget,&#xD;
								(ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
					} else {&#xD;
						abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
						return jumpTarget;&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ First Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd firstRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = new DecoratorSeqList();&#xD;
					jumpSecondRepeatStack.push(secondRepeatStart);&#xD;
					System.out.println(&quot;First Repeat Start parsed.  ID = &quot; + id);&#xD;
					return new ToggleDecoratorSeqList((ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params),&#xD;
							secondRepeatStart);&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Second Repeat Start Repeat --------------------------&#xD;
			ITokVisitorCmd secondRepeatStartCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack.pop();&#xD;
					System.out.println(&quot;Second Repeat Start parsed.  ID = &quot; + id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return result;&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Alt. Second Repeat Start Repeat --------------------------&#xD;
			/**&#xD;
			 * This covers the &quot;:|2&quot; token which includes the repeat.&#xD;
			 */&#xD;
			ITokVisitorCmd secondRepeatStartAltCmd = new ITokVisitorCmd() {&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					DecoratorSeqList secondRepeatStart = jumpSecondRepeatStack.pop();&#xD;
					System.out.println(&quot;Second Repeat Start Alt. parsed.  ID = &quot; + id);&#xD;
					ISeqList result = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
					secondRepeatStart.setDecoree(result);&#xD;
					return popJumpTarget();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ------ Quote processing --------------------------&#xD;
			ITokVisitorCmd quoteCmd = new ITokVisitorCmd() {&#xD;
&#xD;
				FineToggleDecoratorSeqList fineToggle = new FineToggleDecoratorSeqList();&#xD;
&#xD;
				boolean isSwapped = false;&#xD;
&#xD;
				@Override&#xD;
				public Object apply(String id, Token host, Object... params) {&#xD;
					if (host.getLexeme().equals(&quot;_fine&quot;)) {&#xD;
&#xD;
						System.out.println(&quot;\&quot;_fine\&quot; parsed&quot;);&#xD;
						fineToggle.setDecoree(0, (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, params));&#xD;
						return fineToggle;&#xD;
					} else if (host.getLexeme().equals(&quot;_D.C al Fine&quot;)) {&#xD;
						if (isSwapped) {&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed&quot;);&#xD;
							return new ISeqList() {&#xD;
&#xD;
								@Override&#xD;
								public Object execute(IPhraseVisitor algo, Object... params) {&#xD;
									fineToggle.setFine();&#xD;
									return beginningTarget.execute(algo, params);&#xD;
								}&#xD;
							};&#xD;
						} else {&#xD;
							isSwapped = true;&#xD;
							System.out.println(&quot;\&quot;_D.C al Fine\&quot; parsed, but swapped for next token.&quot;);&#xD;
							return swapToken(host).execute(makeSeqListAlgo, params);&#xD;
						}&#xD;
					} else {&#xD;
						System.out.println(&quot;Quote parsed - ignored&quot;);&#xD;
						return abcT.getNextToken().execute(makeSeqListAlgo, params);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
&#xD;
			// ---- Add Commands to Visitor------------------------------&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;EOF&quot;, eofCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Note&quot;, noteCmd);&#xD;
&#xD;
			String headers = &quot;ABCDEFGHIKLMNOPQRSTWXZ&quot;;&#xD;
			for (int i = 0; i &lt; headers.length(); i++) {&#xD;
				makeSeqListAlgo.addCmd(&quot;&quot; + headers.charAt(i), headerCmd);&#xD;
			}&#xD;
&#xD;
			makeSeqListAlgo.addCmd(&quot;[&quot;, chordStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;{&quot;, graceStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;}&quot;, graceEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Tuplet&quot;, tupletCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|&quot;, measureBarCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|:&quot;, repeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|&quot;, repeatEndCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[1&quot;, firstRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;[2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;|2&quot;, secondRepeatStartCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;:|2&quot;, secondRepeatStartAltCmd);&#xD;
			makeSeqListAlgo.addCmd(&quot;Quote&quot;, quoteCmd);&#xD;
		} catch (Exception e) {&#xD;
			System.err.println(&quot;ABCParser constructor exception: &quot; + e);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-8ta4iEeeb3J7owtunSg" name="parse" specification="_vCbM8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-8tq4iEeeb3J7owtunSg" type="_vDVL4K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>ISeqList beginning = (ISeqList) abcT.getNextToken().execute(makeSeqListAlgo, MTSeqList.Singleton);&#xD;
		beginningTarget.setDecoree(beginning);&#xD;
		return beginning;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN-8t64iEeeb3J7owtunSg" name="makeNote" specification="_vKRhYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN-8uK4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vN-8ua4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>char name = 'C';&#xD;
		int octave = 0;&#xD;
		int accidental = 0;&#xD;
		double duration = 1.0;&#xD;
		boolean isNatural = false;&#xD;
&#xD;
		String lex = host.getLexeme();&#xD;
&#xD;
		// get accidental value&#xD;
		int i = 0;&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isLetter(lex.charAt(i))) {&#xD;
				break;&#xD;
			}&#xD;
			if (lex.charAt(i) == '^') {&#xD;
				accidental += +1;&#xD;
			} else if (lex.charAt(i) == '_') {&#xD;
				accidental += -1;&#xD;
			} else if (lex.charAt(i) == '=') {&#xD;
				isNatural = true;&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (Character.isLowerCase(lex.charAt(i))) {&#xD;
			octave++;&#xD;
		}&#xD;
		name = Character.toUpperCase(lex.charAt(i));&#xD;
		i++;&#xD;
&#xD;
		// get octave value&#xD;
&#xD;
		for (; i &lt; lex.length(); i++) {&#xD;
			if (Character.isDigit(lex.charAt(i)) || '/' == lex.charAt(i)) {&#xD;
				break;&#xD;
			}&#xD;
			if ('\'' == lex.charAt(i))&#xD;
				octave += +1;&#xD;
			else if (',' == lex.charAt(i))&#xD;
				octave += -1;&#xD;
		}&#xD;
&#xD;
		if (i &lt; lex.length()) {&#xD;
			if (Character.isDigit(lex.charAt(i))) {&#xD;
				int idx = lex.substring(i).indexOf('/');&#xD;
				if (-1 == idx) {&#xD;
					duration = Double.parseDouble(lex.substring(i));&#xD;
				} else if (lex.length() > i + idx + 1) {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx))&#xD;
							/ Double.parseDouble(lex.substring(i + idx + 1));&#xD;
				} else {&#xD;
					duration = Double.parseDouble(lex.substring(i, i + idx)) / 2.0;&#xD;
				}&#xD;
			} else {&#xD;
				i++;&#xD;
				if (i &lt; lex.length()) {&#xD;
					duration /= Double.parseDouble(lex.substring(i));&#xD;
				} else {&#xD;
					duration /= 2.0; // Slash w/o number is divide by two.&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (isGrace) {&#xD;
			duration *= grace_multiplier;&#xD;
			graceDuration += duration; // sum the duration of the grace notes&#xD;
		} else if (graceDuration > 0.0) {&#xD;
			// Correct the length of the current note to get it back on beat.&#xD;
			duration -= graceDuration;&#xD;
			graceDuration = 0.0;&#xD;
		}&#xD;
&#xD;
		if (dottedCorrection != 0.0) {&#xD;
			duration += dottedCorrection;&#xD;
			dottedCorrection = 0.0;&#xD;
		}&#xD;
&#xD;
		duration = (Double) abcT.getNextToken().execute(checkNextNoteAlgo, duration);&#xD;
&#xD;
		Note note = new Note(name, octave, accidental, duration, isNatural);&#xD;
&#xD;
		if (!isNatural) // naturals always override prior accidentals in measure&#xD;
			checkAccidentals(note);&#xD;
		return note;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN_jwK4iEeeb3J7owtunSg" name="checkAccidentals" specification="_vKSIca4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vN_jwa4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName() &amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				System.out.println(note + &quot; found in accidentals.  Overriding accidentals and isNatural to &quot; + n);&#xD;
				note.setAccidental(n.getAccidental());&#xD;
				note.setIsNatural(n.getIsNatural()); // this will override&#xD;
														// accidentals if true&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
		if (note.getAccidental() != 0 || note.getIsNatural()) {&#xD;
			addAccidental(note);&#xD;
		}&#xD;
		return;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOAK0K4iEeeb3J7owtunSg" name="addAccidental" specification="_vKSvga4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOAK0a4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>removeAccidental(note); // remove anything like this note&#xD;
		accidentalNotes.add(note); // put this specific note in&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOAK0q4iEeeb3J7owtunSg" name="removeAccidental" specification="_vKTWkK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOAK064iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>for (Note n : accidentalNotes) {&#xD;
			if (n.getName() == note.getName() &amp;&amp; n.getOctave() == note.getOctave()) {&#xD;
				accidentalNotes.remove(n);&#xD;
				// Check all notes, just to be safe&#xD;
			}&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOAK1K4iEeeb3J7owtunSg" name="swapToken" specification="_vKTWkq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOAK1a4iEeeb3J7owtunSg" name="t" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOAK1q4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>Token next = abcT.getNextToken();&#xD;
		abcT.putBack(t);&#xD;
		return next;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCYJoK4iEeeb3J7owtunSg" name="popJumpTarget" visibility="private" method="_vN-Voq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOf6Ga4iEeeb3J7owtunSg">
              <body>Pull off the current jump target from the jump target stack. If the stack&#xD;
	 * is empty, return the proxy for the beginning of the phrase, as this is&#xD;
	 * the default jump target.&#xD;
	 * &#xD;
	 * @return The current jump target or the beginning of the phrase.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKQTQK4iEeeb3J7owtunSg" type="_vCuH4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vCZXwK4iEeeb3J7owtunSg" name="ABCParser" method="_vN-8sq4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vCal4K4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vCal4a4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOghIK4iEeeb3J7owtunSg">
              <body>Constructs a parser for the given ABC input file.   Does not actually run that parser yet.&#xD;
	 * Prints error message to System.err if there is a problem opening the given file.   The returned &#xD;
	 * parser will be null in the event of an error.&#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file</body>
            </ownedComment>
            <ownedParameter xmi:id="_vCZ-0K4iEeeb3J7owtunSg" name="inputFileName">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vCal4q4iEeeb3J7owtunSg" type="_vCW7gK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vCbM8K4iEeeb3J7owtunSg" name="parse" method="_vN-8ta4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghIa4iEeeb3J7owtunSg">
              <body>&#xD;
	 * Run the parser and parse the entire file, returning an IPhrase object that represents the entire piece of music.&#xD;
	 * &#xD;
	 * @return An IPhrase object</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKQ6Ua4iEeeb3J7owtunSg" type="_vDVL4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKQTQa4iEeeb3J7owtunSg" name="pushJumpTarget" visibility="private" method="_vN-8sK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOf6Gq4iEeeb3J7owtunSg">
              <body>Push the given jump target onto the stack so that it is now the current&#xD;
	 * jump target. This corresponds to the innermost nested repeat.&#xD;
	 * &#xD;
	 * @param target&#xD;
	 *            The new current jump target.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKQ6UK4iEeeb3J7owtunSg" name="target" type="_vCuH4K4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKRhYK4iEeeb3J7owtunSg" name="makeNote" visibility="private" method="_vN-8t64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghIq4iEeeb3J7owtunSg">
              <body>Parse a Note from the given Token&#xD;
	 * &#xD;
	 * @param host&#xD;
	 *            The Note token&#xD;
	 * @return A Note object</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKRhYa4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKSIcK4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKSIca4iEeeb3J7owtunSg" name="checkAccidentals" visibility="private" method="_vN_jwK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghI64iEeeb3J7owtunSg">
              <body>Checks to see if the given Note is in the set of accidentals Checks name&#xD;
	 * and octave but not duration or accidental&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            The note to check</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKSvgK4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKSvga4iEeeb3J7owtunSg" name="addAccidental" visibility="private" method="_vOAK0K4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghJK4iEeeb3J7owtunSg">
              <body>Adds a note to the set of accidentals replaces any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the Note to add.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKSvgq4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKTWkK4iEeeb3J7owtunSg" name="removeAccidental" visibility="private" method="_vOAK0q4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghJa4iEeeb3J7owtunSg">
              <body>Removes a note from the set of accidentals Removes any note with the same&#xD;
	 * name and octave. duration and accidental are ignored.&#xD;
	 * &#xD;
	 * @param note&#xD;
	 *            the note to remove</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKTWka4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKTWkq4iEeeb3J7owtunSg" name="swapToken" visibility="private" method="_vOAK1K4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOghJq4iEeeb3J7owtunSg">
              <body>Swap the given token for the next token in the tokenizer, returning the&#xD;
	 * next token. The given token will be the next token out of the tokenizer.&#xD;
	 * &#xD;
	 * @param t The token to be swapped into the tokenizer&#xD;
	 * @return the token that previously was next in the tokenizer.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKTWk64iEeeb3J7owtunSg" name="t" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKTWlK4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vO_pUa4iEeeb3J7owtunSg" name="" memberEnd="_vO_pUq4iEeeb3J7owtunSg _vM3iYq4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vO_pUq4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vO_pUa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPA3cK4iEeeb3J7owtunSg" name="" memberEnd="_vPA3ca4iEeeb3J7owtunSg _vM4Jca4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPA3ca4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPA3cK4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPBega4iEeeb3J7owtunSg" name="" memberEnd="_vPBegq4iEeeb3J7owtunSg _vM4JdK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPBegq4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPBega4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPCFka4iEeeb3J7owtunSg" name="" memberEnd="_vPCFkq4iEeeb3J7owtunSg _vM5Xka4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPCFkq4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPCFka4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPCsoa4iEeeb3J7owtunSg" name="" memberEnd="_vPCsoq4iEeeb3J7owtunSg _vM6lsK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPCsoq4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPCsoa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPD6wK4iEeeb3J7owtunSg" name="" memberEnd="_vPD6wa4iEeeb3J7owtunSg _vM9B8q4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPD6wa4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPD6wK4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPEh0a4iEeeb3J7owtunSg" name="" memberEnd="_vPEh0q4iEeeb3J7owtunSg _vM9pAa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPEh0q4iEeeb3J7owtunSg" name="" type="_vCW7gK4iEeeb3J7owtunSg" association="_vPEh0a4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u-Jw8q4iEeeb3J7owtunSg" name="music">
        <packagedElement xmi:type="uml:Class" xmi:id="_vCkW4K4iEeeb3J7owtunSg" name="APhraseVisitor" isAbstract="true">
          <ownedComment xmi:id="_vOghJ64iEeeb3J7owtunSg">
            <body>Command-based implementation of IPhraseVisitor that uses IPhraseVisitorCmds stored in a hash table.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vM-3IK4iEeeb3J7owtunSg" name="defaultCmd" visibility="private" type="_vDY2QK4iEeeb3J7owtunSg" association="_vPFI4a4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vM-3Iq4iEeeb3J7owtunSg" name="cmds" visibility="private" type="_vDY2QK4iEeeb3J7owtunSg" association="_vPFv8a4iEeeb3J7owtunSg">
            <qualifier xmi:id="_vNAFQK4iEeeb3J7owtunSg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vM_eMK4iEeeb3J7owtunSg" value="new Hashtable&lt;String, IPhraseVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKXoAa4iEeeb3J7owtunSg" client="_vCkW4K4iEeeb3J7owtunSg" supplier="_vDXBEK4iEeeb3J7owtunSg" contract="_vDXBEK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOAx4K4iEeeb3J7owtunSg" name="APhraseVisitor" specification="_vCllAK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOAx4a4iEeeb3J7owtunSg" type="_vCkW4K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>defaultCmd = new IPhraseVisitorCmd() {&#xD;
			public Object apply(String idx, IPhrase host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&quot;APhraseVisitor: Unknown index encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOBY8K4iEeeb3J7owtunSg" name="APhraseVisitor" specification="_vKY2IK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOBY8a4iEeeb3J7owtunSg" name="defaultCmd" type="_vDY2QK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOBY8q4iEeeb3J7owtunSg" type="_vCkW4K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOBY864iEeeb3J7owtunSg" name="caseAt" specification="_vLykUK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOBY9K4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOBY9a4iEeeb3J7owtunSg" name="host" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOBY9q4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOBY964iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOBY-K4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOCAAK4iEeeb3J7owtunSg" name="addCmd" specification="_vKaEQK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOCAAa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOCAAq4iEeeb3J7owtunSg" name="cmd" type="_vDY2QK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCllAK4iEeeb3J7owtunSg" name="APhraseVisitor" method="_vOAx4K4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vCllAa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vCllAq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOghKK4iEeeb3J7owtunSg">
              <body>Constructor that installs a default cmd that throws an IllegalArgumentException on any unknown host.</body>
            </ownedComment>
            <ownedComment xmi:id="_vOhIMK4iEeeb3J7owtunSg">
              <body>Abstract extended visitor implementation that uses a dictionary of commands to associate commands with host IDs.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vCllA64iEeeb3J7owtunSg" type="_vCkW4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKY2IK4iEeeb3J7owtunSg" name="APhraseVisitor" method="_vOBY8K4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKY2Iq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKY2I64iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOhIMa4iEeeb3J7owtunSg">
              <body>Constructor that sets the default cmd to the supplied cmd.&#xD;
	 * @param defaultCmd   the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKY2Ia4iEeeb3J7owtunSg" name="defaultCmd" type="_vDY2QK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKY2JK4iEeeb3J7owtunSg" type="_vCkW4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKaEQK4iEeeb3J7owtunSg" name="addCmd" method="_vOCAAK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhIMq4iEeeb3J7owtunSg">
              <body>Add the given command to the dictionary, associated with the given id value.&#xD;
	 * @param id The id of the host that will use this command&#xD;
	 * @param cmd The command that will be run when the host calls for it.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKaEQa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKaEQq4iEeeb3J7owtunSg" name="cmd" type="_vDY2QK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vLykUK4iEeeb3J7owtunSg" name="caseAt" method="_vOBY864iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vLykUa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLykUq4iEeeb3J7owtunSg" name="host" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vLykU64iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vLzLYa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLykVK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vCp2cK4iEeeb3J7owtunSg" name="Chord">
          <ownedComment xmi:id="_vOhIM64iEeeb3J7owtunSg">
            <body>A collection of notes that make up a Chord.  All of the notes should&#xD;
be played simultaneously.   The last note defines the length of all the notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOhINK4iEeeb3J7owtunSg">
            <body>A collection of Notes all played at once</body>
          </ownedComment>
          <generalization xmi:id="_vKdHkK4iEeeb3J7owtunSg" general="_vDwCoK4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNAFQa4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNAsUK4iEeeb3J7owtunSg" value="&quot;Chord&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOCAA64iEeeb3J7owtunSg" name="Chord" specification="_vKbSYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOCABK4iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOCABa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOCABq4iEeeb3J7owtunSg" type="_vCp2cK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOCnEK4iEeeb3J7owtunSg" name="execute" specification="_vL0ZgK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOCnEa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOCnEq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOCnE64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOCnFK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOCnFa4iEeeb3J7owtunSg" name="toString" specification="_vCrEkK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOCnFq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Chord(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCrEkK4iEeeb3J7owtunSg" name="toString" method="_vOCnFa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vCrEka4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKbSYK4iEeeb3J7owtunSg" name="Chord" method="_vOCAA64iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKb5cK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKb5ca4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vKbSYa4iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKcggK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKb5c64iEeeb3J7owtunSg" type="_vCp2cK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vL0ZgK4iEeeb3J7owtunSg" name="execute" method="_vOCnEK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vL0Zga4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL0Zgq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL1Akq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL1AkK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vCuH4K4iEeeb3J7owtunSg" name="DecoratorSeqList">
          <ownedComment xmi:id="_vOhINa4iEeeb3J7owtunSg">
            <body>An ISeqList that transparently routes the visitor execution to its decoree.  &#xD;
This class is primarily used to provide a placeholder when a the music should flow &#xD;
to a specific point in the sequence but that point has not yet been calculated, as occurs&#xD;
for instance, during the processing of repeats.    When that target point is finally calculated, &#xD;
the decoree can be set and the decorated target will behave identically to the target.&#xD;
This decorator can also be used to dynamically change the flow of the music by changing the target.  &#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_vOhINq4iEeeb3J7owtunSg">
            <body>Decorated ISeqList used as a transparent proxy placeholder.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNAsUa4iEeeb3J7owtunSg" name="decoree" visibility="private" type="_vDarcK4iEeeb3J7owtunSg" association="_vPGXAa4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNAsUq4iEeeb3J7owtunSg" value="MTSeqList.Singleton"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKduoK4iEeeb3J7owtunSg" client="_vCuH4K4iEeeb3J7owtunSg" supplier="_vDarcK4iEeeb3J7owtunSg" contract="_vDarcK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOCnF64iEeeb3J7owtunSg" name="DecoratorSeqList" specification="_vKeVsK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOCnGK4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOCnGa4iEeeb3J7owtunSg" type="_vCuH4K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>setDecoree(decoree);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vODOIK4iEeeb3J7owtunSg" name="setDecoree" specification="_vKe8w64iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vODOIa4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>this.decoree = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vODOIq4iEeeb3J7owtunSg" name="execute" specification="_vL21wK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vODOI64iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vODOJK4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vODOJa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vODOJq4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return decoree.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vCv9EK4iEeeb3J7owtunSg" name="DecoratorSeqList">
            <eAnnotations xmi:id="_vCwkIK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vCwkIa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vCxLMa4iEeeb3J7owtunSg" type="_vCuH4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKeVsK4iEeeb3J7owtunSg" name="DecoratorSeqList" method="_vOCnF64iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKe8wK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKe8wa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOhIN64iEeeb3J7owtunSg">
              <body>Constructor used to set the decoree to a known value at construction time.&#xD;
	 * @param decoree The decoree phrase sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKeVsa4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKe8wq4iEeeb3J7owtunSg" type="_vCuH4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKe8w64iEeeb3J7owtunSg" name="setDecoree" method="_vODOIK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhIOK4iEeeb3J7owtunSg">
              <body>Setter methods used to set the decoree.&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKe8xK4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vL21wK4iEeeb3J7owtunSg" name="execute" method="_vODOIq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vL21wa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL21wq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL3c0q4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL3c0K4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vC3R0K4iEeeb3J7owtunSg" name="FineToggleDecoratorSeqList">
          <ownedComment xmi:id="_vOhvQK4iEeeb3J7owtunSg">
            <body>The class is used to implement &quot;Da Capo al fine&quot; or &quot;D.C. al fine&quot;, &#xD;
which is to repeat from the beginning up to the &quot;fine&quot; marker.&#xD;
&#xD;
this class assumes that only two target decorees are ever used.&#xD;
&#xD;
The is ToggleDecoratorSeqList that can be signaled to switch to the &#xD;
another target.   Be default, the target decoree (#0) remains the same even &#xD;
when it is accessed.  But after setFine() is called, the target decoree&#xD;
is switched to the #1 decoree (the &quot;fine&quot; target, usually an MTSeqList because&#xD;
it is the end of the piece).   After the #1 decoree is used, the target&#xD;
decoree is advanced to the next available decoree, which , for two decorees, &#xD;
would be back to the #0 decoree.  The class returns to default behavior then.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_vOhvQa4iEeeb3J7owtunSg">
            <body>ToggleDecoratorSeqList with controllable cycling</body>
          </ownedComment>
          <generalization xmi:id="_vKinIK4iEeeb3J7owtunSg" general="_vDztAK4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNBTYa4iEeeb3J7owtunSg" name="isFine" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNBTYq4iEeeb3J7owtunSg" value="false"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOD1MK4iEeeb3J7owtunSg" name="FineToggleDecoratorSeqList" specification="_vC344K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOD1Ma4iEeeb3J7owtunSg" type="_vC3R0K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOD1Mq4iEeeb3J7owtunSg" name="FineToggleDecoratorSeqList" specification="_vKgx8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOD1M64iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOD1NK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOD1Na4iEeeb3J7owtunSg" type="_vC3R0K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>super(decorees);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOEcQK4iEeeb3J7owtunSg" name="setFine" specification="_vC6VIK4iEeeb3J7owtunSg">
            <language>java</language>
            <body>this.isFine = true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOEcQa4iEeeb3J7owtunSg" name="execute" specification="_vL4q8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOEcQq4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOEcQ64iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOEcRK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOEcRa4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>if (isFine) {&#xD;
			isFine = false;&#xD;
			this.setTargetToDecoree(1);&#xD;
			return super.execute(algo, params);&#xD;
		} else&#xD;
			return getTargetDecoree().execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOEcRq4iEeeb3J7owtunSg" name="toString" specification="_vC68MK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOEcR64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vC344K4iEeeb3J7owtunSg" name="FineToggleDecoratorSeqList" method="_vOD1MK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vC4f8K4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vC4f8a4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOhvQq4iEeeb3J7owtunSg">
              <body>Instantiates the class with two MTSeqList decorees.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vC4f8q4iEeeb3J7owtunSg" type="_vC3R0K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vC6VIK4iEeeb3J7owtunSg" name="setFine" method="_vOEcQK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhvQ64iEeeb3J7owtunSg">
              <body>Sets the system to use the &quot;fine&quot; decorator at the next execution.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_vC68MK4iEeeb3J7owtunSg" name="toString" method="_vOEcRq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vC68Ma4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKgx8K4iEeeb3J7owtunSg" name="FineToggleDecoratorSeqList" method="_vOD1Mq4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKgx8q4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKgx864iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vKgx8a4iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKhZAq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKhZAa4iEeeb3J7owtunSg" type="_vC3R0K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vL4q8K4iEeeb3J7owtunSg" name="execute" method="_vOEcQa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vL4q8a4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL4q8q4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL55EK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL5SAK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vC9_gK4iEeeb3J7owtunSg" name="Header">
          <ownedComment xmi:id="_vOhvRK4iEeeb3J7owtunSg">
            <body>An abc Header.  Headers are identified by a one character &quot;id&quot; and&#xD;
can have an arbitrary string value. &lt;br/>&#xD;
Note that this class represents many different *types* of headers, &#xD;
each with its own id value.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOhvRa4iEeeb3J7owtunSg">
            <body>A single Header class represents multiple, distinct header hosts.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNB6ca4iEeeb3J7owtunSg" name="_id" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNChga4iEeeb3J7owtunSg" name="_value" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKj1QK4iEeeb3J7owtunSg" client="_vC9_gK4iEeeb3J7owtunSg" supplier="_vDVL4K4iEeeb3J7owtunSg" contract="_vDVL4K4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOFDUK4iEeeb3J7owtunSg" name="Header" specification="_vDPsUK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOFDUa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOFDUq4iEeeb3J7owtunSg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOFDU64iEeeb3J7owtunSg" type="_vC9_gK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>_id = id;&#xD;
		_value = value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOFDVK4iEeeb3J7owtunSg" name="execute" specification="_vL6gIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOFDVa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOFDVq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOFDV64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOFDWK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_id, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOFDWa4iEeeb3J7owtunSg" name="getID" specification="_vDQ6cK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOFDWq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOFDW64iEeeb3J7owtunSg" name="getValue" specification="_vDRhga4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOFqYK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOFqYa4iEeeb3J7owtunSg" name="toString" specification="_vDSIka4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOFqYq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _id + &quot;:&quot; + _value;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vDPsUK4iEeeb3J7owtunSg" name="Header" method="_vOFDUK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vDQTYK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vDQTYa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOhvRq4iEeeb3J7owtunSg">
              <body>Create a header out of an id and value&#xD;
	 * &#xD;
	 * @param id    - one character corresponding to the abc header name&#xD;
	 * @param value - arbitrary string value of the header</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDPsUa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDPsUq4iEeeb3J7owtunSg" name="value">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDQTYq4iEeeb3J7owtunSg" type="_vC9_gK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDQ6cK4iEeeb3J7owtunSg" name="getID" method="_vOFDWa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhvR64iEeeb3J7owtunSg">
              <body>Accessor for the id.&#xD;
	 * @return the _id</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDRhgK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDRhga4iEeeb3J7owtunSg" name="getValue" method="_vOFDW64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhvSK4iEeeb3J7owtunSg">
              <body>Accessor for the text value of this header.&#xD;
	 * @return the _value</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDSIkK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDSIka4iEeeb3J7owtunSg" name="toString" method="_vOFqYa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOhvSa4iEeeb3J7owtunSg">
              <body>String representation of this header: &quot;id: text&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDSIkq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vL6gIK4iEeeb3J7owtunSg" name="execute" method="_vOFDVK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vL6gIa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL6gIq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL7HMq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL7HMK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vDT9wK4iEeeb3J7owtunSg" name="INote">
          <ownedComment xmi:id="_vOhvSq4iEeeb3J7owtunSg">
            <body>Note interface for Notes and collections of Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWUK4iEeeb3J7owtunSg">
            <body>A generalized notion of a note</body>
          </ownedComment>
          <generalization xmi:id="_vKlqcK4iEeeb3J7owtunSg" general="_vDVL4K4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vDVL4K4iEeeb3J7owtunSg" name="IPhrase">
          <ownedComment xmi:id="_vOiWUa4iEeeb3J7owtunSg">
            <body>Top level of a piece of abc music.  The generalized notion of a playable piece of music.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWUq4iEeeb3J7owtunSg">
            <body>Abstract Host&#xD;
Each concrete host calls its associated case on the visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_vL8VUK4iEeeb3J7owtunSg" name="execute">
            <ownedParameter xmi:id="_vL8VUa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL8VUq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL88Yq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL88YK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vDXBEK4iEeeb3J7owtunSg" name="IPhraseVisitor">
          <ownedComment xmi:id="_vOiWU64iEeeb3J7owtunSg">
            <body>Interface for a Phrase visitor.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWVK4iEeeb3J7owtunSg">
            <body>Abstract extended visitor.&#xD;
Supplies case behavior for every host.</body>
          </ownedComment>
          <ownedOperation xmi:id="_vL-KgK4iEeeb3J7owtunSg" name="caseAt">
            <ownedParameter xmi:id="_vL-Kga4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL-Kgq4iEeeb3J7owtunSg" name="host" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vL-Kg64iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vL-xka4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vL-KhK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vDY2QK4iEeeb3J7owtunSg" name="IPhraseVisitorCmd">
          <ownedComment xmi:id="_vOiWVa4iEeeb3J7owtunSg">
            <body>The command used by APhraseVisitor that is associated with a host or hosts.&#xD;
@author rixner</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWVq4iEeeb3J7owtunSg">
            <body>Abstract command used by APhraseVisitor.  Each command is associated with a particular host(s).</body>
          </ownedComment>
          <ownedOperation xmi:id="_vL__sK4iEeeb3J7owtunSg" name="apply">
            <ownedParameter xmi:id="_vMAmwK4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMAmwa4iEeeb3J7owtunSg" name="host" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMAmwq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMBN0a4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMAmw64iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vDarcK4iEeeb3J7owtunSg" name="ISeqList">
          <ownedComment xmi:id="_vOiWV64iEeeb3J7owtunSg">
            <body>Interface for sequential lists of IPhrases.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWWK4iEeeb3J7owtunSg">
            <body>A list of IPhrases&#xD;
e.g. an ordered sequence of Notes.</body>
          </ownedComment>
          <generalization xmi:id="_vKoGsK4iEeeb3J7owtunSg" general="_vDVL4K4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vDb5kK4iEeeb3J7owtunSg" name="MTSeqList">
          <ownedComment xmi:id="_vOiWWa4iEeeb3J7owtunSg">
            <body>An empty sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOiWWq4iEeeb3J7owtunSg">
            <body>An empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNDIka4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNDvoK4iEeeb3J7owtunSg" value="&quot;MTSeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNDvoa4iEeeb3J7owtunSg" name="Singleton" isLeaf="true" isStatic="true" type="_vDb5kK4iEeeb3J7owtunSg" isReadOnly="true" association="_vPG-Ea4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNDvoq4iEeeb3J7owtunSg" value="new MTSeqList()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKoGsa4iEeeb3J7owtunSg" client="_vDb5kK4iEeeb3J7owtunSg" supplier="_vDarcK4iEeeb3J7owtunSg" contract="_vDarcK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOGRcK4iEeeb3J7owtunSg" name="execute" specification="_vMB04K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOGRca4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOGRcq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOGRc64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOGRdK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOGRda4iEeeb3J7owtunSg" name="toString" specification="_vDduwK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOGRdq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;{}&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vDcgoK4iEeeb3J7owtunSg" name="MTSeqList" visibility="private">
            <eAnnotations xmi:id="_vDcgoa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vDdHsK4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vDdHsq4iEeeb3J7owtunSg" type="_vDb5kK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDduwK4iEeeb3J7owtunSg" name="toString" method="_vOGRda4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vDduwa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vMB04K4iEeeb3J7owtunSg" name="execute" method="_vOGRcK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMCb8K4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMCb8a4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMDDAK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMCb8q4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vDfj8K4iEeeb3J7owtunSg" name="NESeqList">
          <ownedComment xmi:id="_vOi9YK4iEeeb3J7owtunSg">
            <body>A non-empty (&quot;cons&quot;) sequence list.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOi9Ya4iEeeb3J7owtunSg">
            <body>A non-empty ISeqList</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNEWsK4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNEWsa4iEeeb3J7owtunSg" value="&quot;NESeqList&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNEWsq4iEeeb3J7owtunSg" name="_first" visibility="private" type="_vDVL4K4iEeeb3J7owtunSg" association="_vPHlIa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNE9wa4iEeeb3J7owtunSg" name="_rest" visibility="private" type="_vDarcK4iEeeb3J7owtunSg" association="_vPIMMK4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNE9w64iEeeb3J7owtunSg" name="_toStringAlgo" visibility="private" isStatic="true" type="_vDXBEK4iEeeb3J7owtunSg" association="_vPIMM64iEeeb3J7owtunSg"/>
          <interfaceRealization xmi:id="_vKp74K4iEeeb3J7owtunSg" client="_vDfj8K4iEeeb3J7owtunSg" supplier="_vDarcK4iEeeb3J7owtunSg" contract="_vDarcK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOG4gK4iEeeb3J7owtunSg" name="NESeqList" specification="_vKqi8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOG4ga4iEeeb3J7owtunSg" name="first" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOG4gq4iEeeb3J7owtunSg" name="rest" type="_vDarcK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOG4g64iEeeb3J7owtunSg" type="_vDfj8K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>this._rest = rest;&#xD;
		this._first = first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOG4hK4iEeeb3J7owtunSg" name="getFirst" specification="_vDgyEK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOG4ha4iEeeb3J7owtunSg" type="_vDVL4K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return _first;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOG4hq4iEeeb3J7owtunSg" name="getRest" specification="_vDhZIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOG4h64iEeeb3J7owtunSg" type="_vDarcK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return _rest;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOG4iK4iEeeb3J7owtunSg" name="execute" specification="_vMERIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOG4ia4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOG4iq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOG4i64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOG4jK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOHfkK4iEeeb3J7owtunSg" name="setToStringAlgo" specification="_vKsYIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOHfka4iEeeb3J7owtunSg" name="stringAlgo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>_toStringAlgo = stringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOHfkq4iEeeb3J7owtunSg" name="getToStringAlgo" specification="_vDinQK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOHfk64iEeeb3J7owtunSg" type="_vDXBEK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return _toStringAlgo;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOHflK4iEeeb3J7owtunSg" name="toString" specification="_vDjOUK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOHfla4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) _rest.execute(_toStringAlgo, &quot;{&quot; + _first.toString());&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vDgyEK4iEeeb3J7owtunSg" name="getFirst" method="_vOG4hK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOi9Y64iEeeb3J7owtunSg">
              <body>Accessor method for the first element&#xD;
	 * @return the IPhrase that is the first element of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKrxEK4iEeeb3J7owtunSg" type="_vDVL4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDhZIK4iEeeb3J7owtunSg" name="getRest" method="_vOG4hq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOi9ZK4iEeeb3J7owtunSg">
              <body>Accessor method for the rest of the lsit&#xD;
	 * @return the rest of the sequence list</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKrxEa4iEeeb3J7owtunSg" type="_vDarcK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDinQK4iEeeb3J7owtunSg" name="getToStringAlgo" visibility="package" isStatic="true" method="_vOHfkq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOi9Zq4iEeeb3J7owtunSg">
              <body>Getter for the _toStringAlgo helper.  Only for use internally inside this package&#xD;
	 * so ToggleDecoratorSeqList and FineToggleDecoratorSeqList can use the same visitor.&#xD;
	 * @return the toStringAlgo helper visitor</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKs_MK4iEeeb3J7owtunSg" type="_vDXBEK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDjOUK4iEeeb3J7owtunSg" name="toString" method="_vOHflK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOi9Z64iEeeb3J7owtunSg">
              <body>Run a visitor over the list to convert it to a String.  &#xD;
	 * Delegates to the rest of the list using the helper algo, with the accumulator &#xD;
	 * (params[0]) set to &quot;{&quot;+_first.toString().  &#xD;
	 * @return &quot;{a, b, c, d}&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDjOUa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKqi8K4iEeeb3J7owtunSg" name="NESeqList" method="_vOG4gK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKrKAq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKrKA64iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOi9Yq4iEeeb3J7owtunSg">
              <body>Cons an IPhrase to a Sequence List.&#xD;
	 * @param first The first element of the sequence&#xD;
	 * @param rest The rest of the sequence</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKrKAK4iEeeb3J7owtunSg" name="first" type="_vDVL4K4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKrKAa4iEeeb3J7owtunSg" name="rest" type="_vDarcK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vKrKBK4iEeeb3J7owtunSg" type="_vDfj8K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKsYIK4iEeeb3J7owtunSg" name="setToStringAlgo" isStatic="true" method="_vOHfkK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOi9Za4iEeeb3J7owtunSg">
              <body>Setter for the _toStringAlgo helper.  This non-typical method is provided solely &#xD;
	 * for the purpose of enabling the student to install their toStringAlgo into the &#xD;
	 * read-only provided code.&#xD;
	 * @param stringAlgo The helper algo to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKsYIa4iEeeb3J7owtunSg" name="stringAlgo" type="_vDXBEK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMERIK4iEeeb3J7owtunSg" name="execute" method="_vOG4iK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMERIa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMERIq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vME4Ma4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMERI64iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vDnfwK4iEeeb3J7owtunSg" name="Note">
          <ownedComment xmi:id="_vOi9aK4iEeeb3J7owtunSg">
            <body>Basic class representing musical Notes.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOi9aa4iEeeb3J7owtunSg">
            <body>A playable note or rest.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNIoIK4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNJPMK4iEeeb3J7owtunSg" value="&quot;Note&quot;"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNJPMa4iEeeb3J7owtunSg" name="name" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNJPMq4iEeeb3J7owtunSg" value="'Z'"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNJ2QK4iEeeb3J7owtunSg" name="octave">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNJ2Qa4iEeeb3J7owtunSg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNJ2Qq4iEeeb3J7owtunSg" name="accidental" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNJ2Q64iEeeb3J7owtunSg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNKdUK4iEeeb3J7owtunSg" name="duration">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNKdUa4iEeeb3J7owtunSg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNKdUq4iEeeb3J7owtunSg" name="isNatural" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNKdU64iEeeb3J7owtunSg" value="false"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKuNUK4iEeeb3J7owtunSg" client="_vDnfwK4iEeeb3J7owtunSg" supplier="_vDT9wK4iEeeb3J7owtunSg" contract="_vDT9wK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOIGoK4iEeeb3J7owtunSg" name="Note" specification="_vDot4K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOIGoa4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIGoq4iEeeb3J7owtunSg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIGo64iEeeb3J7owtunSg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIGpK4iEeeb3J7owtunSg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIGpa4iEeeb3J7owtunSg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIGpq4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>setName(name);&#xD;
		setOctave(octave);&#xD;
		setAccidental(accidental);&#xD;
		setDuration(duration);&#xD;
		setIsNatural(isNatural);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOIGp64iEeeb3J7owtunSg" name="toString" specification="_vDp8Aa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOIGqK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String s = &quot;(&quot;;&#xD;
		s += Character.toString(name);&#xD;
		int a = accidental;&#xD;
		if (isNatural) {&#xD;
			s += &quot;n&quot;;&#xD;
		}&#xD;
		while (a &lt; 0) {&#xD;
			s += &quot;b&quot;;&#xD;
			a++;&#xD;
		}&#xD;
		while (a > 0) {&#xD;
			s += &quot;#&quot;;&#xD;
			a--;&#xD;
		}&#xD;
		s += &quot;, &quot; + Integer.toString(octave) + &quot;, &quot;;&#xD;
		s += String.format(&quot;%3.2f&quot;, duration);&#xD;
		s += &quot;)&quot;;&#xD;
&#xD;
		return s;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOItsK4iEeeb3J7owtunSg" name="execute" specification="_vMJJoK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOItsa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOItsq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOIts64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOIttK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOItta4iEeeb3J7owtunSg" name="setName" specification="_vDqjEK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOIttq4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <language>java</language>
            <body>switch (name) {&#xD;
		case 'a':&#xD;
		case 'A':&#xD;
			this.name = 'A';&#xD;
			break;&#xD;
&#xD;
		case 'b':&#xD;
		case 'B':&#xD;
			this.name = 'B';&#xD;
			break;&#xD;
&#xD;
		case 'c':&#xD;
		case 'C':&#xD;
			this.name = 'C';&#xD;
			break;&#xD;
&#xD;
		case 'd':&#xD;
		case 'D':&#xD;
			this.name = 'D';&#xD;
			break;&#xD;
&#xD;
		case 'e':&#xD;
		case 'E':&#xD;
			this.name = 'E';&#xD;
			break;&#xD;
&#xD;
		case 'f':&#xD;
		case 'F':&#xD;
			this.name = 'F';&#xD;
			break;&#xD;
&#xD;
		case 'g':&#xD;
		case 'G':&#xD;
			this.name = 'G';&#xD;
			break;&#xD;
&#xD;
		default:&#xD;
			this.name = 'Z';&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOItt64iEeeb3J7owtunSg" name="setAccidental" specification="_vDrKIa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOItuK4iEeeb3J7owtunSg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.accidental = accidental;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOItua4iEeeb3J7owtunSg" name="getIsNatural" specification="_vDrxMK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOItuq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>return isNatural;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOJUwK4iEeeb3J7owtunSg" name="setIsNatural" specification="_vDrxMq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOJUwa4iEeeb3J7owtunSg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>this.isNatural = isNatural;&#xD;
		if (isNatural)&#xD;
			accidental = 0;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vDot4K4iEeeb3J7owtunSg" name="Note" method="_vOIGoK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vDpU9a4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vDpU9q4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOjkcK4iEeeb3J7owtunSg">
              <body>Constructor for the class&#xD;
	 * @param name  The name of the note&#xD;
	 * @param octave The octave of the note w.r.t. middle C.  Zero = same octave as middle C.&#xD;
	 * @param accidental accidental setting sharp &amp;gt; 0, flat &amp;lt; 0&#xD;
	 * @param duration duration of note&#xD;
	 * @param isNatural flag to override key signature.  True if note should be natural, overriding key signature.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDpU8K4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDpU8a4iEeeb3J7owtunSg" name="octave">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDpU8q4iEeeb3J7owtunSg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDpU864iEeeb3J7owtunSg" name="duration">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDpU9K4iEeeb3J7owtunSg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vDp8AK4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vDp8Aa4iEeeb3J7owtunSg" name="toString" method="_vOIGp64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkca4iEeeb3J7owtunSg">
              <body>Returns a string representation of the Note  &#xD;
	 * @return &quot;(name, octave, duration)&quot;</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDp8Aq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDqjEK4iEeeb3J7owtunSg" name="setName" method="_vOItta4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkcq4iEeeb3J7owtunSg">
              <body>Accessor to set the name of the note&#xD;
	 * @param name - the name to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDrKIK4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDrKIa4iEeeb3J7owtunSg" name="setAccidental" method="_vOItt64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkc64iEeeb3J7owtunSg">
              <body>Accessor to set the accidental value&#xD;
	 * @param accidental - the accidental to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDrKIq4iEeeb3J7owtunSg" name="accidental">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDrxMK4iEeeb3J7owtunSg" name="getIsNatural" method="_vOItua4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkdK4iEeeb3J7owtunSg">
              <body>Accessor for isNatural flag&#xD;
	 * @return isNatural flag setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDrxMa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vDrxMq4iEeeb3J7owtunSg" name="setIsNatural" method="_vOJUwK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkda4iEeeb3J7owtunSg">
              <body>Settor for isNatural flag.  Accidentals will be set to zero if isNatural is true.&#xD;
	 * @param isNatural  New isNatural setting</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDsYQK4iEeeb3J7owtunSg" name="isNatural">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vMJJoK4iEeeb3J7owtunSg" name="execute" method="_vOItsK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMJJoa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMJwsK4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMKXwK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMJwsa4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vDwCoK4iEeeb3J7owtunSg" name="NoteCollection" isAbstract="true">
          <ownedComment xmi:id="_vOjkdq4iEeeb3J7owtunSg">
            <body>A collection of multiple notes</body>
          </ownedComment>
          <ownedComment xmi:id="_vOjkd64iEeeb3J7owtunSg">
            <body>A collection of Notes</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNMSgK4iEeeb3J7owtunSg" name="notes" visibility="protected" type="_vDnfwK4iEeeb3J7owtunSg" association="_vPIzQa4iEeeb3J7owtunSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNM5kK4iEeeb3J7owtunSg" value="*"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKvbcK4iEeeb3J7owtunSg" client="_vDwCoK4iEeeb3J7owtunSg" supplier="_vDT9wK4iEeeb3J7owtunSg" contract="_vDT9wK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOJUwq4iEeeb3J7owtunSg" name="NoteCollection" specification="_vKwCgK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOJUw64iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOJUxK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOJUxa4iEeeb3J7owtunSg" type="_vDwCoK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>this.notes = notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOJ70K4iEeeb3J7owtunSg" name="getNotes" specification="_vDwpsK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOJ70a4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOJ70q4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>return notes;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vDwpsK4iEeeb3J7owtunSg" name="getNotes" method="_vOJ70K4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkeK4iEeeb3J7owtunSg">
              <body>Accessor for the array of notes in this collection&#xD;
	 * @return the array of notes</body>
            </ownedComment>
            <ownedParameter xmi:id="_vDxQwK4iEeeb3J7owtunSg" type="_vDnfwK4iEeeb3J7owtunSg" direction="return">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vDxQwa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKwCgK4iEeeb3J7owtunSg" name="NoteCollection" method="_vOJUwq4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKwCgq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKwpkK4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vKwCga4iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKwpk64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKwpkq4iEeeb3J7owtunSg" type="_vDwCoK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vDztAK4iEeeb3J7owtunSg" name="ToggleDecoratorSeqList">
          <ownedComment xmi:id="_vOjkea4iEeeb3J7owtunSg">
            <body>Multiple Decorator ISeqList where the active decoree (the &quot;target&quot;) is&#xD;
toggled (cycled, actually) through all the available decorees.   &#xD;
This is arguably a State Design Pattern where each decoree is &#xD;
considered to be another state of the system.&#xD;
This is used to implement repeats where the first time through, the notes are linked&#xD;
back to a repeat start (decoree #0) but the next time through, the next note is the one&#xD;
after the repeat (decoree #1).&#xD;
&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_vOjkeq4iEeeb3J7owtunSg">
            <body>Decorated ISeqList that transparently cycles through multiple targets (decorees)</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNNgoa4iEeeb3J7owtunSg" name="decorees" visibility="private" type="_vDarcK4iEeeb3J7owtunSg" association="_vPJaUa4iEeeb3J7owtunSg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNOHsK4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNOHsq4iEeeb3J7owtunSg" value="{ MTSeqList.Singleton, MTSeqList.Singleton }"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNOuwa4iEeeb3J7owtunSg" name="targetIdx" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNOuwq4iEeeb3J7owtunSg" value="0"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vKxQoK4iEeeb3J7owtunSg" client="_vDztAK4iEeeb3J7owtunSg" supplier="_vDarcK4iEeeb3J7owtunSg" contract="_vDarcK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOJ7064iEeeb3J7owtunSg" name="ToggleDecoratorSeqList" specification="_vKxQoa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOJ71K4iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOJ71a4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOJ71q4iEeeb3J7owtunSg" type="_vDztAK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>setDecorees(decorees);&#xD;
		setTargetToDecoree(0);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOKi4K4iEeeb3J7owtunSg" name="setDecorees" specification="_vKyewK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOKi4a4iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOKi4q4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>this.decorees = decorees;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOKi464iEeeb3J7owtunSg" name="setDecoree" specification="_vKzF0K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOKi5K4iEeeb3J7owtunSg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOKi5a4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>this.decorees[idx] = decoree;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOKi5q4iEeeb3J7owtunSg" name="setTargetToDecoree" specification="_vD2wUK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOKi564iEeeb3J7owtunSg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>this.targetIdx = targetIdx;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOKi6K4iEeeb3J7owtunSg" name="getTargetDecoree" specification="_vD3XYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOKi6a4iEeeb3J7owtunSg" type="_vDarcK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return decorees[targetIdx];&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOLJ8K4iEeeb3J7owtunSg" name="execute" specification="_vMOCIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOLJ8a4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOLJ8q4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOLJ864iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOLJ9K4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>ISeqList target = decorees[targetIdx++];&#xD;
		if (targetIdx >= decorees.length)&#xD;
			targetIdx = 0; // This must be set before the delegate because it may be needed before the recursion returns.&#xD;
		return target.execute(algo, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOLJ9a4iEeeb3J7owtunSg" name="toString" specification="_vD3-cK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOLJ9q4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return (String) this.execute(NESeqList.getToStringAlgo(), &quot;{&quot;);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vD1iMK4iEeeb3J7owtunSg" name="ToggleDecoratorSeqList">
            <eAnnotations xmi:id="_vD1iMa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vD1iMq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vD2JQa4iEeeb3J7owtunSg" type="_vDztAK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vD2wUK4iEeeb3J7owtunSg" name="setTargetToDecoree" method="_vOKi5q4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkfK4iEeeb3J7owtunSg">
              <body>Used to explicitly set the target (active) decoree if needed.&#xD;
	 * @param targetIdx  the index of the target decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_vD2wUa4iEeeb3J7owtunSg" name="targetIdx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vD3XYK4iEeeb3J7owtunSg" name="getTargetDecoree" method="_vOKi6K4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjkfa4iEeeb3J7owtunSg">
              <body>Accessor for the current target (active) decoree&#xD;
	 * @return  The current target (active) decoree</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKzF064iEeeb3J7owtunSg" type="_vDarcK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vD3-cK4iEeeb3J7owtunSg" name="toString" method="_vOLJ9a4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vD3-ca4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKxQoa4iEeeb3J7owtunSg" name="ToggleDecoratorSeqList" method="_vOJ7064iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vKx3sK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vKx3sa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vKxQoq4iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKx3tK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKx3s64iEeeb3J7owtunSg" type="_vDztAK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vKyewK4iEeeb3J7owtunSg" name="setDecorees" method="_vOKi4K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vKyewa4iEeeb3J7owtunSg" name="decorees" type="_vDarcK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vKyew64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vKzF0K4iEeeb3J7owtunSg" name="setDecoree" method="_vOKi464iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOjke64iEeeb3J7owtunSg">
              <body>Setter methods used to set a particular decoree.   &#xD;
	 * The specified index must already exist.&#xD;
	 * @param idx The index of the decoree to replace&#xD;
	 * @param decoree  The new decoree ISeqList.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vKzF0a4iEeeb3J7owtunSg" name="idx">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vKzF0q4iEeeb3J7owtunSg" name="decoree" type="_vDarcK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMOCIK4iEeeb3J7owtunSg" name="execute" method="_vOLJ8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMOCIa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMOCIq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMPQQK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMOCI64iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vD8P4K4iEeeb3J7owtunSg" name="Triplet">
          <ownedComment xmi:id="_vOkLgK4iEeeb3J7owtunSg">
            <body>A musical triplet.  The three notes should be played with 2/3 of their&#xD;
indicated duration.</body>
          </ownedComment>
          <ownedComment xmi:id="_vOkLga4iEeeb3J7owtunSg">
            <body>A set of 3 notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_vK07A64iEeeb3J7owtunSg" general="_vDwCoK4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNP84K4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNQj8K4iEeeb3J7owtunSg" value="&quot;Triplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOLxAK4iEeeb3J7owtunSg" name="Triplet" specification="_vK0T8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOLxAa4iEeeb3J7owtunSg" name="n1" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOLxAq4iEeeb3J7owtunSg" name="n2" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOLxA64iEeeb3J7owtunSg" name="n3" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOLxBK4iEeeb3J7owtunSg" type="_vD8P4K4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>super(n1, n2, n3);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOLxBa4iEeeb3J7owtunSg" name="execute" specification="_vMQeYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOLxBq4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOLxB64iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOLxCK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOLxCa4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOLxCq4iEeeb3J7owtunSg" name="toString" specification="_vD9eAK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOLxC64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Triplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vD9eAK4iEeeb3J7owtunSg" name="toString" method="_vOLxCq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vD-FEK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK0T8K4iEeeb3J7owtunSg" name="Triplet" method="_vOLxAK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vK07AK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vK07Aa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vK0T8a4iEeeb3J7owtunSg" name="n1" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK0T8q4iEeeb3J7owtunSg" name="n2" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK0T864iEeeb3J7owtunSg" name="n3" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK07Aq4iEeeb3J7owtunSg" type="_vD8P4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMQeYK4iEeeb3J7owtunSg" name="execute" method="_vOLxBa4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMRFcK4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMRFca4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMRsgK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMRFcq4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vEAhUK4iEeeb3J7owtunSg" name="Tuplet">
          <ownedComment xmi:id="_vOkLgq4iEeeb3J7owtunSg">
            <body>Class that represents a tuplet, a series of notes played in a fraction of their normal total time.&#xD;
The exact fraction depends on the meter and the number of notes in the tuplet.&#xD;
A triplet is a specific type of tuplet.&#xD;
@author swong</body>
          </ownedComment>
          <ownedComment xmi:id="_vOkLg64iEeeb3J7owtunSg">
            <body>A arbitrary set of notes played in sequence in a special manner.</body>
          </ownedComment>
          <generalization xmi:id="_vK3XQK4iEeeb3J7owtunSg" general="_vDwCoK4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNQj8a4iEeeb3J7owtunSg" name="ID" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNRLAK4iEeeb3J7owtunSg" value="&quot;Tuplet&quot;"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOMYEK4iEeeb3J7owtunSg" name="Tuplet" specification="_vK2JIK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOMYEa4iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOMYEq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOMYE64iEeeb3J7owtunSg" type="_vEAhUK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>super(notes);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOMYFK4iEeeb3J7owtunSg" name="execute" specification="_vMS6oK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOMYFa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOMYFq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOMYF64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOMYGK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(ID, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOM_IK4iEeeb3J7owtunSg" name="toString" specification="_vEBIYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOM_Ia4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>String result = &quot;Tuplet(&quot; + notes[0];&#xD;
		for (int i = 1; i &lt; notes.length; i++) {&#xD;
			result += &quot;, &quot; + notes[i];&#xD;
		}&#xD;
		return result + &quot;)&quot;;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEBIYK4iEeeb3J7owtunSg" name="toString" method="_vOM_IK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vEBvcK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK2JIK4iEeeb3J7owtunSg" name="Tuplet" method="_vOMYEK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vK2JIq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vK2JI64iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vK2JIa4iEeeb3J7owtunSg" name="notes" type="_vDnfwK4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vK2wMa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK2wMK4iEeeb3J7owtunSg" type="_vEAhUK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMS6oK4iEeeb3J7owtunSg" name="execute" method="_vOMYFK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMS6oa4iEeeb3J7owtunSg" name="algo" type="_vDXBEK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMS6oq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMThsa4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMS6o64iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPFI4a4iEeeb3J7owtunSg" name="" memberEnd="_vPFI4q4iEeeb3J7owtunSg _vM-3IK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPFI4q4iEeeb3J7owtunSg" name="" type="_vCkW4K4iEeeb3J7owtunSg" association="_vPFI4a4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPFv8a4iEeeb3J7owtunSg" name="" memberEnd="_vPFv8q4iEeeb3J7owtunSg _vM-3Iq4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPFv8q4iEeeb3J7owtunSg" name="" type="_vCkW4K4iEeeb3J7owtunSg" association="_vPFv8a4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPGXAa4iEeeb3J7owtunSg" name="" memberEnd="_vPGXAq4iEeeb3J7owtunSg _vNAsUa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPGXAq4iEeeb3J7owtunSg" name="" type="_vCuH4K4iEeeb3J7owtunSg" association="_vPGXAa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPG-Ea4iEeeb3J7owtunSg" name="" memberEnd="_vPG-Eq4iEeeb3J7owtunSg _vNDvoa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPG-Eq4iEeeb3J7owtunSg" name="" type="_vDb5kK4iEeeb3J7owtunSg" association="_vPG-Ea4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPHlIa4iEeeb3J7owtunSg" name="" memberEnd="_vPHlIq4iEeeb3J7owtunSg _vNEWsq4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPHlIq4iEeeb3J7owtunSg" name="" type="_vDfj8K4iEeeb3J7owtunSg" association="_vPHlIa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPIMMK4iEeeb3J7owtunSg" name="" memberEnd="_vPIMMa4iEeeb3J7owtunSg _vNE9wa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPIMMa4iEeeb3J7owtunSg" name="" type="_vDfj8K4iEeeb3J7owtunSg" association="_vPIMMK4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPIMM64iEeeb3J7owtunSg" name="" memberEnd="_vPIMNK4iEeeb3J7owtunSg _vNE9w64iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPIMNK4iEeeb3J7owtunSg" name="" type="_vDfj8K4iEeeb3J7owtunSg" association="_vPIMM64iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPIzQa4iEeeb3J7owtunSg" name="" memberEnd="_vPIzQq4iEeeb3J7owtunSg _vNMSgK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPIzQq4iEeeb3J7owtunSg" name="" type="_vDwCoK4iEeeb3J7owtunSg" association="_vPIzQa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPJaUa4iEeeb3J7owtunSg" name="" memberEnd="_vPJaUq4iEeeb3J7owtunSg _vNNgoa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPJaUq4iEeeb3J7owtunSg" name="" type="_vDztAK4iEeeb3J7owtunSg" association="_vPJaUa4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u-KYAK4iEeeb3J7owtunSg" name="player">
        <packagedElement xmi:type="uml:Package" xmi:id="_u-KYAa4iEeeb3J7owtunSg" name="SequencePlayer2">
          <packagedElement xmi:type="uml:Interface" xmi:id="_vKKMoa4iEeeb3J7owtunSg" name="IPlayable"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vEDkoK4iEeeb3J7owtunSg" name="ISequencePlayerStatus">
          <ownedComment xmi:id="_vOkykK4iEeeb3J7owtunSg">
            <body>Command that is used to notify a user that a track has stopped playing.&#xD;
@author swong&#xD;
 *</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vEFZ0K4iEeeb3J7owtunSg" name="NULL" isLeaf="true" isStatic="true" type="_vEDkoK4iEeeb3J7owtunSg" isReadOnly="true" association="_vO3tgK4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vEFZ0a4iEeeb3J7owtunSg" value="new ISequencePlayerStatus() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;/**&#xD;&#xA;&#x9;&#x9; * Prints &quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot; to console.&#xD;&#xA;&#x9;&#x9; */&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void finished() {&#xD;&#xA;&#x9;&#x9;&#x9;System.out.println(&quot;ISequencePlayerStatus.NULL.finished(): Track finished playing!&quot;);&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
          </ownedAttribute>
          <ownedOperation xmi:id="_vEELsK4iEeeb3J7owtunSg" name="finished">
            <ownedComment xmi:id="_vOkyka4iEeeb3J7owtunSg">
              <body>Called when a track stops playing.</body>
            </ownedComment>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vEGA4K4iEeeb3J7owtunSg" name="SequencePlayer">
          <ownedComment xmi:id="_vOkykq4iEeeb3J7owtunSg">
            <body>Sequence Player to create and play MIDI music sequences.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNRLAa4iEeeb3J7owtunSg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNRyEK4iEeeb3J7owtunSg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNRyEa4iEeeb3J7owtunSg" name="_sequence" visibility="private" type="_vMUv0K4iEeeb3J7owtunSg" association="_vPKBYa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNSZIa4iEeeb3J7owtunSg" name="_track" visibility="private" type="_vMV98K4iEeeb3J7owtunSg" association="_vPKoca4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNTAMK4iEeeb3J7owtunSg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNTnQK4iEeeb3J7owtunSg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNTnQq4iEeeb3J7owtunSg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNUOUa4iEeeb3J7owtunSg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNU1Ya4iEeeb3J7owtunSg" name="_sequencer" visibility="private" type="_vMXMEK4iEeeb3J7owtunSg" association="_vPLPga4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNVcca4iEeeb3J7owtunSg" name="_synthesizer" visibility="private" type="_vLS1EK4iEeeb3J7owtunSg" association="_vPL2ka4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNWDga4iEeeb3J7owtunSg" name="_offsets" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNWDgq4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNWqkK4iEeeb3J7owtunSg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;&#x9;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOM_Iq4iEeeb3J7owtunSg" name="SequencePlayer" specification="_vEH2EK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOM_I64iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOM_JK4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOM_Ja4iEeeb3J7owtunSg" type="_vEGA4K4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vONmMK4iEeeb3J7owtunSg" name="init" specification="_vEJEMK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vONmMa4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vONmMq4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vONmM64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_sequencer = null;&#xD;
		_synthesizer = null;&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
			_sequencer = MidiSystem.getSequencer();&#xD;
			_synthesizer = MidiSystem.getSynthesizer();&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;MIDI Unavailable, SequencePlayer not initialized.&quot;);&#xD;
			return false;&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vONmNK4iEeeb3J7owtunSg" name="addNote" specification="_vK5McK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vONmNa4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vONmNq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vONmN64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOONQK4iEeeb3J7owtunSg" name="addNote" specification="_vK5zgK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOONQa4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOONQq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOONQ64iEeeb3J7owtunSg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOONRK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration() * _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note + &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOONRa4iEeeb3J7owtunSg" name="play" specification="_vK6akK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOONRq4iEeeb3J7owtunSg" name="statusCmd" type="_vEDkoK4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vOONR64iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vOONSK4iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;Finished Playing&quot;);&#xD;
						stop();&#xD;
						statusCmd.finished();&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			// And start playing now.&#xD;
			_sequencer.start();&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOONSa4iEeeb3J7owtunSg" name="stop" specification="_vEK5YK4iEeeb3J7owtunSg">
            <language>java</language>
            <body>_sequencer.close();&#xD;
		_synthesizer.close();&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOONSq4iEeeb3J7owtunSg" name="getTicksPerDefaultNote" specification="_vEK5Ya4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOONS64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOO0UK4iEeeb3J7owtunSg" name="setTicksPerDefaultNote" specification="_vELgca4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOO0Ua4iEeeb3J7owtunSg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOO0Uq4iEeeb3J7owtunSg" name="getTempo" specification="_vEMHgK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOO0U64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOO0VK4iEeeb3J7owtunSg" name="setTempo" specification="_vEMukK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOO0Va4iEeeb3J7owtunSg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOO0Vq4iEeeb3J7owtunSg" name="getTicksPerQuarterNote" specification="_vEMukq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOO0V64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEH2EK4iEeeb3J7owtunSg" name="SequencePlayer" method="_vOM_Iq4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vEIdIa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vEIdIq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOkyk64iEeeb3J7owtunSg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEH2Ea4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEIdIK4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEIdI64iEeeb3J7owtunSg" type="_vEGA4K4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vEJEMK4iEeeb3J7owtunSg" name="init" method="_vONmMK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOkylK4iEeeb3J7owtunSg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEJEMa4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEJrQK4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEJrQa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEK5YK4iEeeb3J7owtunSg" name="stop" method="_vOONSa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZoq4iEeeb3J7owtunSg">
              <body>Stop playing music and close resources.</body>
            </ownedComment>
          </ownedOperation>
          <ownedOperation xmi:id="_vEK5Ya4iEeeb3J7owtunSg" name="getTicksPerDefaultNote" method="_vOONSq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZo64iEeeb3J7owtunSg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_vELgcK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vELgca4iEeeb3J7owtunSg" name="setTicksPerDefaultNote" method="_vOO0UK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZpK4iEeeb3J7owtunSg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_vELgcq4iEeeb3J7owtunSg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEMHgK4iEeeb3J7owtunSg" name="getTempo" method="_vOO0Uq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZpa4iEeeb3J7owtunSg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEMHga4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEMukK4iEeeb3J7owtunSg" name="setTempo" method="_vOO0VK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZpq4iEeeb3J7owtunSg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEMuka4iEeeb3J7owtunSg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEMukq4iEeeb3J7owtunSg" name="getTicksPerQuarterNote" method="_vOO0Vq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZp64iEeeb3J7owtunSg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEMuk64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK5McK4iEeeb3J7owtunSg" name="addNote" method="_vONmNK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOkyla4iEeeb3J7owtunSg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK5Mca4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK5Mcq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK5Mc64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK5zgK4iEeeb3J7owtunSg" name="addNote" method="_vOONQK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZoK4iEeeb3J7owtunSg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK5zga4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK5zgq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK5zg64iEeeb3J7owtunSg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK5zhK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK6akK4iEeeb3J7owtunSg" name="play" method="_vOONRa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOlZoa4iEeeb3J7owtunSg">
              <body>Play the created Sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK6aka4iEeeb3J7owtunSg" name="statusCmd" type="_vEDkoK4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vK6akq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vK6ak64iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vERAAK4iEeeb3J7owtunSg" name="SequencePlayer2">
          <ownedComment xmi:id="_vOlZqK4iEeeb3J7owtunSg">
            <body>Sequence Player to create and play MIDI music sequences.&#xD;
Differs from SequencePlayer because it has no play() method.   Instead, this class has &#xD;
a factory method that creates an SequencePlayer2.IPlayable object that can be individually &#xD;
and asynchronously started and stopped.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNX4sK4iEeeb3J7owtunSg" name="END_OF_TRACK" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNX4sa4iEeeb3J7owtunSg" value="47"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNYfwK4iEeeb3J7owtunSg" name="_sequence" visibility="private" type="_vMUv0K4iEeeb3J7owtunSg" association="_vPMdoa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNZG0K4iEeeb3J7owtunSg" name="_track" visibility="private" type="_vMV98K4iEeeb3J7owtunSg" association="_vPNEsa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNZt4a4iEeeb3J7owtunSg" name="_bpm" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNaU8a4iEeeb3J7owtunSg" name="_ticksPerDefaultNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNa8AK4iEeeb3J7owtunSg" name="_ticksPerQuarterNote" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNbjEa4iEeeb3J7owtunSg" name="_instrument" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNcKIa4iEeeb3J7owtunSg" name="_offsets" isLeaf="true" isStatic="true" isReadOnly="true">
            <eAnnotations xmi:id="_vNcxMK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vNcxMa4iEeeb3J7owtunSg" key="ConstantWithGetter"/>
            </eAnnotations>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vNcxMq4iEeeb3J7owtunSg" value="*"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNcxNK4iEeeb3J7owtunSg" value="{ // add these amounts to the base value&#xD;&#xA;&#x9;&#x9;&#x9;// A   B  C  D  E  F  G&#xD;&#xA;&#x9;&#x9;&#x9;9, 11, 0, 2, 4, 5, 7 }"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOPbYK4iEeeb3J7owtunSg" name="SequencePlayer2" specification="_vEVRcK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOPbYa4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOPbYq4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOPbY64iEeeb3J7owtunSg" type="_vERAAK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>init(ticksPerQuarterNote, instrument);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQCcK4iEeeb3J7owtunSg" name="init" specification="_vEV4gK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQCca4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOQCcq4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOQCc64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerQuarterNote = ticksPerQuarterNote;&#xD;
		_instrument = instrument;&#xD;
		_bpm = 0;&#xD;
		_ticksPerDefaultNote = _ticksPerQuarterNote;&#xD;
&#xD;
		_track = null;&#xD;
&#xD;
		try {&#xD;
&#xD;
			_sequence = new Sequence(Sequence.PPQ, _ticksPerQuarterNote);&#xD;
			_track = _sequence.createTrack();&#xD;
&#xD;
			ShortMessage sm = new ShortMessage();&#xD;
			sm.setMessage(ShortMessage.PROGRAM_CHANGE, 0, _instrument, 0);&#xD;
			_track.add(new MidiEvent(sm, 0));&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI data.&quot;);&#xD;
			e.printStackTrace();&#xD;
			return false;&#xD;
		}&#xD;
&#xD;
		return true;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQCdK4iEeeb3J7owtunSg" name="addNote" specification="_vK9d4K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQCda4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOQCdq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOQCd64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return addNote(note, start, 64);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQCeK4iEeeb3J7owtunSg" name="addNote" specification="_vK-E8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQCea4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOQCeq4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOQCe64iEeeb3J7owtunSg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOQCfK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>if (_track == null) {&#xD;
			return -1;&#xD;
		}&#xD;
&#xD;
		int duration = (int) Math.round(note.getDuration() * _ticksPerDefaultNote);&#xD;
		if ('Z' == note.getName()) {&#xD;
			// Rest - just return end tick count&#xD;
			return start + duration;&#xD;
		}&#xD;
&#xD;
		int key = 60; // start at middle C&#xD;
		key += note.getOctave() * 12;&#xD;
		key += _offsets[note.getName() - 'A'];&#xD;
		key += note.getAccidental();&#xD;
&#xD;
		ShortMessage on;&#xD;
		ShortMessage off;&#xD;
		try {&#xD;
			on = new ShortMessage();&#xD;
			on.setMessage(ShortMessage.NOTE_ON, 0, key, velocity);&#xD;
			off = new ShortMessage();&#xD;
			off.setMessage(ShortMessage.NOTE_OFF, 0, key, velocity);&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Invalid MIDI Data, note not added (&quot; + note + &quot;, &quot; + start + &quot;).&quot;);&#xD;
			// e.printStackTrace();&#xD;
			return start;&#xD;
		}&#xD;
&#xD;
		_track.add(new MidiEvent(on, start));&#xD;
		_track.add(new MidiEvent(off, start + duration));&#xD;
		return start + duration;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQpgK4iEeeb3J7owtunSg" name="makePlayable" specification="_vK-sAK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_2bNYYK4iEeeb3J7owtunSg" name="statusCmd" type="_vEDkoK4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_2bNYYa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_2bNYYq4iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_2bN_cK4iEeeb3J7owtunSg" type="_vKKMoa4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>try {&#xD;
			final Sequencer _sequencer = MidiSystem.getSequencer(); // MIDI Sequencer object&#xD;
			final Synthesizer _synthesizer = MidiSystem.getSynthesizer(); // MIDI synthesizer object&#xD;
&#xD;
			final IPlayable playable = new IPlayable() {&#xD;
&#xD;
				@Override&#xD;
				public void start() {&#xD;
					_sequencer.start();&#xD;
				}&#xD;
&#xD;
				@Override&#xD;
				public void stop() {&#xD;
					_sequencer.close();&#xD;
					_synthesizer.close();&#xD;
				}&#xD;
			};&#xD;
&#xD;
			_sequencer.open();&#xD;
			_synthesizer.open();&#xD;
&#xD;
			_sequencer.getTransmitter().setReceiver(_synthesizer.getReceiver());&#xD;
&#xD;
			// Specify the sequence to play, and the tempo to play it at&#xD;
			_sequencer.setSequence(_sequence);&#xD;
			_sequencer.setTempoInBPM(_bpm);&#xD;
&#xD;
			// Let us know when it is done playing&#xD;
			_sequencer.addMetaEventListener(new MetaEventListener() {&#xD;
				public void meta(MetaMessage m) {&#xD;
					// A message of this type is automatically sent&#xD;
					// when we reach the end of the track&#xD;
					if (m.getType() == END_OF_TRACK) {&#xD;
						System.out.println(&quot;SequencePlayer2.play(): End of Track&quot;);&#xD;
						playable.stop();&#xD;
						statusCmd.finished();&#xD;
					} else&#xD;
						System.out.println(&quot;Message type received: &quot; + m.getType());&#xD;
				}&#xD;
			});&#xD;
&#xD;
			return playable;&#xD;
		} catch (MidiUnavailableException e) {&#xD;
			System.out.println(&quot;Unable to open MIDI synthesizer.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (InvalidMidiDataException e) {&#xD;
			System.out.println(&quot;Unable to play sequence.&quot;);&#xD;
			// e.printStackTrace();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		return IPlayable.NULL;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQpha4iEeeb3J7owtunSg" name="getTicksPerDefaultNote" specification="_vEXtsK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQphq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQph64iEeeb3J7owtunSg" name="setTicksPerDefaultNote" specification="_vEYUwK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQpiK4iEeeb3J7owtunSg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_ticksPerDefaultNote = ticksPerDefaultNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOQpia4iEeeb3J7owtunSg" name="getTempo" specification="_vEYUwq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOQpiq4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vORQkK4iEeeb3J7owtunSg" name="setTempo" specification="_vEY70K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vORQka4iEeeb3J7owtunSg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>_bpm = bpm;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vORQkq4iEeeb3J7owtunSg" name="getTicksPerQuarterNote" specification="_vEaJ8K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vORQk64iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <language>java</language>
            <body>return _ticksPerQuarterNote;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEVRcK4iEeeb3J7owtunSg" name="SequencePlayer2" method="_vOPbYK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vEVRc64iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vEVRdK4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOmAs64iEeeb3J7owtunSg">
              <body>Create a new SequencePlayer to create and play music.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEVRca4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEVRcq4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEVRda4iEeeb3J7owtunSg" type="_vERAAK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vEV4gK4iEeeb3J7owtunSg" name="init" method="_vOQCcK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAtK4iEeeb3J7owtunSg">
              <body>Initialize the SequencePlayer as per the supplied ticksPerQuarterNote and instrument&#xD;
	 * this SequencePlayer was instantiated with.   This method is called by the constructor to &#xD;
	 * initialize the player upon instantiation and can be called again to reinitialize the &#xD;
	 * SequencePlayer.&#xD;
	 * &#xD;
	 * @param  ticksPerQuarterNote      - tick definition&#xD;
	 * @param  instrument               - MIDI instrument&#xD;
	 * @return                         - true if properly initialized, false otherwise</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEV4ga4iEeeb3J7owtunSg" name="ticksPerQuarterNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEV4gq4iEeeb3J7owtunSg" name="instrument">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEWfkK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEXtsK4iEeeb3J7owtunSg" name="getTicksPerDefaultNote" method="_vOQpha4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAuK4iEeeb3J7owtunSg">
              <body>Accessor to get the current ticks per default note&#xD;
	 * @return the _ticksPerDefaultNote</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEXtsa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEYUwK4iEeeb3J7owtunSg" name="setTicksPerDefaultNote" method="_vOQph64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAua4iEeeb3J7owtunSg">
              <body>Accessor to set the current ticks per default note&#xD;
	 * @param ticksPerDefaultNote the _ticksPerDefaultNote to set</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEYUwa4iEeeb3J7owtunSg" name="ticksPerDefaultNote">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEYUwq4iEeeb3J7owtunSg" name="getTempo" method="_vOQpia4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAuq4iEeeb3J7owtunSg">
              <body>Accessor for the current tempo&#xD;
	 * @return the tempo (in beats per minute)</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEYUw64iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEY70K4iEeeb3J7owtunSg" name="setTempo" method="_vORQkK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmnwK4iEeeb3J7owtunSg">
              <body>Set the tempo - can't change the tempo in the middle of a sequence,&#xD;
	 * the last tempo set will be used for the whole sequence.&#xD;
	 * &#xD;
	 * @param bpm - beats per minute</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEY70a4iEeeb3J7owtunSg" name="bpm">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEaJ8K4iEeeb3J7owtunSg" name="getTicksPerQuarterNote" method="_vORQkq4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmnwa4iEeeb3J7owtunSg">
              <body>Accessor for the current number of ticks per quarter note.&#xD;
	 * @return the number of ticks per quarter note</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEaJ8a4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK9d4K4iEeeb3J7owtunSg" name="addNote" method="_vOQCdK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAta4iEeeb3J7owtunSg">
              <body>Add a note to the MIDI sequence with a default velocity of 64 for middle volume&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK9d4a4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK9d4q4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK9d464iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK-E8K4iEeeb3J7owtunSg" name="addNote" method="_vOQCeK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAtq4iEeeb3J7owtunSg">
              <body>Add a note to the MIDI sequence.&#xD;
	 * &#xD;
	 * @param note     - the note to schedule in the sequence&#xD;
	 * @param start    - the tick at which this note should start playing&#xD;
	 * @param velocity - the volume (0-127)&#xD;
	 * @return         - the tick at which this note stops playing</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK-E8a4iEeeb3J7owtunSg" name="note" type="_vDnfwK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vK-E8q4iEeeb3J7owtunSg" name="start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK-E864iEeeb3J7owtunSg" name="velocity">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vK-E9K4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vK-sAK4iEeeb3J7owtunSg" name="makePlayable" method="_vOQpgK4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmAt64iEeeb3J7owtunSg">
              <body>Factory method for an IPlayable object that can play the currently programmed music sequence.&#xD;
	 * @param statusCmd The finished() method of this command is called when the track finishes being played, i.e. a normal termination.  There is no notification if play is forcibly stopped.&#xD;
	 * @return An IPlayable object associated with the currently programmed music sequence.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vK-sAa4iEeeb3J7owtunSg" name="statusCmd" type="_vEDkoK4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vK-sA64iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vK-sBK4iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
            </ownedParameter>
            <ownedParameter xmi:id="_vK-sAq4iEeeb3J7owtunSg" type="_vKKMoa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <nestedClassifier xmi:type="uml:Interface" xmi:id="_vESOIK4iEeeb3J7owtunSg" name="IPlayable">
            <eAnnotations xmi:id="_vESOIa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vESOIq4iEeeb3J7owtunSg" key="static"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOmAsK4iEeeb3J7owtunSg">
              <body>Interface  that represents a playable entity.&#xD;
	 * @author swong&#xD;
	 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_vETcQK4iEeeb3J7owtunSg" name="NULL" isLeaf="true" isStatic="true" type="_vKKMoa4iEeeb3J7owtunSg" isReadOnly="true" association="_vO4Uka4iEeeb3J7owtunSg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vETcQa4iEeeb3J7owtunSg" value="new IPlayable() {&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void start() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;&#x9;public void stop() {&#xD;&#xA;&#x9;&#x9;&#x9;}&#xD;&#xA;&#x9;&#x9;}"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_vES1MK4iEeeb3J7owtunSg" name="start">
              <ownedComment xmi:id="_vOmAsa4iEeeb3J7owtunSg">
                <body>Starts the sequencer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
            <ownedOperation xmi:id="_vES1Ma4iEeeb3J7owtunSg" name="stop">
              <ownedComment xmi:id="_vOmAsq4iEeeb3J7owtunSg">
                <body>Stops the sequencer and synthesizer associated with this playable entity</body>
              </ownedComment>
            </ownedOperation>
          </nestedClassifier>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vO3tgK4iEeeb3J7owtunSg" name="" memberEnd="_vO3tga4iEeeb3J7owtunSg _vEFZ0K4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vO3tga4iEeeb3J7owtunSg" name="" type="_vEDkoK4iEeeb3J7owtunSg" association="_vO3tgK4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vO4Uka4iEeeb3J7owtunSg" name="" memberEnd="_vO4Ukq4iEeeb3J7owtunSg _vETcQK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vO4Ukq4iEeeb3J7owtunSg" name="" type="_vESOIK4iEeeb3J7owtunSg" association="_vO4Uka4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPKBYa4iEeeb3J7owtunSg" name="" memberEnd="_vPKBYq4iEeeb3J7owtunSg _vNRyEa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPKBYq4iEeeb3J7owtunSg" name="" type="_vEGA4K4iEeeb3J7owtunSg" association="_vPKBYa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPKoca4iEeeb3J7owtunSg" name="" memberEnd="_vPKocq4iEeeb3J7owtunSg _vNSZIa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPKocq4iEeeb3J7owtunSg" name="" type="_vEGA4K4iEeeb3J7owtunSg" association="_vPKoca4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPLPga4iEeeb3J7owtunSg" name="" memberEnd="_vPLPgq4iEeeb3J7owtunSg _vNU1Ya4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPLPgq4iEeeb3J7owtunSg" name="" type="_vEGA4K4iEeeb3J7owtunSg" association="_vPLPga4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPL2ka4iEeeb3J7owtunSg" name="" memberEnd="_vPL2kq4iEeeb3J7owtunSg _vNVcca4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPL2kq4iEeeb3J7owtunSg" name="" type="_vEGA4K4iEeeb3J7owtunSg" association="_vPL2ka4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPMdoa4iEeeb3J7owtunSg" name="" memberEnd="_vPMdoq4iEeeb3J7owtunSg _vNYfwK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPMdoq4iEeeb3J7owtunSg" name="" type="_vERAAK4iEeeb3J7owtunSg" association="_vPMdoa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPNEsa4iEeeb3J7owtunSg" name="" memberEnd="_vPNEsq4iEeeb3J7owtunSg _vNZG0K4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPNEsq4iEeeb3J7owtunSg" name="" type="_vERAAK4iEeeb3J7owtunSg" association="_vPNEsa4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_u-ST0K4iEeeb3J7owtunSg" name="token">
        <packagedElement xmi:type="uml:Package" xmi:id="_u-ST0a4iEeeb3J7owtunSg" name="tokenizer">
          <packagedElement xmi:type="uml:Class" xmi:id="_vEx9YK4iEeeb3J7owtunSg" name="ABCTokenizer">
            <ownedComment xmi:id="_vOnO0q4iEeeb3J7owtunSg">
              <body>Tokenizer for the abc music language. getNextToken() returns next Token in&#xD;
stream. Does not recognize all possible language constructs and symbols&#xD;
(returned as &quot;?&quot; token).  Tokens are the atomic psemantic pieces of a language,&#xD;
such as Note, repeat start, measure, chord, etc.   The token ids (names) returned are: &lt;br/>&#xD;
 &lt;br/>&#xD;
 EOF - end of file&lt;br/>&#xD;
 &quot;|:&quot; - repeat start&lt;br/>&#xD;
 &quot;:|&quot; - repeat end&lt;br/>&#xD;
 &quot;|1&quot; - first repeat start&lt;br/>&#xD;
 &quot;[1&quot; - alternative first repeat start&lt;br/>&#xD;
 &quot;|2&quot; - second repeat start&lt;br/>&#xD;
 &quot;[2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;[|&quot; - thick-thin double bar line&lt;br/>&#xD;
 &quot;|]&quot; - thin-thick double bar line&lt;br/>&#xD;
 &quot;:|2&quot; - alternative second repeat start&lt;br/>&#xD;
 &quot;||&quot; - double measure bar&lt;br/>&#xD;
 &quot;::&quot; - short hand for repeat end-start &quot;:||:&quot;&lt;br/>&#xD;
 &quot;|&quot; - Measure bar&lt;br/>&#xD;
 &quot;[&quot;) - Chord start&lt;br/>&#xD;
 &quot;]&quot; - Chord end&lt;br/>&#xD;
 &quot;-&quot; - tie&lt;br/>&#xD;
 &quot;&amp;lt;&quot; - the previous note  is dotted, the next note halved&lt;br/> &#xD;
 &quot;&amp;gt;&quot; - the previous note is halved, the next dotted&lt;br/>&#xD;
 &quot;{&quot; - Grace begin&lt;br/>&#xD;
 &quot;}&quot; - Grace end&lt;br/>&#xD;
 &quot;%&quot; - Comment&lt;br/>&#xD;
 &quot;[Header ID]&quot; - where [Header ID] is a single letter from {ABCDEFGHIKLMNOPQRSTWXZ} &lt;br/> &#xD;
 &quot;Note&quot; - a single note whose lexeme contains the name, accidentals, octave and duration&lt;br/>&#xD;
 &quot;Tuplet&quot; - the lexeme is the number of subsequent Notes comprise this tuplet. &lt;br/>&#xD;
 &quot;Quote&quot; - lexeme is the quoted text &lt;br/>&#xD;
 &quot;?&quot; - unknown language construct. &lt;br/>&#xD;
  &lt;br/>&#xD;
References: &lt;br/>&#xD;
&lt;a href =&#xD;
&quot;http://download.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html&quot;&#xD;
>java.util.regex.Pattern for regex guide&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://asciitable.com/&quot;>ASCII table for codes&lt;/a>&lt;br/>&#xD;
&lt;a href=&quot;http://abcnotation.com/abc2mtex/abc.txt&quot;>abc music standard 1.6&lt;/a></body>
            </ownedComment>
            <generalization xmi:id="_vLH19K4iEeeb3J7owtunSg" general="_vE_YwK4iEeeb3J7owtunSg"/>
            <ownedAttribute xmi:id="_vNhpsa4iEeeb3J7owtunSg" name="keywords1" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_vNiQwa4iEeeb3J7owtunSg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNhpsq4iEeeb3J7owtunSg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNi30K4iEeeb3J7owtunSg" name="keywords2" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <qualifier xmi:id="_vNje4K4iEeeb3J7owtunSg">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </qualifier>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNi30a4iEeeb3J7owtunSg" value="new Hashtable&lt;String, String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNje4a4iEeeb3J7owtunSg" name="keywordsVector" visibility="private" type="_vMiLMK4iEeeb3J7owtunSg" association="_vPO54a4iEeeb3J7owtunSg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNkF8a4iEeeb3J7owtunSg" value="new Vector&lt;Map&lt;String, String>>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNktAa4iEeeb3J7owtunSg" name="tokFac" visibility="private" type="_vEoMYK4iEeeb3J7owtunSg" association="_vPPg8a4iEeeb3J7owtunSg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNktAq4iEeeb3J7owtunSg" value="TokenFactory.Singleton"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNlUEK4iEeeb3J7owtunSg" name="stack" visibility="private" type="_vLtr0K4iEeeb3J7owtunSg" association="_vPQIAa4iEeeb3J7owtunSg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNlUEq4iEeeb3J7owtunSg" value="new Stack&lt;Token>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNl7Ia4iEeeb3J7owtunSg" name="ACCIDENTALS" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNl7Iq4iEeeb3J7owtunSg" value="&quot;_=^&quot;"/>
            </ownedAttribute>
            <interfaceRealization xmi:id="_vLHO4K4iEeeb3J7owtunSg" client="_vEx9YK4iEeeb3J7owtunSg" supplier="_vE88gq4iEeeb3J7owtunSg" contract="_vE88gq4iEeeb3J7owtunSg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOUT4K4iEeeb3J7owtunSg" name="ABCTokenizer" specification="_vEzykK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOUT4a4iEeeb3J7owtunSg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOUT4q4iEeeb3J7owtunSg" type="_vEx9YK4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>super(inputFileName);&#xD;
&#xD;
		// note: &quot;\\7C&quot; => &quot;|&quot;, &quot;\\x5B&quot; => &quot;[&quot;, &quot;\\x5D&quot; => &quot;]&quot;&#xD;
		// &quot;\\x7B&quot; => &quot;{&quot;,  &quot;\\x7D&quot; => &quot;}&quot;&#xD;
&#xD;
		// load the regex->keyword mapping&#xD;
		keywords1.put(&quot;\\x7C:&quot;, &quot;|:&quot;); // repeat start&#xD;
		keywords1.put(&quot;:\\x7C&quot;, &quot;:|&quot;); // repeat end&#xD;
		keywords1.put(&quot;\\x7C1&quot;, &quot;|1&quot;); // first repeat start&#xD;
		keywords1.put(&quot;\\x5B1&quot;, &quot;[1&quot;); // alternative first repeat start&#xD;
		keywords1.put(&quot;\\x7C2&quot;, &quot;|2&quot;); // second repeat start&#xD;
		keywords1.put(&quot;\\x5B2&quot;, &quot;[2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x5B\\7C&quot;, &quot;[|&quot;); // thick-thin double bar line&#xD;
		keywords1.put(&quot;\\7C\\x5D&quot;, &quot;|]&quot;); // thin-thick double bar line&#xD;
		keywords1.put(&quot;:\\x7C2&quot;, &quot;:|2&quot;); // alternative second repeat start&#xD;
		keywords1.put(&quot;\\x7C\\x7C&quot;, &quot;||&quot;); // double measure bar&#xD;
		keywords1.put(&quot;::&quot;, &quot;::&quot;); // short hand for repeat end-start &quot;:||:&quot;&#xD;
&#xD;
		// Should these be separated out into a different map because order of&#xD;
		// search is important?&#xD;
		keywords2.put(&quot;\\x7C&quot;, &quot;|&quot;); // Measure bar&#xD;
		keywords2.put(&quot;\\x5B&quot;, &quot;[&quot;); // Chord start&#xD;
		keywords2.put(&quot;\\x5D&quot;, &quot;]&quot;); // Chord end&#xD;
		keywords2.put(&quot;-&quot;, &quot;-&quot;); // tie&#xD;
		keywords2.put(&quot;>&quot;, &quot;>&quot;); // the previous note  is dotted, the next note halved &#xD;
		keywords2.put(&quot;&lt;&quot;, &quot;&lt;&quot;); // the previous note is halved, the next dotted&#xD;
		keywords2.put(&quot;\\x7B&quot;, &quot;{&quot;); // Grace begin&#xD;
		keywords2.put(&quot;\\x7D&quot;, &quot;}&quot;); // Grace end		&#xD;
&#xD;
		keywordsVector.add(keywords1);&#xD;
		keywordsVector.add(keywords2);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOUT464iEeeb3J7owtunSg" name="getNextToken" specification="_vE1AsK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOUT5K4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOUT5a4iEeeb3J7owtunSg" name="putBack" specification="_vLH18a4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOUT5q4iEeeb3J7owtunSg" name="t" type="_vEpagK4iEeeb3J7owtunSg"/>
              <language>java</language>
              <body>stack.push(t);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOUT564iEeeb3J7owtunSg" name="makeNextToken" specification="_vE1nwK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOUT6K4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>String sTok = this.getNextStringToken();&#xD;
		if (null == sTok)&#xD;
			return tokFac.makeToken(&quot;EOF&quot;, &quot;EOF&quot;); // EOF returns as null&#xD;
		if (sTok.equals(&quot;\n&quot;))&#xD;
			return makeNextToken(); // discard bare LF's.&#xD;
&#xD;
		// search for first keywords, pushing extra tokens back into tokenizer's&#xD;
		// stack.&#xD;
		for (Map&lt;String, String> keywords : keywordsVector) {&#xD;
			for (String kw : keywords.keySet()) {&#xD;
				if (keywords.get(kw).equals(sTok))&#xD;
					return tokFac.makeToken(sTok, sTok);&#xD;
				String[] split = sTok.split(kw, -1);&#xD;
				if (split.length > 1) {&#xD;
&#xD;
					for (int i = split.length - 1; i > 0; i--) {&#xD;
						if (!split[i].equals(&quot;&quot;)) {&#xD;
							this.putStringBack(split[i]);&#xD;
						}&#xD;
						this.putStringBack(keywords.get(kw));&#xD;
					}&#xD;
					if (!split[0].equals(&quot;&quot;)) {&#xD;
						this.putStringBack(split[0]);&#xD;
					}&#xD;
					return makeNextToken();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find header tokens, which are the whole line.&#xD;
		int idx = sTok.indexOf(&quot;:&quot;);&#xD;
		if (1 == idx) {&#xD;
			String header = sTok;&#xD;
			String next = super.getNextStringToken();&#xD;
			while (!next.equals(&quot;\n&quot;)) {&#xD;
				header += &quot; &quot; + next;&#xD;
				next = this.getNextStringToken();&#xD;
			}&#xD;
			return tokFac.makeToken(header.substring(0, 1), header.substring(2));&#xD;
		}&#xD;
&#xD;
		// Find comment, which is the rest of the line.&#xD;
		idx = sTok.indexOf(&quot;%&quot;);&#xD;
		if (-1 != idx) {&#xD;
			// Comment in line somewhere&#xD;
			if (0 == idx) { // comment is at beginning of line&#xD;
				String comment = sTok;&#xD;
				String next = super.getNextStringToken();&#xD;
				while (!next.equals(&quot;\n&quot;)) { // get the rest of the line&#xD;
					comment += next;&#xD;
					// get the next string token &#xD;
					next = this.getNextStringToken();&#xD;
				}&#xD;
				return tokFac.makeToken(&quot;%&quot;, comment.substring(1));&#xD;
			} else { // comment is in middle of the line&#xD;
				// push the entire comment, incl. the comment char, back into&#xD;
				// the tokenizer b/c it can't be dealt with yet.&#xD;
				this.putStringBack(sTok.substring(idx));&#xD;
				// push the tokens before the comment back into the tokenizer&#xD;
				// so that they can be then processed when pulled back out.&#xD;
				this.putStringBack(sTok.substring(0, idx));&#xD;
				return makeNextToken(); // Process whatever is in the tokenizer&#xD;
			}&#xD;
		}&#xD;
&#xD;
		// Find tuplet&#xD;
		if ('(' == sTok.charAt(0)) {&#xD;
			// Tuplet found&#xD;
			int n = Integer.parseInt(sTok.substring(1, 2)); // get tuplet size&#xD;
			this.putStringBack(sTok.substring(2)); // push rest back into tokenizer&#xD;
			return tokFac.makeToken(&quot;Tuplet&quot;, &quot;&quot; + n);&#xD;
		}&#xD;
&#xD;
		if (Character.isLetter(sTok.charAt(0)) || ACCIDENTALS.contains(sTok.subSequence(0, 1))) {&#xD;
			// Start of Note string found.&#xD;
			return tokFac.makeToken(&quot;Note&quot;, parseNote(sTok));&#xD;
		}&#xD;
&#xD;
		if ('\&quot;' == sTok.charAt(0)) {&#xD;
			// Quoted string found&#xD;
			return tokFac.makeToken(&quot;Quote&quot;, parseQuote(&quot;&quot;, sTok.substring(1)));&#xD;
		}&#xD;
&#xD;
		if (sTok.equals(&quot;\\&quot;)) {&#xD;
			// abc line break detected.  Ignore.&#xD;
			return makeNextToken();&#xD;
		}&#xD;
&#xD;
		// Unknown token&#xD;
		return tokFac.makeToken(&quot;?&quot;, sTok);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOU68K4iEeeb3J7owtunSg" name="parseNote" specification="_vE2O0K4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOU68a4iEeeb3J7owtunSg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOU68q4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>int i = 1;&#xD;
		// look for pre-note name characters&#xD;
		if (!Character.isLetter(sTok.charAt(0))) {&#xD;
			for (; i &lt; sTok.length(); i++) {&#xD;
				if (sTok.charAt(i) != sTok.charAt(0)) {&#xD;
					i++; // move to next char&#xD;
					break; // This assumes that this char is a letter which&#xD;
							// follows the accidentals&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (; i &lt; sTok.length(); i++) {&#xD;
			// look for non-post-note name characters.&#xD;
			if (!(Character.isDigit(sTok.charAt(i)) || &quot;,/'&quot;.contains(sTok.subSequence(i, i + 1)))) {&#xD;
				putStringBack(sTok.substring(i)); // put the rest back in the&#xD;
													// tokenizer.&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		// i = end of note string&#xD;
		return sTok.substring(0, i);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOU6864iEeeb3J7owtunSg" name="parseQuote" specification="_vE214K4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOU69K4iEeeb3J7owtunSg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOU69a4iEeeb3J7owtunSg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOU69q4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>for (int i = 0; i &lt; sTok.length(); i++) {&#xD;
			if ('\&quot;' == sTok.charAt(i)) {&#xD;
				String rest = sTok.substring(i + 1);&#xD;
				if (!rest.equals(&quot;&quot;)) {&#xD;
					this.putStringBack(rest);&#xD;
				}&#xD;
				return acc;&#xD;
			} else {&#xD;
				acc += sTok.charAt(i);&#xD;
			}&#xD;
		}&#xD;
		acc += &quot; &quot;;&#xD;
		return parseQuote(acc, this.getNextStringToken());&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_vEzykK4iEeeb3J7owtunSg" name="ABCTokenizer" method="_vOUT4K4iEeeb3J7owtunSg" raisedException="_vLKSMa4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vE0ZoK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vE0Zoa4iEeeb3J7owtunSg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_vOnO064iEeeb3J7owtunSg">
                <body>Constructor for the class&#xD;
	 * @param inputFileName  File to tokenize&#xD;
	 * @throws FileNotFoundException  When input file could not be loaded.</body>
              </ownedComment>
              <ownedParameter xmi:id="_vEzyka4iEeeb3J7owtunSg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vE0Zoq4iEeeb3J7owtunSg" type="_vEx9YK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vE1AsK4iEeeb3J7owtunSg" name="getNextToken" method="_vOUT464iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOnO1K4iEeeb3J7owtunSg">
                <body>Return the next token, either from the stream or the last token if it was&#xD;
	 * pushed back</body>
              </ownedComment>
              <ownedParameter xmi:id="_vLH18K4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vE1nwK4iEeeb3J7owtunSg" name="makeNextToken" visibility="private" method="_vOUT564iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOnO1q4iEeeb3J7owtunSg">
                <body>Parse the strings down from the getNextStringToken further, separating&#xD;
	 * out the abc keywords into tokens.&#xD;
	 * @return The next Token in the stream</body>
              </ownedComment>
              <ownedParameter xmi:id="_vLH1864iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vE2O0K4iEeeb3J7owtunSg" name="parseNote" visibility="private" method="_vOU68K4iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOnO164iEeeb3J7owtunSg">
                <body>Returns the first note string in the given string.&#xD;
	 * &#xD;
	 * @param sTok  The string to parse&#xD;
	 * @return A String that is the first note in the given string</body>
              </ownedComment>
              <ownedParameter xmi:id="_vE2O0a4iEeeb3J7owtunSg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vE2O0q4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_vE214K4iEeeb3J7owtunSg" name="parseQuote" visibility="private" method="_vOU6864iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOnO2K4iEeeb3J7owtunSg">
                <body>Returns the rest of a string, incl. spaces until the next double quote&#xD;
	 * @param acc  Accumulated result string&#xD;
	 * @param sTok the current string token&#xD;
	 * @return the full quoted string</body>
              </ownedComment>
              <ownedParameter xmi:id="_vE214a4iEeeb3J7owtunSg" name="acc">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vE3c8K4iEeeb3J7owtunSg" name="sTok">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vE3c8a4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_vLH18a4iEeeb3J7owtunSg" name="putBack" method="_vOUT5a4iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOnO1a4iEeeb3J7owtunSg">
                <body>*	 Push token back into the stream&#xD;
	 * @param t the Token you need to put back in the stream.</body>
              </ownedComment>
              <ownedParameter xmi:id="_vLH18q4iEeeb3J7owtunSg" name="t" type="_vEpagK4iEeeb3J7owtunSg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_vE7uYK4iEeeb3J7owtunSg" name="IStringTokenizer">
            <ownedComment xmi:id="_vOnO2a4iEeeb3J7owtunSg">
              <body>Tokenizer that only returns string tokens.  This is a specialization of ITokenizer for strings.&#xD;
&#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedOperation xmi:id="_vE8VcK4iEeeb3J7owtunSg" name="getNextStringToken" isAbstract="true">
              <ownedComment xmi:id="_vOn14K4iEeeb3J7owtunSg">
                <body>Return the next token.&#xD;
	 * @return The next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_vE8Vca4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_vE88gK4iEeeb3J7owtunSg" name="putStringBack" isAbstract="true">
              <ownedComment xmi:id="_vOn14a4iEeeb3J7owtunSg">
                <body>Put the previously consumed token back into the token stream. Can only&#xD;
	 * put back one token.&#xD;
	 * @param t the token to push back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_vE88ga4iEeeb3J7owtunSg" name="t">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_vE88gq4iEeeb3J7owtunSg" name="ITokenizer" isAbstract="true">
            <ownedComment xmi:id="_vOn14q4iEeeb3J7owtunSg">
              <body>Extract and return an appropriate Token from some given source.</body>
            </ownedComment>
            <ownedOperation xmi:id="_vE-KoK4iEeeb3J7owtunSg" name="getNextToken" isAbstract="true">
              <ownedComment xmi:id="_vOn1464iEeeb3J7owtunSg">
                <body>Return the next token.&#xD;
	 * @return the next token in the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_vLJEEK4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vLJrIK4iEeeb3J7owtunSg" name="putBack" isAbstract="true">
              <ownedComment xmi:id="_vOn15K4iEeeb3J7owtunSg">
                <body>Put the previously consumed token back into the token stream. &#xD;
	 * @param t the token to put back into the tokenizer</body>
              </ownedComment>
              <ownedParameter xmi:id="_vLJrIa4iEeeb3J7owtunSg" name="t" type="_vEpagK4iEeeb3J7owtunSg"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_vE_YwK4iEeeb3J7owtunSg" name="StringTokenizer">
            <ownedComment xmi:id="_vOn15a4iEeeb3J7owtunSg">
              <body>Special tokenizer that converts a stream of various types of tokens from  StreamTokenizer and converts them into a stream of strings. &#xD;
@author swong&#xD;
 *</body>
            </ownedComment>
            <ownedAttribute xmi:id="_vNmiMK4iEeeb3J7owtunSg" name="stack" visibility="private" type="_vLtr0K4iEeeb3J7owtunSg" association="_vPQvEa4iEeeb3J7owtunSg">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNnwUK4iEeeb3J7owtunSg" value="new Stack&lt;String>()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_vNoXYK4iEeeb3J7owtunSg" name="_st" visibility="protected" type="_vLN8ka4iEeeb3J7owtunSg" association="_vPRWIK4iEeeb3J7owtunSg"/>
            <ownedAttribute xmi:id="_vNo-ca4iEeeb3J7owtunSg" name="_fileReader" visibility="protected" type="_vLNVga4iEeeb3J7owtunSg" association="_vPRWI64iEeeb3J7owtunSg"/>
            <interfaceRealization xmi:id="_vLOjoa4iEeeb3J7owtunSg" client="_vE_YwK4iEeeb3J7owtunSg" supplier="_vE7uYK4iEeeb3J7owtunSg" contract="_vE7uYK4iEeeb3J7owtunSg"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOViAK4iEeeb3J7owtunSg" name="StringTokenizer" specification="_vFAm4K4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOViAa4iEeeb3J7owtunSg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vOViAq4iEeeb3J7owtunSg" type="_vE_YwK4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
              </ownedParameter>
              <language>java</language>
              <body>// Create an input text file object:&#xD;
&#xD;
		//_st = new StreamTokenizer(new BufferedReader(url.openStream()));&#xD;
		//_fileReader = new FileReader(inputFileName);&#xD;
		try {&#xD;
			InputStream is = this.getClass().getResource(inputFileName).openStream();&#xD;
&#xD;
			_fileReader = new BufferedReader(new InputStreamReader(is));&#xD;
&#xD;
			//_fileReader = new FileReader(file);&#xD;
		} catch (Exception e) {&#xD;
			// TODO Auto-generated catch block&#xD;
			System.err.println(&quot;StringTokenizer error opening file: &quot; + e);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
&#xD;
		// Create a Streamtokenizer to parse the input text file:&#xD;
		_st = new StreamTokenizer(_fileReader);&#xD;
&#xD;
		_st.eolIsSignificant(true);&#xD;
		_st.wordChars(33, 125);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOWJEK4iEeeb3J7owtunSg" name="getNextStringToken" specification="_vFBN8a4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOWJEa4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (stack.empty())&#xD;
			return makeNextStringToken();&#xD;
		else&#xD;
			return stack.pop();&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOWJEq4iEeeb3J7owtunSg" name="putStringBack" specification="_vFCcEK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOWJE64iEeeb3J7owtunSg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>stack.push(str);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOWJFK4iEeeb3J7owtunSg" name="makeNextStringToken" specification="_vFDqMK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vOWJFa4iEeeb3J7owtunSg" direction="return">
                <name xsi:nil="true"/>
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>try {&#xD;
			int t = _st.nextToken();&#xD;
			if (StreamTokenizer.TT_EOL == t)&#xD;
				return &quot;\n&quot;;&#xD;
			if (StreamTokenizer.TT_EOF != t) {&#xD;
				switch (_st.ttype) {&#xD;
&#xD;
				case StreamTokenizer.TT_WORD: {&#xD;
					return _st.sval;&#xD;
				}&#xD;
&#xD;
				case StreamTokenizer.TT_NUMBER: {&#xD;
					// check if number is an integer&#xD;
					if (Math.floor(_st.nval) == _st.nval) {&#xD;
						return &quot;&quot; + (int) _st.nval;&#xD;
					} else {&#xD;
						return &quot;&quot; + _st.nval;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				default:&#xD;
					throw new IllegalArgumentException(&quot;Tokenizer1: Illegal token type = &quot; + _st.ttype);&#xD;
				}&#xD;
			} else {&#xD;
				_fileReader.close();&#xD;
				System.err.println(&quot;EOF Token&quot;);&#xD;
				return null;&#xD;
			}&#xD;
		} catch (IOException e) {&#xD;
			System.out.println(&quot;StringTokenizer.makeNextToken(): Exception = &quot; + e.getMessage());&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_vFAm4K4iEeeb3J7owtunSg" name="StringTokenizer" method="_vOViAK4iEeeb3J7owtunSg" raisedException="_vLKSMa4iEeeb3J7owtunSg">
              <eAnnotations xmi:id="_vFAm4q4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vFAm464iEeeb3J7owtunSg" key="create"/>
              </eAnnotations>
              <ownedComment xmi:id="_vOn15q4iEeeb3J7owtunSg">
                <body>Initialize _st to read from a input Reader file with the given input file&#xD;
	 * name.&#xD;
	 * &#xD;
	 * @param inputFileName&#xD;
	 *            the name of the input text file&#xD;
	 * @throws FileNotFoundException When the input file could not be opened</body>
              </ownedComment>
              <ownedParameter xmi:id="_vFAm4a4iEeeb3J7owtunSg" name="inputFileName">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_vFBN8K4iEeeb3J7owtunSg" type="_vE_YwK4iEeeb3J7owtunSg" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_vFBN8a4iEeeb3J7owtunSg" name="getNextStringToken" method="_vOWJEK4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vFB1AK4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_vFCcEK4iEeeb3J7owtunSg" name="putStringBack" method="_vOWJEq4iEeeb3J7owtunSg">
              <ownedParameter xmi:id="_vFCcEa4iEeeb3J7owtunSg" name="str">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_vFDqMK4iEeeb3J7owtunSg" name="makeNextStringToken" visibility="private" method="_vOWJFK4iEeeb3J7owtunSg">
              <ownedComment xmi:id="_vOn1564iEeeb3J7owtunSg">
                <body>Returns the next string in the stream.  &#xD;
	 * Returns LF (&quot;\n&quot;) at end of line.  &#xD;
	 * Returns null for EOF or error&#xD;
	 * &#xD;
	 * @return A string token or null if EOF</body>
              </ownedComment>
              <ownedParameter xmi:id="_vFDqMa4iEeeb3J7owtunSg" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPO54a4iEeeb3J7owtunSg" name="" memberEnd="_vPO54q4iEeeb3J7owtunSg _vNje4a4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPO54q4iEeeb3J7owtunSg" name="" type="_vEx9YK4iEeeb3J7owtunSg" association="_vPO54a4iEeeb3J7owtunSg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPPg8a4iEeeb3J7owtunSg" name="" memberEnd="_vPPg8q4iEeeb3J7owtunSg _vNktAa4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPPg8q4iEeeb3J7owtunSg" name="" type="_vEx9YK4iEeeb3J7owtunSg" association="_vPPg8a4iEeeb3J7owtunSg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPQIAa4iEeeb3J7owtunSg" name="" memberEnd="_vPQIAq4iEeeb3J7owtunSg _vNlUEK4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPQIAq4iEeeb3J7owtunSg" name="" type="_vEx9YK4iEeeb3J7owtunSg" association="_vPQIAa4iEeeb3J7owtunSg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPQvEa4iEeeb3J7owtunSg" name="" memberEnd="_vPQvEq4iEeeb3J7owtunSg _vNmiMK4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPQvEq4iEeeb3J7owtunSg" name="" type="_vE_YwK4iEeeb3J7owtunSg" association="_vPQvEa4iEeeb3J7owtunSg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPRWIK4iEeeb3J7owtunSg" name="" memberEnd="_vPRWIa4iEeeb3J7owtunSg _vNoXYK4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPRWIa4iEeeb3J7owtunSg" name="" type="_vE_YwK4iEeeb3J7owtunSg" association="_vPRWIK4iEeeb3J7owtunSg"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_vPRWI64iEeeb3J7owtunSg" name="" memberEnd="_vPRWJK4iEeeb3J7owtunSg _vNo-ca4iEeeb3J7owtunSg">
            <ownedEnd xmi:id="_vPRWJK4iEeeb3J7owtunSg" name="" type="_vE_YwK4iEeeb3J7owtunSg" association="_vPRWI64iEeeb3J7owtunSg"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vEfpgK4iEeeb3J7owtunSg" name="ATokVisitor" isAbstract="true">
          <ownedComment xmi:id="_vOmnwq4iEeeb3J7owtunSg">
            <body>A visitor to an Token that implements ITokVisitor using a dictionary of commands.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNd_UK4iEeeb3J7owtunSg" name="defaultCmd" visibility="private" type="_vEmXMK4iEeeb3J7owtunSg" association="_vPNrwa4iEeeb3J7owtunSg"/>
          <ownedAttribute xmi:id="_vNemYa4iEeeb3J7owtunSg" name="cmds" visibility="private" type="_vEmXMK4iEeeb3J7owtunSg" association="_vPNrxK4iEeeb3J7owtunSg">
            <qualifier xmi:id="_vNfNca4iEeeb3J7owtunSg">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </qualifier>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNemYq4iEeeb3J7owtunSg" value="new Hashtable&lt;String, ITokVisitorCmd>()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vLAhMK4iEeeb3J7owtunSg" client="_vEfpgK4iEeeb3J7owtunSg" supplier="_vEkiAK4iEeeb3J7owtunSg" contract="_vEkiAK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vORQlK4iEeeb3J7owtunSg" name="ATokVisitor" specification="_vEg3oK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vORQla4iEeeb3J7owtunSg" type="_vEfpgK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>defaultCmd = new ITokVisitorCmd() {&#xD;
			public Object apply(String idx, Token host, Object... inps) {&#xD;
				throw new IllegalArgumentException(&quot;ATokVisitor: Unknown token encountered: &quot; + idx);&#xD;
			}&#xD;
		};&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOR3oK4iEeeb3J7owtunSg" name="ATokVisitor" specification="_vLBIQK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOR3oa4iEeeb3J7owtunSg" name="defaultCmd" type="_vEmXMK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOR3oq4iEeeb3J7owtunSg" type="_vEfpgK4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>this.defaultCmd = defaultCmd;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOR3o64iEeeb3J7owtunSg" name="caseAt" specification="_vMa2cK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOR3pK4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOR3pa4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOR3pq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOR3p64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOR3qK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return">
              <name xsi:nil="true"/>
            </ownedParameter>
            <language>java</language>
            <body>if (cmds.containsKey(id)) {&#xD;
			return cmds.get(id).apply(id, host, params);&#xD;
		} else {&#xD;
			return defaultCmd.apply(id, host, params);&#xD;
		}&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOR3qa4iEeeb3J7owtunSg" name="addCmd" specification="_vLCWYK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOR3qq4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOR3q64iEeeb3J7owtunSg" name="cmd" type="_vEmXMK4iEeeb3J7owtunSg"/>
            <language>java</language>
            <body>cmds.put(id, cmd);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEg3oK4iEeeb3J7owtunSg" name="ATokVisitor" method="_vORQlK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vEg3oa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vEg3oq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOmnw64iEeeb3J7owtunSg">
              <body>Constructor that sets the default cmd to one that throws and IllegalArgumentException&quot; for any unknown tokens.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEg3o64iEeeb3J7owtunSg" type="_vEfpgK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vLBIQK4iEeeb3J7owtunSg" name="ATokVisitor" method="_vOR3oK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vLBIQq4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vLBIQ64iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOmnxK4iEeeb3J7owtunSg">
              <body>Constructor that sets the default cmd to the given command.&#xD;
	 * @param defaultCmd the default cmd to use.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vLBIQa4iEeeb3J7owtunSg" name="defaultCmd" type="_vEmXMK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vLBvUK4iEeeb3J7owtunSg" type="_vEfpgK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vLCWYK4iEeeb3J7owtunSg" name="addCmd" method="_vOR3qa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmnxa4iEeeb3J7owtunSg">
              <body>Add a new cmd or replace an existing cmd associated with the given host id.&#xD;
	 * @param id the id of the host to associate with this visitor.&#xD;
	 * @param cmd The command to associate with the given key value.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vLCWYa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLCWYq4iEeeb3J7owtunSg" name="cmd" type="_vEmXMK4iEeeb3J7owtunSg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vMa2cK4iEeeb3J7owtunSg" name="caseAt" method="_vOR3o64iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMa2ca4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMbdgK4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMbdga4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMcEkK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMbdgq4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vEkiAK4iEeeb3J7owtunSg" name="ITokVisitor">
          <ownedComment xmi:id="_vOmnxq4iEeeb3J7owtunSg">
            <body>Interface for a token visitor.</body>
          </ownedComment>
          <ownedOperation xmi:id="_vMcroK4iEeeb3J7owtunSg" name="caseAt">
            <ownedParameter xmi:id="_vMcroa4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMcroq4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMdSsK4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMd5wK4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMdSsa4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vEmXMK4iEeeb3J7owtunSg" name="ITokVisitorCmd">
          <ownedComment xmi:id="_vOmnx64iEeeb3J7owtunSg">
            <body>A command for use in ATokVisitors</body>
          </ownedComment>
          <ownedOperation xmi:id="_vMeg0K4iEeeb3J7owtunSg" name="apply">
            <ownedParameter xmi:id="_vMeg0a4iEeeb3J7owtunSg" name="id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMeg0q4iEeeb3J7owtunSg" name="host" type="_vEpagK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMeg064iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMfu8K4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMfH4K4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_vEoMYK4iEeeb3J7owtunSg" name="ITokenFactory">
          <ownedComment xmi:id="_vOmnyK4iEeeb3J7owtunSg">
            <body>Abstract factory to produce tokens</body>
          </ownedComment>
          <ownedOperation xmi:id="_vEozcK4iEeeb3J7owtunSg" name="makeToken">
            <ownedParameter xmi:id="_vEozca4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEozcq4iEeeb3J7owtunSg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLEyoK4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vEpagK4iEeeb3J7owtunSg" name="Token">
          <ownedComment xmi:id="_vOmnya4iEeeb3J7owtunSg">
            <body>Represents a token in the language.</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNf0gK4iEeeb3J7owtunSg" name="_name" visibility="package">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_vNgbka4iEeeb3J7owtunSg" name="_lexeme" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOSesK4iEeeb3J7owtunSg" name="Token" specification="_vEqooK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOSesa4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOSesq4iEeeb3J7owtunSg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOSes64iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>_name = name;&#xD;
		_lexeme = lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOTFwK4iEeeb3J7owtunSg" name="execute" specification="_vMgWAK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOTFwa4iEeeb3J7owtunSg" name="algo" type="_vEkiAK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vOTFwq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vOTFw64iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOTFxK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return algo.caseAt(_name, this, params);&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOTFxa4iEeeb3J7owtunSg" name="getName" specification="_vEr2wK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOTFxq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _name;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOTFx64iEeeb3J7owtunSg" name="getLexeme" specification="_vEr2wq4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOTFyK4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOTFya4iEeeb3J7owtunSg" name="toString" specification="_vEsd0a4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOTFyq4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <language>java</language>
            <body>return &quot;[&quot; + _name + &quot;] &quot; + _lexeme;&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEqooK4iEeeb3J7owtunSg" name="Token" method="_vOSesK4iEeeb3J7owtunSg">
            <eAnnotations xmi:id="_vErPsa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vErPsq4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedComment xmi:id="_vOmnyq4iEeeb3J7owtunSg">
              <body>Token constructor.&#xD;
	 *&#xD;
	 * @param name The name associated with this token.  This is the id value when it executes its visitors.&#xD;
	 * @param lexeme _lexeme this token is representing.</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEqooa4iEeeb3J7owtunSg" name="name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vErPsK4iEeeb3J7owtunSg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vErPs64iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vEr2wK4iEeeb3J7owtunSg" name="getName" method="_vOTFxa4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmny64iEeeb3J7owtunSg">
              <body>Accessor for the name of this token&#xD;
	 * @return The name of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEr2wa4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEr2wq4iEeeb3J7owtunSg" name="getLexeme" method="_vOTFx64iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOmnzK4iEeeb3J7owtunSg">
              <body>Accessor for the lexeme of this token&#xD;
	 * @return The lexeme of this token</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEsd0K4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vEsd0a4iEeeb3J7owtunSg" name="toString" method="_vOTFya4iEeeb3J7owtunSg">
            <ownedComment xmi:id="_vOnO0K4iEeeb3J7owtunSg">
              <body>Return a string representation of the token: &quot;[name] lexeme&quot;&#xD;
	 *&#xD;
	 * @return string representation</body>
            </ownedComment>
            <ownedParameter xmi:id="_vEsd0q4iEeeb3J7owtunSg" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:id="_vMgWAK4iEeeb3J7owtunSg" name="execute" method="_vOTFwK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vMgWAa4iEeeb3J7owtunSg" name="algo" type="_vEkiAK4iEeeb3J7owtunSg"/>
            <ownedParameter xmi:id="_vMgWAq4iEeeb3J7owtunSg" name="params" type="_vLxWMa4iEeeb3J7owtunSg">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vMg9Eq4iEeeb3J7owtunSg" value="*"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vMg9EK4iEeeb3J7owtunSg" type="_vLxWMa4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vEuTAK4iEeeb3J7owtunSg" name="TokenFactory">
          <ownedComment xmi:id="_vOnO0a4iEeeb3J7owtunSg">
            <body>Concrete factory to create tokens</body>
          </ownedComment>
          <ownedAttribute xmi:id="_vNhCoa4iEeeb3J7owtunSg" name="Singleton" isLeaf="true" isStatic="true" type="_vEuTAK4iEeeb3J7owtunSg" isReadOnly="true" association="_vPOS0a4iEeeb3J7owtunSg">
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNhpsK4iEeeb3J7owtunSg" value="new TokenFactory()"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_vLGAwK4iEeeb3J7owtunSg" client="_vEuTAK4iEeeb3J7owtunSg" supplier="_vEoMYK4iEeeb3J7owtunSg" contract="_vEoMYK4iEeeb3J7owtunSg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vOTs0K4iEeeb3J7owtunSg" name="makeToken" specification="_vEwIMK4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vOTs0a4iEeeb3J7owtunSg" name="name">
              <eAnnotations xmi:id="_vOTs0q4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vOTs064iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOTs1K4iEeeb3J7owtunSg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vOTs1a4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
            <language>java</language>
            <body>return new Token(name, lexeme);&#xD;
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_vEu6EK4iEeeb3J7owtunSg" name="TokenFactory" visibility="private">
            <eAnnotations xmi:id="_vEvhIK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_vEvhIa4iEeeb3J7owtunSg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_vEvhI64iEeeb3J7owtunSg" type="_vEuTAK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_vEwIMK4iEeeb3J7owtunSg" name="makeToken" method="_vOTs0K4iEeeb3J7owtunSg">
            <ownedParameter xmi:id="_vEwIMa4iEeeb3J7owtunSg" name="name">
              <eAnnotations xmi:id="_vEwvQa4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_vEwvQq4iEeeb3J7owtunSg" key="final"/>
              </eAnnotations>
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vEwvQK4iEeeb3J7owtunSg" name="lexeme">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedParameter>
            <ownedParameter xmi:id="_vLGn0K4iEeeb3J7owtunSg" type="_vEpagK4iEeeb3J7owtunSg" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPNrwa4iEeeb3J7owtunSg" name="" memberEnd="_vPNrwq4iEeeb3J7owtunSg _vNd_UK4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPNrwq4iEeeb3J7owtunSg" name="" type="_vEfpgK4iEeeb3J7owtunSg" association="_vPNrwa4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPNrxK4iEeeb3J7owtunSg" name="" memberEnd="_vPNrxa4iEeeb3J7owtunSg _vNemYa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPNrxa4iEeeb3J7owtunSg" name="" type="_vEfpgK4iEeeb3J7owtunSg" association="_vPNrxK4iEeeb3J7owtunSg"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_vPOS0a4iEeeb3J7owtunSg" name="" memberEnd="_vPOS0q4iEeeb3J7owtunSg _vNhCoa4iEeeb3J7owtunSg">
          <ownedEnd xmi:id="_vPOS0q4iEeeb3J7owtunSg" name="" type="_vEuTAK4iEeeb3J7owtunSg" association="_vPOS0a4iEeeb3J7owtunSg"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u-ERYq4iEeeb3J7owtunSg" name="view">
      <packagedElement xmi:type="uml:Interface" xmi:id="_vFz4IK4iEeeb3J7owtunSg" name="IModelAdapter">
        <ownedComment xmi:id="_vOoc-a4iEeeb3J7owtunSg">
          <body>The interface of control adapter from the view to the model&#xD;
that enables the view to talk to the model.&#xD;
Adapter that the view uses to communicate to the model for non-repetitive control tasks.&#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
&#xD;
@param &lt;TDropListItem> The items in the droplist.</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vF3iga4iEeeb3J7owtunSg" name="NULL_OBJECT" isLeaf="true" isStatic="true" type="_vFz4IK4iEeeb3J7owtunSg" isReadOnly="true" association="_vO47oK4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vF4woa4iEeeb3J7owtunSg" value="new IModelAdapter&lt;Object>() {&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public String loadMusic(String musicName) {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public String parseMusic() {&#xD;&#xA;&#x9;&#x9;&#x9;return null;&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void playMusic(Object instrument) {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;&#x9;@Override&#xD;&#xA;&#x9;&#x9;public void stopMusic() {&#xD;&#xA;&#x9;&#x9;}&#xD;&#xA;&#xD;&#xA;&#x9;}"/>
        </ownedAttribute>
        <ownedOperation xmi:id="_vF1tUK4iEeeb3J7owtunSg" name="loadMusic">
          <ownedComment xmi:id="_vOoc-q4iEeeb3J7owtunSg">
            <body>This method load music&#xD;
	 * @param musicName The name of the music&#xD;
	 * @return contents The contents of the music</body>
          </ownedComment>
          <ownedParameter xmi:id="_vF1tUa4iEeeb3J7owtunSg" name="musicName">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_vF2UYK4iEeeb3J7owtunSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vF2UYa4iEeeb3J7owtunSg" name="parseMusic">
          <ownedComment xmi:id="_vOoc-64iEeeb3J7owtunSg">
            <body>This method parse music&#xD;
	 * @return phrase The phrase of the music</body>
          </ownedComment>
          <ownedParameter xmi:id="_vF27cK4iEeeb3J7owtunSg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_vF3igK4iEeeb3J7owtunSg" name="stopMusic">
          <ownedComment xmi:id="_vOoc_a4iEeeb3J7owtunSg">
            <body>This method stop music</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vMpf8a4iEeeb3J7owtunSg" name="playMusic">
          <ownedComment xmi:id="_vOoc_K4iEeeb3J7owtunSg">
            <body>This method play music&#xD;
	 * reference: https://www.clear.rice.edu/comp504/f17/labs/lab07/&#xD;
	 * @param instrument The type of instrument</body>
          </ownedComment>
          <ownedParameter xmi:id="_vMpf8q4iEeeb3J7owtunSg" name="instrument" type="_vMo44K4iEeeb3J7owtunSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vF5-wK4iEeeb3J7owtunSg" name="View">
        <ownedComment xmi:id="_vOpEAK4iEeeb3J7owtunSg">
          <body>The view class for the Music Player&#xD;
 *&#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
@param &lt;TDropListItem> &#xD;
 *</body>
        </ownedComment>
        <generalization xmi:id="_vMr8Ma4iEeeb3J7owtunSg" general="_vLXtkK4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vNxhUK4iEeeb3J7owtunSg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vNxhUa4iEeeb3J7owtunSg" value="-1332591522166404893L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vNxhUq4iEeeb3J7owtunSg" name="contentPane" visibility="private" type="_vLYUoa4iEeeb3J7owtunSg" association="_vPTyYa4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vNyIYa4iEeeb3J7owtunSg" name="txtJtextarea" visibility="private" type="_vLaJ0a4iEeeb3J7owtunSg" association="_vPUZcK4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vNyvca4iEeeb3J7owtunSg" name="textField2" visibility="private" type="_vLebQa4iEeeb3J7owtunSg" association="_vPUZc64iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vNzWgK4iEeeb3J7owtunSg" name="textField1" visibility="private" type="_vLebQa4iEeeb3J7owtunSg" association="_vPVAga4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vNzWgq4iEeeb3J7owtunSg" name="_modelAdapter" visibility="package" type="_vFz4IK4iEeeb3J7owtunSg" association="_vPVnka4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vN0koq4iEeeb3J7owtunSg" name="comboBox" visibility="package" type="_vLb_Aa4iEeeb3J7owtunSg" association="_vPWOoa4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vN1ywa4iEeeb3J7owtunSg" value="new JComboBox&lt;TDropListItem>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vN2Z0K4iEeeb3J7owtunSg" name="btn_play" visibility="package" type="_vLbX8K4iEeeb3J7owtunSg" association="_vPW1sa4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vN2Z0a4iEeeb3J7owtunSg" value="new JButton(&quot;Play&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vN3A4K4iEeeb3J7owtunSg" name="btn_stop" visibility="package" type="_vLbX8K4iEeeb3J7owtunSg" association="_vPXcwK4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vN3A4a4iEeeb3J7owtunSg" value="new JButton(&quot;Stop&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vN3n8K4iEeeb3J7owtunSg" name="btn_load" visibility="package" type="_vLbX8K4iEeeb3J7owtunSg" association="_vPXcw64iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vN3n8a4iEeeb3J7owtunSg" value="new JButton(&quot;Load&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_vN3n864iEeeb3J7owtunSg" name="btn_parse" visibility="package" type="_vLbX8K4iEeeb3J7owtunSg" association="_vPYD0a4iEeeb3J7owtunSg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_vN4PAK4iEeeb3J7owtunSg" value="new JButton(&quot;Parse&quot;)"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vObBkK4iEeeb3J7owtunSg" name="View" specification="_vLg3gK4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vObBka4iEeeb3J7owtunSg" name="modelAdapter" type="_vFz4IK4iEeeb3J7owtunSg"/>
          <ownedParameter xmi:id="_vObBkq4iEeeb3J7owtunSg" type="_vF5-wK4iEeeb3J7owtunSg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>this._modelAdapter = modelAdapter;&#xD;
		initGUI();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vObBk64iEeeb3J7owtunSg" name="start" specification="_vF8bAK4iEeeb3J7owtunSg">
          <language>java</language>
          <body>setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vObooK4iEeeb3J7owtunSg" name="initGUI" specification="_vF9CEK4iEeeb3J7owtunSg">
          <language>java</language>
          <body>setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);&#xD;
		setBounds(100, 100, 700, 500);&#xD;
		contentPane = new JPanel();&#xD;
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));&#xD;
		contentPane.setLayout(new BorderLayout(0, 0));&#xD;
		setContentPane(contentPane);&#xD;
&#xD;
		JPanel panel_top = new JPanel();&#xD;
		contentPane.add(panel_top, BorderLayout.NORTH);&#xD;
&#xD;
		JLabel label_file = new JLabel(&quot;File: &quot;);&#xD;
		panel_top.add(label_file);&#xD;
&#xD;
		txtJtextarea = new JTextField();&#xD;
		txtJtextarea.setText(&quot;minuet&quot;);&#xD;
		panel_top.add(txtJtextarea);&#xD;
		txtJtextarea.setColumns(10);&#xD;
&#xD;
		/**&#xD;
		 * Load button&#xD;
		 */&#xD;
		btn_load.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				textField1.setText(_modelAdapter.loadMusic(txtJtextarea.getText()));&#xD;
				btn_parse.setEnabled(true);&#xD;
			}&#xD;
		});&#xD;
		panel_top.add(btn_load);&#xD;
&#xD;
		/**&#xD;
		 * Parse button&#xD;
		 */&#xD;
		btn_parse.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				textField2.setText(_modelAdapter.parseMusic());&#xD;
				btn_play.setEnabled(true);&#xD;
			}&#xD;
		});&#xD;
		panel_top.add(btn_parse);&#xD;
&#xD;
		comboBox.setPreferredSize(new Dimension(200, 21));&#xD;
		panel_top.add(comboBox);&#xD;
&#xD;
		/**&#xD;
		 * Play button&#xD;
		 */&#xD;
		btn_play.addActionListener(new ActionListener() {&#xD;
			@SuppressWarnings(&quot;unchecked&quot;)&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				_modelAdapter.playMusic((TDropListItem) comboBox.getSelectedItem());&#xD;
				btn_stop.setEnabled(true);&#xD;
			}&#xD;
		});&#xD;
		panel_top.add(btn_play);&#xD;
&#xD;
		/**&#xD;
		 * Stop button&#xD;
		 */&#xD;
		btn_stop.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				_modelAdapter.stopMusic();&#xD;
				btn_stop.setEnabled(false);&#xD;
			}&#xD;
		});&#xD;
		panel_top.add(btn_stop);&#xD;
&#xD;
		JSplitPane panel_main = new JSplitPane();&#xD;
		panel_main.setOrientation(JSplitPane.VERTICAL_SPLIT);&#xD;
		contentPane.add(panel_main, BorderLayout.CENTER);&#xD;
&#xD;
		JScrollPane scrollPane1 = new JScrollPane();&#xD;
		scrollPane1.setPreferredSize(new Dimension(2, 200));&#xD;
		panel_main.setLeftComponent(scrollPane1);&#xD;
&#xD;
		/**&#xD;
		 * Field that includes the contents of music&#xD;
		 */&#xD;
		textField1 = new JTextArea();&#xD;
		textField1&#xD;
				.setBorder(new TitledBorder(null, &quot;File Contents&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));&#xD;
		scrollPane1.setViewportView(textField1);&#xD;
		textField1.setColumns(10);&#xD;
&#xD;
		JScrollPane scrollPane2 = new JScrollPane();&#xD;
		panel_main.setRightComponent(scrollPane2);&#xD;
&#xD;
		/**&#xD;
		 * Field that includes the parsed contents of music&#xD;
		 */&#xD;
		textField2 = new JTextArea();&#xD;
		textField2.setBorder(&#xD;
				new TitledBorder(null, &quot;Parsed IPhrase structure&quot;, TitledBorder.LEADING, TitledBorder.TOP, null, null));&#xD;
		scrollPane2.setViewportView(textField2);&#xD;
		textField2.setColumns(10);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vObooa4iEeeb3J7owtunSg" name="addInstrument" specification="_vMrVIK4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vObooq4iEeeb3J7owtunSg" name="instrument" type="_vMo44K4iEeeb3J7owtunSg"/>
          <language>java</language>
          <body>this.comboBox.addItem(instrument);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_vF8bAK4iEeeb3J7owtunSg" name="start" method="_vObBk64iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOpEAq4iEeeb3J7owtunSg">
            <body>Start the app</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vF9CEK4iEeeb3J7owtunSg" name="initGUI" method="_vObooK4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOpEA64iEeeb3J7owtunSg">
            <body>Create the frame.&#xD;
	 * @return</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vLg3gK4iEeeb3J7owtunSg" name="View" method="_vObBkK4iEeeb3J7owtunSg">
          <eAnnotations xmi:id="_vLheka4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vLhekq4iEeeb3J7owtunSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vOpEAa4iEeeb3J7owtunSg">
            <body>The View</body>
          </ownedComment>
          <ownedParameter xmi:id="_vLhekK4iEeeb3J7owtunSg" name="modelAdapter" type="_vFz4IK4iEeeb3J7owtunSg"/>
          <ownedParameter xmi:id="_vLhek64iEeeb3J7owtunSg" type="_vF5-wK4iEeeb3J7owtunSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vMrVIK4iEeeb3J7owtunSg" name="addInstrument" method="_vObooa4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vMr8MK4iEeeb3J7owtunSg" name="instrument" type="_vMo44K4iEeeb3J7owtunSg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_vMo44K4iEeeb3J7owtunSg" name="TDropListItem"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO47oK4iEeeb3J7owtunSg" name="" memberEnd="_vO47oa4iEeeb3J7owtunSg _vF3iga4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO47oa4iEeeb3J7owtunSg" name="" type="_vFz4IK4iEeeb3J7owtunSg" association="_vO47oK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPTyYa4iEeeb3J7owtunSg" name="" memberEnd="_vPTyYq4iEeeb3J7owtunSg _vNxhUq4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPTyYq4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPTyYa4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPUZcK4iEeeb3J7owtunSg" name="" memberEnd="_vPUZca4iEeeb3J7owtunSg _vNyIYa4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPUZca4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPUZcK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPUZc64iEeeb3J7owtunSg" name="" memberEnd="_vPUZdK4iEeeb3J7owtunSg _vNyvca4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPUZdK4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPUZc64iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPVAga4iEeeb3J7owtunSg" name="" memberEnd="_vPVAgq4iEeeb3J7owtunSg _vNzWgK4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPVAgq4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPVAga4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPVnka4iEeeb3J7owtunSg" name="" memberEnd="_vPVnkq4iEeeb3J7owtunSg _vNzWgq4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPVnkq4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPVnka4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPWOoa4iEeeb3J7owtunSg" name="" memberEnd="_vPWOoq4iEeeb3J7owtunSg _vN0koq4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPWOoq4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPWOoa4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPW1sa4iEeeb3J7owtunSg" name="" memberEnd="_vPW1sq4iEeeb3J7owtunSg _vN2Z0K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPW1sq4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPW1sa4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPXcwK4iEeeb3J7owtunSg" name="" memberEnd="_vPXcwa4iEeeb3J7owtunSg _vN3A4K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPXcwa4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPXcwK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPXcw64iEeeb3J7owtunSg" name="" memberEnd="_vPXcxK4iEeeb3J7owtunSg _vN3n8K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPXcxK4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPXcw64iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vPYD0a4iEeeb3J7owtunSg" name="" memberEnd="_vPYD0q4iEeeb3J7owtunSg _vN3n864iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vPYD0q4iEeeb3J7owtunSg" name="" type="_vF5-wK4iEeeb3J7owtunSg" association="_vPYD0a4iEeeb3J7owtunSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u-GtoK4iEeeb3J7owtunSg" name="controller">
      <packagedElement xmi:type="uml:Class" xmi:id="_vCAWMK4iEeeb3J7owtunSg" name="Controller">
        <ownedComment xmi:id="_vOer8K4iEeeb3J7owtunSg">
          <body>&#xD;
MVC Controller for the app&#xD;
Contain the main() method. &#xD;
@author Yuchang Shen&#xD;
@author Chen Zeng&#xD;
@version 1.0&#xD;
 *</body>
        </ownedComment>
        <ownedAttribute xmi:id="_vMyC0K4iEeeb3J7owtunSg" name="_model" visibility="private" type="_vCHq8K4iEeeb3J7owtunSg" association="_vO5isK4iEeeb3J7owtunSg"/>
        <ownedAttribute xmi:id="_vMzQ8K4iEeeb3J7owtunSg" name="_view" visibility="private" type="_vF5-wK4iEeeb3J7owtunSg" association="_vO6Jwa4iEeeb3J7owtunSg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN6rQK4iEeeb3J7owtunSg" name="start" specification="_vCCLYK4iEeeb3J7owtunSg">
          <language>java</language>
          <body>_model.start();&#xD;
		_view.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN7SUK4iEeeb3J7owtunSg" name="Controller" specification="_vCCycK4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN7SUa4iEeeb3J7owtunSg" type="_vCAWMK4iEeeb3J7owtunSg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>_model = new Model(new IViewAdapter() {&#xD;
			@Override&#xD;
			public void addInstrument(ABCInstrument instrument) {&#xD;
				_view.addInstrument(instrument);&#xD;
			}&#xD;
		});&#xD;
&#xD;
		_view = new View&lt;ABCInstrument>(new IModelAdapter&lt;ABCInstrument>() {&#xD;
			@Override&#xD;
			public String loadMusic(String musicName) {&#xD;
				return _model.loadMusic(musicName);&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public String parseMusic() {&#xD;
				return _model.parseMusic();&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public void playMusic(ABCInstrument instrument) {&#xD;
				_model.playMusic(instrument);&#xD;
			}&#xD;
&#xD;
			@Override&#xD;
			public void stopMusic() {&#xD;
				_model.stopMusic();&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_vN75YK4iEeeb3J7owtunSg" name="main" specification="_vCDZgK4iEeeb3J7owtunSg">
          <ownedParameter xmi:id="_vN75Ya4iEeeb3J7owtunSg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vN75Yq4iEeeb3J7owtunSg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>EventQueue.invokeLater(new Runnable() {&#xD;
			public void run() {&#xD;
				try {&#xD;
					Controller controller = new Controller();&#xD;
					controller.start();&#xD;
				} catch (Exception e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_vCCLYK4iEeeb3J7owtunSg" name="start" visibility="protected" method="_vN6rQK4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOer8a4iEeeb3J7owtunSg">
            <body>Start method of this Controller.</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_vCCycK4iEeeb3J7owtunSg" name="Controller" method="_vN7SUK4iEeeb3J7owtunSg">
          <eAnnotations xmi:id="_vCCyca4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_vCCycq4iEeeb3J7owtunSg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_vOfTAK4iEeeb3J7owtunSg">
            <body>The Controller constructor</body>
          </ownedComment>
          <ownedParameter xmi:id="_vCCyc64iEeeb3J7owtunSg" type="_vCAWMK4iEeeb3J7owtunSg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_vCDZgK4iEeeb3J7owtunSg" name="main" isStatic="true" method="_vN75YK4iEeeb3J7owtunSg">
          <ownedComment xmi:id="_vOfTAa4iEeeb3J7owtunSg">
            <body>Controller Main function&#xD;
	 * @param args Arguments by default</body>
          </ownedComment>
          <ownedParameter xmi:id="_vCDZga4iEeeb3J7owtunSg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_vCEAkK4iEeeb3J7owtunSg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO5isK4iEeeb3J7owtunSg" name="" memberEnd="_vO5isa4iEeeb3J7owtunSg _vMyC0K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO5isa4iEeeb3J7owtunSg" name="" type="_vCAWMK4iEeeb3J7owtunSg" association="_vO5isK4iEeeb3J7owtunSg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_vO6Jwa4iEeeb3J7owtunSg" name="" memberEnd="_vO6Jwq4iEeeb3J7owtunSg _vMzQ8K4iEeeb3J7owtunSg">
        <ownedEnd xmi:id="_vO6Jwq4iEeeb3J7owtunSg" name="" type="_vCAWMK4iEeeb3J7owtunSg" association="_vO6Jwa4iEeeb3J7owtunSg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_u_TngK4iEeeb3J7owtunSg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_u_Tnga4iEeeb3J7owtunSg" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_u_Tngq4iEeeb3J7owtunSg" name="midi">
          <packagedElement xmi:type="uml:Class" xmi:id="_vLQ_4K4iEeeb3J7owtunSg" name="Instrument"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vLRm8a4iEeeb3J7owtunSg" name="MidiSystem"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vLSOAa4iEeeb3J7owtunSg" name="MidiUnavailableException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_vLS1EK4iEeeb3J7owtunSg" name="Synthesizer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vMUv0K4iEeeb3J7owtunSg" name="Sequence"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vMV98K4iEeeb3J7owtunSg" name="Track"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_vMXMEK4iEeeb3J7owtunSg" name="Sequencer"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_vAmA8K4iEeeb3J7owtunSg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_vAmoAK4iEeeb3J7owtunSg" name="border">
          <packagedElement xmi:type="uml:Class" xmi:id="_vLY7sK4iEeeb3J7owtunSg" name="EmptyBorder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_vLb_A64iEeeb3J7owtunSg" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLXtkK4iEeeb3J7owtunSg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLYUoa4iEeeb3J7owtunSg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLZiwa4iEeeb3J7owtunSg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLaJ0a4iEeeb3J7owtunSg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLbX8K4iEeeb3J7owtunSg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLb_Aa4iEeeb3J7owtunSg" name="JComboBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLd0Ma4iEeeb3J7owtunSg" name="JSplitPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLebQa4iEeeb3J7owtunSg" name="JTextArea"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_vLfCUa4iEeeb3J7owtunSg" name="JScrollPane"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_t-YWAK4iEeeb3J7owtunSg">
      <eAnnotations xmi:id="_t-Y9EK4iEeeb3J7owtunSg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_t-Y9Ea4iEeeb3J7owtunSg" base_Package="_t1opsK4iEeeb3J7owtunSg">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vCxLMK4iEeeb3J7owtunSg" base_Element="_vCv9EK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vC68Mq4iEeeb3J7owtunSg" base_Element="_vC68MK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vC7jQK4iEeeb3J7owtunSg" base_Element="_vC68MK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vC7jQa4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vDdHsa4iEeeb3J7owtunSg" base_Element="_vDcgoK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vDxQwq4iEeeb3J7owtunSg" base_Element="_vDwpsK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vD2JQK4iEeeb3J7owtunSg" base_Element="_vD1iMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vD4lgK4iEeeb3J7owtunSg" base_Element="_vD3-cK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vD4lga4iEeeb3J7owtunSg" base_Element="_vD3-cK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vD4lgq4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vEvhIq4iEeeb3J7owtunSg" base_Element="_vEu6EK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vE9jkK4iEeeb3J7owtunSg" base_Element="_vE88gq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:StyledElement xmi:id="_vE-Koa4iEeeb3J7owtunSg" base_Element="_vE-KoK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vFB1Aa4iEeeb3J7owtunSg" base_Element="_vFBN8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vFB1Aq4iEeeb3J7owtunSg" base_Element="_vFBN8a4iEeeb3J7owtunSg">
    <annotations xmi:id="_vFB1A64iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vFDDIK4iEeeb3J7owtunSg" base_Element="_vFCcEK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vFDDIa4iEeeb3J7owtunSg" base_Element="_vFCcEK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vFDDIq4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vFjZca4iEeeb3J7owtunSg" base_Element="_vFiyYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vFoR8K4iEeeb3J7owtunSg" base_Element="_vFl1sK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vF1GQK4iEeeb3J7owtunSg" genericsValue="TDropListItem" base_Element="_vFz4IK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vF4woK4iEeeb3J7owtunSg" genericsValue="Object" base_Element="_vF3iga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vF7M4K4iEeeb3J7owtunSg" genericsValue="TDropListItem" base_Element="_vF5-wK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vKI-gK4iEeeb3J7owtunSg" base_Element="_vKHwYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vKLawK4iEeeb3J7owtunSg" base_Element="_vKKMoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vKXA8K4iEeeb3J7owtunSg" base_Element="_vKVy0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vKXoAK4iEeeb3J7owtunSg" base_Element="_vKXA8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vKb5cq4iEeeb3J7owtunSg" base_Element="_vKbSYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vKcgga4iEeeb3J7owtunSg" base_Element="_vKbSYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vKhZAK4iEeeb3J7owtunSg" base_Element="_vKgx8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vKiAEK4iEeeb3J7owtunSg" base_Element="_vKgx8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vKwpka4iEeeb3J7owtunSg" base_Element="_vKwCgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vKwplK4iEeeb3J7owtunSg" base_Element="_vKwCga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vKx3sq4iEeeb3J7owtunSg" base_Element="_vKxQoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vKx3ta4iEeeb3J7owtunSg" base_Element="_vKxQoq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vKyewq4iEeeb3J7owtunSg" base_Element="_vKyewK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vKyexK4iEeeb3J7owtunSg" base_Element="_vKyewa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vK2JJK4iEeeb3J7owtunSg" base_Element="_vK2JIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vK2wMq4iEeeb3J7owtunSg" dimensions="1" base_Element="_vK2JIa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:StyledElement xmi:id="_vLJrIq4iEeeb3J7owtunSg" base_Element="_vLJrIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLKSMK4iEeeb3J7owtunSg" base_Element="_vLJrI64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLK5QK4iEeeb3J7owtunSg" base_Element="_vLKSMa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLLgUK4iEeeb3J7owtunSg" base_Element="_vLK5Qa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLMHYK4iEeeb3J7owtunSg" base_Element="_vLLgUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLNVgK4iEeeb3J7owtunSg" base_Element="_vLMucK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLN8kK4iEeeb3J7owtunSg" base_Element="_vLNVga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLOjoK4iEeeb3J7owtunSg" base_Element="_vLN8ka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLRm8K4iEeeb3J7owtunSg" base_Element="_vLQ_4K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLSOAK4iEeeb3J7owtunSg" base_Element="_vLRm8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLSOAq4iEeeb3J7owtunSg" base_Element="_vLSOAa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLS1Ea4iEeeb3J7owtunSg" base_Element="_vLS1EK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLXGga4iEeeb3J7owtunSg" base_Element="_vLXGgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLYUoK4iEeeb3J7owtunSg" base_Element="_vLXtkK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLYUoq4iEeeb3J7owtunSg" base_Element="_vLYUoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLZiwK4iEeeb3J7owtunSg" base_Element="_vLY7sK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLaJ0K4iEeeb3J7owtunSg" base_Element="_vLZiwa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLaw4K4iEeeb3J7owtunSg" base_Element="_vLaJ0a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLb_AK4iEeeb3J7owtunSg" base_Element="_vLbX8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLb_Aq4iEeeb3J7owtunSg" base_Element="_vLb_Aa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLcmEK4iEeeb3J7owtunSg" base_Element="_vLb_A64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLd0MK4iEeeb3J7owtunSg" base_Element="_vLdNIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLebQK4iEeeb3J7owtunSg" base_Element="_vLd0Ma4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLfCUK4iEeeb3J7owtunSg" base_Element="_vLebQa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLfpYK4iEeeb3J7owtunSg" base_Element="_vLfCUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLfpYq4iEeeb3J7owtunSg" base_Element="_vLfpYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLgQcK4iEeeb3J7owtunSg" base_Element="_vLfpY64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vLiFoK4iEeeb3J7owtunSg" genericsValue="TDropListItem" base_Element="_vLhekK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLu58K4iEeeb3J7owtunSg" base_Element="_vLtr0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vLx9QK4iEeeb3J7owtunSg" base_Element="_vLxWMa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vLzLYK4iEeeb3J7owtunSg" base_Element="_vLykUK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vLzLYq4iEeeb3J7owtunSg" base_Element="_vLykU64iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL1Aka4iEeeb3J7owtunSg" base_Element="_vL0ZgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL1noK4iEeeb3J7owtunSg" base_Element="_vL0Zgq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vL1noa4iEeeb3J7owtunSg" base_Element="_vL0ZgK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vL1noq4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL3c0a4iEeeb3J7owtunSg" base_Element="_vL21wK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL3c064iEeeb3J7owtunSg" base_Element="_vL21wq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vL4D4K4iEeeb3J7owtunSg" base_Element="_vL21wK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vL4D4a4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL5SAa4iEeeb3J7owtunSg" base_Element="_vL4q8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL55Ea4iEeeb3J7owtunSg" base_Element="_vL4q8q4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vL55Eq4iEeeb3J7owtunSg" base_Element="_vL4q8K4iEeeb3J7owtunSg">
    <annotations xmi:id="_vL55E64iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL7HMa4iEeeb3J7owtunSg" base_Element="_vL6gIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL7uQK4iEeeb3J7owtunSg" dimensions="1" base_Element="_vL6gIq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vL7uQa4iEeeb3J7owtunSg" base_Element="_vL6gIK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vL7uQq4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL88Ya4iEeeb3J7owtunSg" base_Element="_vL8VUK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL9jcK4iEeeb3J7owtunSg" base_Element="_vL8VUq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vL-xkK4iEeeb3J7owtunSg" base_Element="_vL-KgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vL_YoK4iEeeb3J7owtunSg" base_Element="_vL-Kg64iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMBN0K4iEeeb3J7owtunSg" base_Element="_vL__sK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMBN0q4iEeeb3J7owtunSg" base_Element="_vMAmwq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMCb864iEeeb3J7owtunSg" base_Element="_vMB04K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMDDAa4iEeeb3J7owtunSg" base_Element="_vMCb8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMDDAq4iEeeb3J7owtunSg" base_Element="_vMB04K4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMDDA64iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vME4MK4iEeeb3J7owtunSg" base_Element="_vMERIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vME4Mq4iEeeb3J7owtunSg" base_Element="_vMERIq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMFfQK4iEeeb3J7owtunSg" base_Element="_vMERIK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMFfQa4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMJwsq4iEeeb3J7owtunSg" base_Element="_vMJJoK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMKXwa4iEeeb3J7owtunSg" base_Element="_vMJwsK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMK-0K4iEeeb3J7owtunSg" base_Element="_vMJJoK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMK-0a4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMOpMK4iEeeb3J7owtunSg" base_Element="_vMOCIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMPQQa4iEeeb3J7owtunSg" base_Element="_vMOCIq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMP3UK4iEeeb3J7owtunSg" base_Element="_vMOCIK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMP3Ua4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMRFc64iEeeb3J7owtunSg" base_Element="_vMQeYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMRsga4iEeeb3J7owtunSg" base_Element="_vMRFca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMRsgq4iEeeb3J7owtunSg" base_Element="_vMQeYK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMRsg64iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMThsK4iEeeb3J7owtunSg" base_Element="_vMS6oK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMThsq4iEeeb3J7owtunSg" base_Element="_vMS6oq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Annotations xmi:id="_vMUIwK4iEeeb3J7owtunSg" base_Element="_vMS6oK4iEeeb3J7owtunSg">
    <annotations xmi:id="_vMUIwa4iEeeb3J7owtunSg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_vMVW4K4iEeeb3J7owtunSg" base_Element="_vMUv0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vMWlAK4iEeeb3J7owtunSg" base_Element="_vMV98K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vMXzIK4iEeeb3J7owtunSg" base_Element="_vMXMEK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMbdg64iEeeb3J7owtunSg" base_Element="_vMa2cK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMcEka4iEeeb3J7owtunSg" base_Element="_vMbdga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMdSsq4iEeeb3J7owtunSg" base_Element="_vMcroK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMd5wa4iEeeb3J7owtunSg" base_Element="_vMdSsK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMfH4a4iEeeb3J7owtunSg" base_Element="_vMeg0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMfu8a4iEeeb3J7owtunSg" base_Element="_vMeg064iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMg9Ea4iEeeb3J7owtunSg" base_Element="_vMgWAK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vMhkIK4iEeeb3J7owtunSg" base_Element="_vMgWAq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vMjZUK4iEeeb3J7owtunSg" base_Element="_vMiLMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vMnDsK4iEeeb3J7owtunSg" base_Element="_vMmcoK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vMpf8K4iEeeb3J7owtunSg" base_Element="_vMo44K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vMyp4K4iEeeb3J7owtunSg" base_Element="_vMyC0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vMz4AK4iEeeb3J7owtunSg" genericsValue="ABCInstrument" base_Element="_vMzQ8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM0fEK4iEeeb3J7owtunSg" base_Element="_vMzQ8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM1GIK4iEeeb3J7owtunSg" base_Element="_vM0fEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM1tMK4iEeeb3J7owtunSg" base_Element="_vM1GIa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM1tMq4iEeeb3J7owtunSg" base_Element="_vM1tMa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM2UQK4iEeeb3J7owtunSg" base_Element="_vM1tM64iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM27UK4iEeeb3J7owtunSg" base_Element="_vM2UQa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM27Uq4iEeeb3J7owtunSg" base_Element="_vM27Ua4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM3iYa4iEeeb3J7owtunSg" base_Element="_vM3iYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM4JcK4iEeeb3J7owtunSg" base_Element="_vM3iYq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM4Jc64iEeeb3J7owtunSg" base_Element="_vM4Jca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vM4wgK4iEeeb3J7owtunSg" genericsValue="DecoratorSeqList" base_Element="_vM4JdK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM5XkK4iEeeb3J7owtunSg" base_Element="_vM4JdK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vM5-oK4iEeeb3J7owtunSg" genericsValue="DecoratorSeqList" base_Element="_vM5Xka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM5-oq4iEeeb3J7owtunSg" base_Element="_vM5Xka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM6lsq4iEeeb3J7owtunSg" base_Element="_vM6lsK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM7Mwq4iEeeb3J7owtunSg" base_Element="_vM7MwK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM7z0a4iEeeb3J7owtunSg" base_Element="_vM7Mw64iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM8a4a4iEeeb3J7owtunSg" base_Element="_vM7z0q4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM9B8a4iEeeb3J7owtunSg" base_Element="_vM8a4q4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM9pAK4iEeeb3J7owtunSg" base_Element="_vM9B8q4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM-QEK4iEeeb3J7owtunSg" base_Element="_vM9pAa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM-3Ia4iEeeb3J7owtunSg" base_Element="_vM-3IK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vM_eMa4iEeeb3J7owtunSg" base_Element="_vM-3Iq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNBTYK4iEeeb3J7owtunSg" base_Element="_vNAsUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNB6cK4iEeeb3J7owtunSg" base_Element="_vNBTYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNChgK4iEeeb3J7owtunSg" base_Element="_vNB6ca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNDIkK4iEeeb3J7owtunSg" base_Element="_vNChga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNE9wK4iEeeb3J7owtunSg" base_Element="_vNEWsq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNE9wq4iEeeb3J7owtunSg" base_Element="_vNE9wa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNGy8K4iEeeb3J7owtunSg" base_Element="_vNE9w64iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNLEYK4iEeeb3J7owtunSg" base_Element="_vNKdUq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNM5ka4iEeeb3J7owtunSg" dimensions="1" base_Element="_vNMSgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNNgoK4iEeeb3J7owtunSg" base_Element="_vNMSgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNOHsa4iEeeb3J7owtunSg" dimensions="1" base_Element="_vNNgoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNOuwK4iEeeb3J7owtunSg" base_Element="_vNNgoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNPV0K4iEeeb3J7owtunSg" base_Element="_vNOuwa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNSZIK4iEeeb3J7owtunSg" base_Element="_vNRyEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNSZIq4iEeeb3J7owtunSg" base_Element="_vNSZIa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNTAMa4iEeeb3J7owtunSg" base_Element="_vNTAMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNTnQa4iEeeb3J7owtunSg" base_Element="_vNTnQK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNUOUK4iEeeb3J7owtunSg" base_Element="_vNTnQq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNU1YK4iEeeb3J7owtunSg" base_Element="_vNUOUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNVccK4iEeeb3J7owtunSg" base_Element="_vNU1Ya4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNWDgK4iEeeb3J7owtunSg" base_Element="_vNVcca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNWDg64iEeeb3J7owtunSg" base_Element="_vNWDga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNYfwa4iEeeb3J7owtunSg" base_Element="_vNYfwK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNZt4K4iEeeb3J7owtunSg" base_Element="_vNZG0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNaU8K4iEeeb3J7owtunSg" base_Element="_vNZt4a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNaU8q4iEeeb3J7owtunSg" base_Element="_vNaU8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNbjEK4iEeeb3J7owtunSg" base_Element="_vNa8AK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNcKIK4iEeeb3J7owtunSg" base_Element="_vNbjEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNcxM64iEeeb3J7owtunSg" base_Element="_vNcKIa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNemYK4iEeeb3J7owtunSg" base_Element="_vNd_UK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNfNcK4iEeeb3J7owtunSg" base_Element="_vNemYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNgbkK4iEeeb3J7owtunSg" base_Element="_vNf0gK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNhCoK4iEeeb3J7owtunSg" base_Element="_vNgbka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNiQwK4iEeeb3J7owtunSg" base_Element="_vNhpsa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNi30q4iEeeb3J7owtunSg" base_Element="_vNi30K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vNkF8K4iEeeb3J7owtunSg" genericsValue="Map&lt;String, String>" base_Element="_vNje4a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNktAK4iEeeb3J7owtunSg" base_Element="_vNje4a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNktA64iEeeb3J7owtunSg" base_Element="_vNktAa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vNlUEa4iEeeb3J7owtunSg" genericsValue="Token" base_Element="_vNlUEK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNl7IK4iEeeb3J7owtunSg" base_Element="_vNlUEK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vNnJQK4iEeeb3J7owtunSg" genericsValue="String" base_Element="_vNmiMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNnwUa4iEeeb3J7owtunSg" base_Element="_vNmiMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNo-cK4iEeeb3J7owtunSg" base_Element="_vNoXYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNplgK4iEeeb3J7owtunSg" base_Element="_vNo-ca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNsBwK4iEeeb3J7owtunSg" base_Element="_vNrasK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNso0K4iEeeb3J7owtunSg" base_Element="_vNsBwq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNtP4K4iEeeb3J7owtunSg" base_Element="_vNso0q4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNt28a4iEeeb3J7owtunSg" base_Element="_vNt28K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNueAq4iEeeb3J7owtunSg" base_Element="_vNueAK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNvFE64iEeeb3J7owtunSg" base_Element="_vNvFEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNvsIa4iEeeb3J7owtunSg" base_Element="_vNvFEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Array xmi:id="_vNwTMK4iEeeb3J7owtunSg" base_Element="_vNvsIq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNwTMq4iEeeb3J7owtunSg" base_Element="_vNvsIq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNyIYK4iEeeb3J7owtunSg" base_Element="_vNxhUq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNyvcK4iEeeb3J7owtunSg" base_Element="_vNyIYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNyvcq4iEeeb3J7owtunSg" base_Element="_vNyvca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vNzWga4iEeeb3J7owtunSg" base_Element="_vNzWgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vN0koK4iEeeb3J7owtunSg" genericsValue="TDropListItem" base_Element="_vNzWgq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN0koa4iEeeb3J7owtunSg" base_Element="_vNzWgq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Generics xmi:id="_vN1ywK4iEeeb3J7owtunSg" genericsValue="TDropListItem" base_Element="_vN0koq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN1ywq4iEeeb3J7owtunSg" base_Element="_vN0koq4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN2Z0q4iEeeb3J7owtunSg" base_Element="_vN2Z0K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN3A4q4iEeeb3J7owtunSg" base_Element="_vN3A4K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN3n8q4iEeeb3J7owtunSg" base_Element="_vN3n8K4iEeeb3J7owtunSg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_vN4PAa4iEeeb3J7owtunSg" base_Element="_vN3n864iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO3GcK4iEeeb3J7owtunSg" base_Element="_vO2fYK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO4UkK4iEeeb3J7owtunSg" base_Element="_vO3tgK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO4Uk64iEeeb3J7owtunSg" base_Element="_vO4Uka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO47oq4iEeeb3J7owtunSg" base_Element="_vO47oK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO6JwK4iEeeb3J7owtunSg" base_Element="_vO5isK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO6w0K4iEeeb3J7owtunSg" base_Element="_vO6Jwa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO7X4K4iEeeb3J7owtunSg" base_Element="_vO6w0a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO7-8K4iEeeb3J7owtunSg" base_Element="_vO7X4a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO9NEK4iEeeb3J7owtunSg" base_Element="_vO8mAK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO90IK4iEeeb3J7owtunSg" base_Element="_vO9NEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO-bMK4iEeeb3J7owtunSg" base_Element="_vO90Ia4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vO_pUK4iEeeb3J7owtunSg" base_Element="_vO-bMa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPAQYK4iEeeb3J7owtunSg" base_Element="_vO_pUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPBegK4iEeeb3J7owtunSg" base_Element="_vPA3cK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPCFkK4iEeeb3J7owtunSg" base_Element="_vPBega4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPCsoK4iEeeb3J7owtunSg" base_Element="_vPCFka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPDTsK4iEeeb3J7owtunSg" base_Element="_vPCsoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPEh0K4iEeeb3J7owtunSg" base_Element="_vPD6wK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPFI4K4iEeeb3J7owtunSg" base_Element="_vPEh0a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPFv8K4iEeeb3J7owtunSg" base_Element="_vPFI4a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPGXAK4iEeeb3J7owtunSg" base_Element="_vPFv8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPG-EK4iEeeb3J7owtunSg" base_Element="_vPGXAa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPHlIK4iEeeb3J7owtunSg" base_Element="_vPG-Ea4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPHlI64iEeeb3J7owtunSg" base_Element="_vPHlIa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPIMMq4iEeeb3J7owtunSg" base_Element="_vPIMMK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPIzQK4iEeeb3J7owtunSg" base_Element="_vPIMM64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPJaUK4iEeeb3J7owtunSg" base_Element="_vPIzQa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPKBYK4iEeeb3J7owtunSg" base_Element="_vPJaUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPKocK4iEeeb3J7owtunSg" base_Element="_vPKBYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPLPgK4iEeeb3J7owtunSg" base_Element="_vPKoca4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPL2kK4iEeeb3J7owtunSg" base_Element="_vPLPga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPMdoK4iEeeb3J7owtunSg" base_Element="_vPL2ka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPNEsK4iEeeb3J7owtunSg" base_Element="_vPMdoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPNrwK4iEeeb3J7owtunSg" base_Element="_vPNEsa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPNrw64iEeeb3J7owtunSg" base_Element="_vPNrwa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPOS0K4iEeeb3J7owtunSg" base_Element="_vPNrxK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPO54K4iEeeb3J7owtunSg" base_Element="_vPOS0a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPPg8K4iEeeb3J7owtunSg" base_Element="_vPO54a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPQIAK4iEeeb3J7owtunSg" base_Element="_vPPg8a4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPQvEK4iEeeb3J7owtunSg" base_Element="_vPQIAa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPQvE64iEeeb3J7owtunSg" base_Element="_vPQvEa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPRWIq4iEeeb3J7owtunSg" base_Element="_vPRWIK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPR9MK4iEeeb3J7owtunSg" base_Element="_vPRWI64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPSkQK4iEeeb3J7owtunSg" base_Element="_vPR9Ma4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPTLUK4iEeeb3J7owtunSg" base_Element="_vPSkQa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPTyYK4iEeeb3J7owtunSg" base_Element="_vPTLUa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPTyY64iEeeb3J7owtunSg" base_Element="_vPTyYa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPUZcq4iEeeb3J7owtunSg" base_Element="_vPUZcK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPVAgK4iEeeb3J7owtunSg" base_Element="_vPUZc64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPVnkK4iEeeb3J7owtunSg" base_Element="_vPVAga4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPWOoK4iEeeb3J7owtunSg" base_Element="_vPVnka4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPW1sK4iEeeb3J7owtunSg" base_Element="_vPWOoa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPW1s64iEeeb3J7owtunSg" base_Element="_vPW1sa4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPXcwq4iEeeb3J7owtunSg" base_Element="_vPXcwK4iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPYD0K4iEeeb3J7owtunSg" base_Element="_vPXcw64iEeeb3J7owtunSg"/>
  <UMLLabProfile:Reference xmi:id="_vPYq4K4iEeeb3J7owtunSg" base_Element="_vPYD0a4iEeeb3J7owtunSg"/>
</xmi:XMI>
