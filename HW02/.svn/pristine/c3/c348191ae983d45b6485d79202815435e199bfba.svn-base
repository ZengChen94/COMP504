package controller;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics;

import balls.ASprite;
import model.*;
import view.*;

/**
 * MVC Controller for the system
 */
public class Controller {

	// Fields for the adapters to close over:
	private BallModel model;  // starts off null but will be fine when the constructor is finished.
	private BallGUI view;  // starts off null but will be fine when the constructor is finished.
	
	private int x_position = 10;
	private int y_position = 10;
	private int radius = 10;
	
	/**
	 * Controller constructor builds the system
	 */
	public Controller() {
		// set the model field
		model = new BallModel( new IModel2ViewAdapter() {
			@Override
			public void update() {
				view.update();
			}
		}); 
		
		// set the view field
		view = new BallGUI( new IView2ModelAdapter() {
			@Override
			public void paint(Graphics g) {
				clearCanvas();
				model.add(new ASprite(x_position, y_position, radius, Color.RED));
				x_position += 2;
				y_position += 2;
				model.update(g);
			}
			
			@Override
			public void clearCanvas() {
				model.clearAllBalls();
			}
		
		}); 
	}
	
	/**
	 * Start the system
	 */
	public void start() {
		model.start();  // It is usually better to start the model first but not always.
		view.start();	
	}
	
	/**
	 * Launch the application.
	 * @param args Arguments given by the system or command line.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {   // Java specs say that the system must be constructed on the GUI event thread.
			public void run() {
				try {
					Controller controller = new Controller();   // instantiate the system
					controller.start();  // start the system
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
}